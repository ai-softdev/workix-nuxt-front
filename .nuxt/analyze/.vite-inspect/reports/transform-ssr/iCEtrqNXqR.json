{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/components/Tests/TestLists.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, unref as _unref } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport {useTestList} from \"~/stores/test\";\r\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\r\nimport TheModal from \"~/components/UI/TheModal.vue\";\r\nimport TheButton from \"~/components/UI/TheButton.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TestLists',\n  __ssrInlineRender: true,\n  props: {\r\n  test: {\r\n    type: Object,\r\n    default: () => {\r\n    }\r\n  },\r\n  openTest: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  showTestError: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n},\n  setup(__props) {\n\r\nconst testList = useTestList()\r\n\r\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"p-2 border flex items-center justify-between cursor-pointer rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-all\"><div class=\"w-full\"><p>${\n    _ssrInterpolate(__props.test?.question.length > 20 ? __props.test.question?.slice(0, 20) + '...' : __props.test?.question)\n  }</p></div><div><div class=\"cursor-pointer bg-red-400 p-2 rounded-lg\"><svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"-3.5 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\"></path></svg></div></div></div>`)\n  if (__props.openTest) {\n    _push(_ssrRenderComponent(TheModal, {\n      onShowModal: ($event: any) => (__props.openTest = !__props.openTest)\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(_ssrRenderComponent(TheTextContent, { class: \"break-words\" }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Тест:') + ' ' + __props.test.question)}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Тест:') + ' ' + __props.test.question), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`<p class=\"my-2\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_ctx.$t('Варианты ответа:'))\n          }</p><div class=\"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\"${\n            _scopeId\n          }><!--[-->`)\n          _ssrRenderList(__props.test.options, (item) => {\n            _push(`<div class=\"max-lg:w-full w-6/12\"${\n              _scopeId\n            }><p class=\"border p-2 rounded-lg break-words\"${\n              _scopeId\n            }>${\n              _ssrInterpolate(item.text)\n            }</p></div>`)\n          })\n          _push(`<!--]--></div>`)\n        } else {\n          return [\n            _createVNode(TheTextContent, { class: \"break-words\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('Тест:') + ' ' + __props.test.question), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(\"p\", { class: \"my-2\" }, _toDisplayString(_ctx.$t('Варианты ответа:')), 1),\n            _createVNode(\"div\", { class: \"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\" }, [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(__props.test.options, (item) => {\n                return (_openBlock(), _createBlock(\"div\", { class: \"max-lg:w-full w-6/12\" }, [\n                  _createVNode(\"p\", { class: \"border p-2 rounded-lg break-words\" }, _toDisplayString(item.text), 1)\n                ]))\n              }), 256))\n            ])\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.showTestError) {\n    _push(_ssrRenderComponent(TheModal, {\n      onShowModal: ($event: any) => (__props.showTestError = !__props.showTestError)\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(_ssrRenderComponent(TheTextContent, null, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Вы уверены что хотите удалить тест?'))}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Вы уверены что хотите удалить тест?')), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`<p class=\"text-center text-xl tracking-widest\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_ctx.$t('Удалённые тесты возврату') + ' ')\n          }<span class=\"font-bold underline\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_ctx.$t('не подлежат'))\n          }</span></p><div class=\"flex justify-center gap-x-10 mt-10\"${\n            _scopeId\n          }>`)\n          _push(_ssrRenderComponent(TheButton, {\n            class: \"px-10 py-2 rounded-full\",\n            type: \"danger\",\n            onClick: ($event: any) => (__props.showTestError = false)\n          }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Отмена'))}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Отмена')), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(_ssrRenderComponent(TheButton, {\n            class: \"px-10 py-2 rounded-full\",\n            type: \"success\",\n            onClick: ($event: any) => (_unref(testList).deleteTest({test_id: __props.test?.id}))\n          }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Удалить'))}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Удалить')), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`</div>`)\n        } else {\n          return [\n            _createVNode(TheTextContent, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('Вы уверены что хотите удалить тест?')), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(\"p\", { class: \"text-center text-xl tracking-widest\" }, [\n              _createTextVNode(_toDisplayString(_ctx.$t('Удалённые тесты возврату') + ' '), 1),\n              _createVNode(\"span\", { class: \"font-bold underline\" }, _toDisplayString(_ctx.$t('не подлежат')), 1)\n            ]),\n            _createVNode(\"div\", { class: \"flex justify-center gap-x-10 mt-10\" }, [\n              _createVNode(TheButton, {\n                class: \"px-10 py-2 rounded-full\",\n                type: \"danger\",\n                onClick: ($event: any) => (__props.showTestError = false)\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Отмена')), 1)\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(TheButton, {\n                class: \"px-10 py-2 rounded-full\",\n                type: \"success\",\n                onClick: ($event: any) => (_unref(testList).deleteTest({test_id: __props.test?.id}))\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Удалить')), 1)\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ])\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n})",
      "start": 1750175229846,
      "end": 1750175229846,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/components/Tests/TestLists.vue"
        ],
        "sourcesContent": [
          "<script setup lang=\"ts\">\r\nimport {useTestList} from \"~/stores/test\";\r\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\r\nimport TheModal from \"~/components/UI/TheModal.vue\";\r\nimport TheButton from \"~/components/UI/TheButton.vue\";\r\n\r\nconst testList = useTestList()\r\ndefineProps({\r\n  test: {\r\n    type: Object,\r\n    default: () => {\r\n    }\r\n  },\r\n  openTest: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  showTestError: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div\r\n      class=\" p-2 border flex items-center justify-between cursor-pointer rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-all\">\r\n      <div class=\"w-full\" @click=\"openTest = true\">\r\n        <p>{{ test?.question.length > 20 ? test.question?.slice(0, 20) + '...' : test?.question }}</p>\r\n      </div>\r\n      <div @click=\"showTestError = true\">\r\n        <div class=\"cursor-pointer bg-red-400 p-2 rounded-lg\">\r\n          <svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"-3.5 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <TheModal v-if=\"openTest\" @showModal=\"openTest = !openTest\">\r\n      <TheTextContent class=\"break-words\">{{ $t('Тест:') + ' ' + test.question }}</TheTextContent>\r\n      <p class=\"my-2\">{{ $t('Варианты ответа:') }}</p>\r\n      <div class=\"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\">\r\n        <div v-for=\"item in test.options\" class=\"max-lg:w-full w-6/12\">\r\n          <p class=\"border p-2 rounded-lg break-words\">{{ item.text }}</p>\r\n        </div>\r\n      </div>\r\n    </TheModal>\r\n    <TheModal v-if=\"showTestError\" @showModal=\"showTestError = !showTestError\">\r\n      <TheTextContent>{{ $t('Вы уверены что хотите удалить тест?') }}</TheTextContent>\r\n      <p class=\"text-center text-xl tracking-widest\">{{ $t('Удалённые тесты возврату') + ' ' }}<span\r\n        class=\"font-bold underline\">{{ $t('не подлежат') }}</span></p>\r\n      <div class=\"flex justify-center gap-x-10 mt-10\">\r\n        <TheButton class=\"px-10 py-2 rounded-full\" type=\"danger\" @click=\"showTestError = false\">{{ $t('Отмена') }}\r\n        </TheButton>\r\n        <TheButton class=\"px-10 py-2 rounded-full\" type=\"success\" @click=\"testList.deleteTest({test_id: test?.id})\">\r\n          {{ $t('Удалить') }}\r\n        </TheButton>\r\n      </div>\r\n    </TheModal>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n</style>"
        ],
        "names": [],
        "mappings": ";;;;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC;;;;;;;;;;;;;;;;;;;;;AALuB,CAAC;AAMzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAe7B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
      }
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1750175229846,
      "end": 1750175229846,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, unref as _unref } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\";\nimport { useTestList } from \"~/stores/test\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"TestLists\",\n  __ssrInlineRender: true,\n  props: {\n    test: {\n      type: Object,\n      default: () => {\n      }\n    },\n    openTest: {\n      type: Boolean,\n      default: false\n    },\n    showTestError: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props) {\n    const testList = useTestList();\n    return (_ctx, _push, _parent, _attrs) => {\n      _push(`<div${_ssrRenderAttrs(_attrs)}><div class=\"p-2 border flex items-center justify-between cursor-pointer rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-all\"><div class=\"w-full\"><p>${_ssrInterpolate(__props.test?.question.length > 20 ? __props.test.question?.slice(0, 20) + \"...\" : __props.test?.question)}</p></div><div><div class=\"cursor-pointer bg-red-400 p-2 rounded-lg\"><svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"-3.5 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\"></path></svg></div></div></div>`);\n      if (__props.openTest) {\n        _push(_ssrRenderComponent(TheModal, {\n          onShowModal: ($event) => __props.openTest = !__props.openTest\n        }, {\n          default: _withCtx((_, _push2, _parent2, _scopeId) => {\n            if (_push2) {\n              _push2(_ssrRenderComponent(TheTextContent, { class: \"break-words\" }, {\n                default: _withCtx((_2, _push3, _parent3, _scopeId2) => {\n                  if (_push3) {\n                    _push3(`${_ssrInterpolate(_ctx.$t(\"Тест:\") + \" \" + __props.test.question)}`);\n                  } else {\n                    return [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"Тест:\") + \" \" + __props.test.question), 1)\n                    ];\n                  }\n                }),\n                _: 1\n              }, _parent2, _scopeId));\n              _push2(`<p class=\"my-2\"${_scopeId}>${_ssrInterpolate(_ctx.$t(\"Варианты ответа:\"))}</p><div class=\"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\"${_scopeId}><!--[-->`);\n              _ssrRenderList(__props.test.options, (item) => {\n                _push2(`<div class=\"max-lg:w-full w-6/12\"${_scopeId}><p class=\"border p-2 rounded-lg break-words\"${_scopeId}>${_ssrInterpolate(item.text)}</p></div>`);\n              });\n              _push2(`<!--]--></div>`);\n            } else {\n              return [\n                _createVNode(TheTextContent, { class: \"break-words\" }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t(\"Тест:\") + \" \" + __props.test.question), 1)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(\"p\", { class: \"my-2\" }, _toDisplayString(_ctx.$t(\"Варианты ответа:\")), 1),\n                _createVNode(\"div\", { class: \"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\" }, [\n                  (_openBlock(true), _createBlock(_Fragment, null, _renderList(__props.test.options, (item) => {\n                    return _openBlock(), _createBlock(\"div\", { class: \"max-lg:w-full w-6/12\" }, [\n                      _createVNode(\"p\", { class: \"border p-2 rounded-lg break-words\" }, _toDisplayString(item.text), 1)\n                    ]);\n                  }), 256))\n                ])\n              ];\n            }\n          }),\n          _: 1\n        }, _parent));\n      } else {\n        _push(`<!---->`);\n      }\n      if (__props.showTestError) {\n        _push(_ssrRenderComponent(TheModal, {\n          onShowModal: ($event) => __props.showTestError = !__props.showTestError\n        }, {\n          default: _withCtx((_, _push2, _parent2, _scopeId) => {\n            if (_push2) {\n              _push2(_ssrRenderComponent(TheTextContent, null, {\n                default: _withCtx((_2, _push3, _parent3, _scopeId2) => {\n                  if (_push3) {\n                    _push3(`${_ssrInterpolate(_ctx.$t(\"Вы уверены что хотите удалить тест?\"))}`);\n                  } else {\n                    return [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"Вы уверены что хотите удалить тест?\")), 1)\n                    ];\n                  }\n                }),\n                _: 1\n              }, _parent2, _scopeId));\n              _push2(`<p class=\"text-center text-xl tracking-widest\"${_scopeId}>${_ssrInterpolate(_ctx.$t(\"Удалённые тесты возврату\") + \" \")}<span class=\"font-bold underline\"${_scopeId}>${_ssrInterpolate(_ctx.$t(\"не подлежат\"))}</span></p><div class=\"flex justify-center gap-x-10 mt-10\"${_scopeId}>`);\n              _push2(_ssrRenderComponent(TheButton, {\n                class: \"px-10 py-2 rounded-full\",\n                type: \"danger\",\n                onClick: ($event) => __props.showTestError = false\n              }, {\n                default: _withCtx((_2, _push3, _parent3, _scopeId2) => {\n                  if (_push3) {\n                    _push3(`${_ssrInterpolate(_ctx.$t(\"Отмена\"))}`);\n                  } else {\n                    return [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"Отмена\")), 1)\n                    ];\n                  }\n                }),\n                _: 1\n              }, _parent2, _scopeId));\n              _push2(_ssrRenderComponent(TheButton, {\n                class: \"px-10 py-2 rounded-full\",\n                type: \"success\",\n                onClick: ($event) => _unref(testList).deleteTest({ test_id: __props.test?.id })\n              }, {\n                default: _withCtx((_2, _push3, _parent3, _scopeId2) => {\n                  if (_push3) {\n                    _push3(`${_ssrInterpolate(_ctx.$t(\"Удалить\"))}`);\n                  } else {\n                    return [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"Удалить\")), 1)\n                    ];\n                  }\n                }),\n                _: 1\n              }, _parent2, _scopeId));\n              _push2(`</div>`);\n            } else {\n              return [\n                _createVNode(TheTextContent, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t(\"Вы уверены что хотите удалить тест?\")), 1)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(\"p\", { class: \"text-center text-xl tracking-widest\" }, [\n                  _createTextVNode(_toDisplayString(_ctx.$t(\"Удалённые тесты возврату\") + \" \"), 1),\n                  _createVNode(\"span\", { class: \"font-bold underline\" }, _toDisplayString(_ctx.$t(\"не подлежат\")), 1)\n                ]),\n                _createVNode(\"div\", { class: \"flex justify-center gap-x-10 mt-10\" }, [\n                  _createVNode(TheButton, {\n                    class: \"px-10 py-2 rounded-full\",\n                    type: \"danger\",\n                    onClick: ($event) => __props.showTestError = false\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"Отмена\")), 1)\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]),\n                  _createVNode(TheButton, {\n                    class: \"px-10 py-2 rounded-full\",\n                    type: \"success\",\n                    onClick: ($event) => _unref(testList).deleteTest({ test_id: __props.test?.id })\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"Удалить\")), 1)\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"])\n                ])\n              ];\n            }\n          }),\n          _: 1\n        }, _parent));\n      } else {\n        _push(`<!---->`);\n      }\n      _push(`</div>`);\n    };\n  }\n});\n",
      "start": 1750175229846,
      "end": 1750175230764,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/components/Tests/TestLists.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, unref as _unref } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport {useTestList} from \"~/stores/test\";\r\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\r\nimport TheModal from \"~/components/UI/TheModal.vue\";\r\nimport TheButton from \"~/components/UI/TheButton.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TestLists',\n  __ssrInlineRender: true,\n  props: {\r\n  test: {\r\n    type: Object,\r\n    default: () => {\r\n    }\r\n  },\r\n  openTest: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  showTestError: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n},\n  setup(__props) {\n\r\nconst testList = useTestList()\r\n\r\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"p-2 border flex items-center justify-between cursor-pointer rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-all\"><div class=\"w-full\"><p>${\n    _ssrInterpolate(__props.test?.question.length > 20 ? __props.test.question?.slice(0, 20) + '...' : __props.test?.question)\n  }</p></div><div><div class=\"cursor-pointer bg-red-400 p-2 rounded-lg\"><svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"-3.5 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\"></path></svg></div></div></div>`)\n  if (__props.openTest) {\n    _push(_ssrRenderComponent(TheModal, {\n      onShowModal: ($event: any) => (__props.openTest = !__props.openTest)\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(_ssrRenderComponent(TheTextContent, { class: \"break-words\" }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Тест:') + ' ' + __props.test.question)}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Тест:') + ' ' + __props.test.question), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`<p class=\"my-2\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_ctx.$t('Варианты ответа:'))\n          }</p><div class=\"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\"${\n            _scopeId\n          }><!--[-->`)\n          _ssrRenderList(__props.test.options, (item) => {\n            _push(`<div class=\"max-lg:w-full w-6/12\"${\n              _scopeId\n            }><p class=\"border p-2 rounded-lg break-words\"${\n              _scopeId\n            }>${\n              _ssrInterpolate(item.text)\n            }</p></div>`)\n          })\n          _push(`<!--]--></div>`)\n        } else {\n          return [\n            _createVNode(TheTextContent, { class: \"break-words\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('Тест:') + ' ' + __props.test.question), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(\"p\", { class: \"my-2\" }, _toDisplayString(_ctx.$t('Варианты ответа:')), 1),\n            _createVNode(\"div\", { class: \"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\" }, [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(__props.test.options, (item) => {\n                return (_openBlock(), _createBlock(\"div\", { class: \"max-lg:w-full w-6/12\" }, [\n                  _createVNode(\"p\", { class: \"border p-2 rounded-lg break-words\" }, _toDisplayString(item.text), 1)\n                ]))\n              }), 256))\n            ])\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.showTestError) {\n    _push(_ssrRenderComponent(TheModal, {\n      onShowModal: ($event: any) => (__props.showTestError = !__props.showTestError)\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(_ssrRenderComponent(TheTextContent, null, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Вы уверены что хотите удалить тест?'))}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Вы уверены что хотите удалить тест?')), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`<p class=\"text-center text-xl tracking-widest\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_ctx.$t('Удалённые тесты возврату') + ' ')\n          }<span class=\"font-bold underline\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_ctx.$t('не подлежат'))\n          }</span></p><div class=\"flex justify-center gap-x-10 mt-10\"${\n            _scopeId\n          }>`)\n          _push(_ssrRenderComponent(TheButton, {\n            class: \"px-10 py-2 rounded-full\",\n            type: \"danger\",\n            onClick: ($event: any) => (__props.showTestError = false)\n          }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Отмена'))}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Отмена')), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(_ssrRenderComponent(TheButton, {\n            class: \"px-10 py-2 rounded-full\",\n            type: \"success\",\n            onClick: ($event: any) => (_unref(testList).deleteTest({test_id: __props.test?.id}))\n          }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`${_ssrInterpolate(_ctx.$t('Удалить'))}`)\n              } else {\n                return [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Удалить')), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`</div>`)\n        } else {\n          return [\n            _createVNode(TheTextContent, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('Вы уверены что хотите удалить тест?')), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(\"p\", { class: \"text-center text-xl tracking-widest\" }, [\n              _createTextVNode(_toDisplayString(_ctx.$t('Удалённые тесты возврату') + ' '), 1),\n              _createVNode(\"span\", { class: \"font-bold underline\" }, _toDisplayString(_ctx.$t('не подлежат')), 1)\n            ]),\n            _createVNode(\"div\", { class: \"flex justify-center gap-x-10 mt-10\" }, [\n              _createVNode(TheButton, {\n                class: \"px-10 py-2 rounded-full\",\n                type: \"danger\",\n                onClick: ($event: any) => (__props.showTestError = false)\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Отмена')), 1)\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(TheButton, {\n                class: \"px-10 py-2 rounded-full\",\n                type: \"success\",\n                onClick: ($event: any) => (_unref(testList).deleteTest({test_id: __props.test?.id}))\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('Удалить')), 1)\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ])\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": [
          "_push",
          "_parent",
          "_",
          "_scopeId"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1750175230764,
      "end": 1750175230764,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750175230764,
      "end": 1750175230765,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1750175230765,
      "end": 1750175230766,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750175230766,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1750175230767,
      "end": 1750175230767,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1750175230767,
      "end": 1750175230775,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1750175230767,
      "end": 1750175230775,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1750175230777,
      "end": 1750175230777,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1750175230777,
      "end": 1750175230777,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1750175230777,
      "end": 1750175230777,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1750175230777,
      "end": 1750175230777,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1750175230777,
      "end": 1750175230777,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1750175230778,
      "end": 1750175230778,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1750175230778,
      "end": 1750175230778,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750175230778,
      "end": 1750175230779,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750175230779,
      "end": 1750175230779,
      "order": "normal"
    }
  ]
}
