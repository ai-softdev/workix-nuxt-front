{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/stores/tree.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nexport const useTreeStore = defineStore('useTree', {\n  state: ()=>({\n    tree: [],\n    treeFullScreen: false\n  }),\n  getters: {\n    get_list(tree: any) {\n      const userMap = new Map();\n      const rootUsers = [];\n\n      // Заполняем userMap и добавляем свойство children\n      this.tree.forEach(department => {\n        department.participants.forEach(user => {\n          user.children = [];\n          userMap.set(user.id, user);\n        });\n      });\n\n      // Формируем иерархию\n      this.tree.forEach(department => {\n        department.participants.forEach(user => {\n          if (user.head_user_id && userMap.has(user.head_user_id)) {\n            userMap.get(user.head_user_id).children.push(user);\n          } else {\n            rootUsers.push(user); // Если нет head_user_id, значит, это корневой элемент\n          }\n        });\n      });\n\n      return rootUsers;\n    }\n  },\n  actions: {\n    async loadTreeList(){\n      axios.get(`department/`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res=> {\n        this.tree = res.data.results\n      })\n    }\n  }\n})\n\n\n",
      "start": 1744827961037,
      "end": 1744827961658,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1744827961658,
      "end": 1744827961658,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nexport const useTreeStore = defineStore(\"useTree\", {\n  state: () => ({\n    tree: [],\n    treeFullScreen: false\n  }),\n  getters: {\n    get_list(tree) {\n      const userMap = /* @__PURE__ */ new Map();\n      const rootUsers = [];\n      this.tree.forEach((department) => {\n        department.participants.forEach((user) => {\n          user.children = [];\n          userMap.set(user.id, user);\n        });\n      });\n      this.tree.forEach((department) => {\n        department.participants.forEach((user) => {\n          if (user.head_user_id && userMap.has(user.head_user_id)) {\n            userMap.get(user.head_user_id).children.push(user);\n          } else {\n            rootUsers.push(user);\n          }\n        });\n      });\n      return rootUsers;\n    }\n  },\n  actions: {\n    async loadTreeList() {\n      axios.get(`department/`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.tree = res.data.results;\n      });\n    }\n  }\n});\n",
      "start": 1744827961658,
      "end": 1744827962803,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/stores/tree.ts"
        ],
        "sourcesContent": [
          "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nexport const useTreeStore = defineStore('useTree', {\n  state: ()=>({\n    tree: [],\n    treeFullScreen: false\n  }),\n  getters: {\n    get_list(tree: any) {\n      const userMap = new Map();\n      const rootUsers = [];\n\n      // Заполняем userMap и добавляем свойство children\n      this.tree.forEach(department => {\n        department.participants.forEach(user => {\n          user.children = [];\n          userMap.set(user.id, user);\n        });\n      });\n\n      // Формируем иерархию\n      this.tree.forEach(department => {\n        department.participants.forEach(user => {\n          if (user.head_user_id && userMap.has(user.head_user_id)) {\n            userMap.get(user.head_user_id).children.push(user);\n          } else {\n            rootUsers.push(user); // Если нет head_user_id, значит, это корневой элемент\n          }\n        });\n      });\n\n      return rootUsers;\n    }\n  },\n  actions: {\n    async loadTreeList(){\n      axios.get(`department/`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res=> {\n        this.tree = res.data.results\n      })\n    }\n  }\n})\n\n\n"
        ],
        "mappings": "AAAA,SAAQ,mBAAkB;AAC1B,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACjB,aAAM,eAAe,YAAY,WAAW;AAAA,EACjD,OAAO,OAAK;AAAA,IACV,MAAM,CAAC;AAAA,IACP,gBAAgB;AAAA,EAClB;AAAA,EACA,SAAS;AAAA,IACP,SAAS,MAAW;AAClB,YAAM,UAAU,oBAAI,IAAI;AACxB,YAAM,YAAY,CAAC;AAGnB,WAAK,KAAK,QAAQ,gBAAc;AAC9B,mBAAW,aAAa,QAAQ,UAAQ;AACtC,eAAK,WAAW,CAAC;AACjB,kBAAQ,IAAI,KAAK,IAAI,IAAI;AAAA,QAC3B,CAAC;AAAA,MACH,CAAC;AAGD,WAAK,KAAK,QAAQ,gBAAc;AAC9B,mBAAW,aAAa,QAAQ,UAAQ;AACtC,cAAI,KAAK,gBAAgB,QAAQ,IAAI,KAAK,YAAY,GAAG;AACvD,oBAAQ,IAAI,KAAK,YAAY,EAAE,SAAS,KAAK,IAAI;AAAA,UACnD,OAAO;AACL,sBAAU,KAAK,IAAI;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAED,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,MAAM,eAAc;AAClB,YAAM,IAAI,eAAe;AAAA,QACvB,SAAS;AAAA,UACP,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACpE;AAAA,MACF,CAAC,EAAE,KAAK,SAAM;AACZ,aAAK,OAAO,IAAI,KAAK;AAAA,MACvB,CAAC;AAAA,IACH;AAAA,EACF;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1744827962803,
      "end": 1744827962803,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1744827962803,
      "end": 1744827962803,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1744827962804,
      "end": 1744827962804,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1744827962805,
      "end": 1744827962805,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1744827962805,
      "end": 1744827962805,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1744827962806,
      "end": 1744827962806,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1744827962806,
      "end": 1744827962806,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1744827962808,
      "end": 1744827962809,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1744827962810,
      "end": 1744827962811,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1744827962811,
      "end": 1744827962811,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1744827962811,
      "end": 1744827962811,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1744827962812,
      "end": 1744827962812,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1744827962814,
      "end": 1744827962814,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1744827962814,
      "end": 1744827962814,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1744827962815,
      "end": 1744827962815,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1744827962815,
      "end": 1744827962815,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1744827962824,
      "end": 1744827962824,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1744827962824,
      "end": 1744827962824,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1744827962824,
      "end": 1744827962824,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1744827962824,
      "end": 1744827962824,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1744827962826,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1744827962826,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1744827962833,
      "end": 1744827962833,
      "order": "normal"
    }
  ]
}
