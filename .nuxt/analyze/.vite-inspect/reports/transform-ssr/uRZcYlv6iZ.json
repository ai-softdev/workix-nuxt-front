{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/stores/auth.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport {toast} from \"vue3-toastify\";\nimport {useUserStore} from \"~/stores/users\";\nimport type {Router} from \"vue-router\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport {isDevelopment, isProduction} from \"std-env\";\n\ninterface IUser {\n  user: object | unknown\n}\n\nexport const useAuthStore = defineStore('authUser', {\n  state: () => ({\n    current_user: {\n      id: null,\n      email: '',\n      password: '',\n      date_of_birth: '',\n      first_name: '',\n      last_name: '',\n      company_id: '',\n      phone: '',\n      photo: '',\n      position: '',\n      role: {},\n      status: '',\n      passport: '',\n      salary: {},\n      permissions: []\n    },\n    user: {} as IUser,\n    user_worker: {} as IUser,\n    permissions: [],\n    exam_active: false,\n    openNotification: false,\n    openSettings: false,\n    my_scroll: 0,\n    activeNav: false,\n  }),\n  getters: {\n    get_current_user(current_user) {\n      return this.current_user\n    },\n    get_user(user){\n      return this.user\n    },\n    get_server_domain(){\n      return 'https://test-api-buildwithus.ai-softdev.com'\n      // return 'http://192.168.152.169:8000'\n      // return 'https://f01d-94-158-60-209.ngrok-free.app'\n      // return 'https://api-buildwithus.ai-softdev.com'\n    }\n  },\n  actions: {\n    async authorize(params: { email: any, password: any }, router: Router) {\n      await axios.post('auth/login', {\n        email: params.email,\n        password: params.password,\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        nuxtStorage.localStorage.setData('token', response.data.access, isProduction ? 30 : 1200)\n        this.loadCurrentUser()\n        router.push('/base/companies').then(e=>{\n          toast.success('Успешная авторизация', {autoClose: 1500, theme: 'auto'},)\n        })\n      }).catch(e => {\n        router.push('/')\n        toast.error('Неверный логин или пароль', {autoClose: 1500, theme: \"auto\"})\n      })\n    },\n\n    async loadCurrentUserWorker() {\n      await axios.get('user/current-user-worker', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.user_worker = res.data;\n      })\n    },\n\n    async loadCurrentUser() {\n     await axios.get('user/current-user', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.user = response.data\n      })\n    },\n    async update_my(params: { user: any}) {\n      let fd = new FormData();\n      const originalUser = this.user\n      if(params.user.first_name !== originalUser.first_name) {\n        fd.set('first_name', params.user.first_name)\n      }\n      if(params.user.last_name !== originalUser.last_name) {\n        fd.set('last_name', params.user.last_name)\n      }\n      if(params.user.phone !== originalUser.phone) {\n        fd.set('phone', params.user.phone)\n      }\n      if(params.user.password !== originalUser.password) {\n        fd.set('password', params.user.password)\n      }\n      if(params.user.salary !== originalUser.salary) {\n        fd.set('salary', params.user.salary)\n      }\n      if(params.user.email !== originalUser.email) {\n        fd.set('email', params.user.email)\n      }\n      if(params.user.date_of_birth !== originalUser.date_of_birth) {\n        fd.set('date_of_birth', params.user.date_of_birth)\n      }\n      if(params.user.passport !== originalUser.passport) {\n        fd.set('password', params.user.password)\n      }\n      if(params.user.department_id !== originalUser.department_id) {\n        fd.set('department_id', params.user.department_id)\n      }\n      if(params.user.position.id !== originalUser.position.id) {\n        fd.set('position', params.user.position.id)\n      }\n      if (params.update_type !== 'current-user' && params.user.permissions_ids !== originalUser.permissions_id) {\n        fd.set('permissions_ids', params.permissions_ids)\n      }\n      if (params.update_type !== 'current-user' && params.user.role_id !== originalUser.role_id) {\n        fd.set('role_id', params.user.role_id)\n\n      }\n      if (typeof params.user.photo === 'string' && params.user.photo !== originalUser.photo) {\n        fd.set('photo', params.user.photo)\n      }\n      await axios.patch(`user/current-user`, fd, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.user = response.data\n        toast.success('Данные успешно обновлены', {autoClose: 1500, theme: 'auto'})\n      }).catch(e => {\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\n      })\n    }\n  },\n})",
      "start": 1743102867638,
      "end": 1743102869133,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1743102869133,
      "end": 1743102869133,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1743102869133,
      "end": 1743102869133,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1743102869133,
      "end": 1743102869133,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1743102869133,
      "end": 1743102869133,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1743102869133,
      "end": 1743102869134,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1743102869133,
      "end": 1743102869134,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1743102869134,
      "end": 1743102869134,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743102869134,
      "end": 1743102869134,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport { toast } from \"vue3-toastify\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport { isProduction } from \"std-env\";\nexport const useAuthStore = defineStore(\"authUser\", {\n  state: () => ({\n    current_user: {\n      id: null,\n      email: \"\",\n      password: \"\",\n      date_of_birth: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      company_id: \"\",\n      phone: \"\",\n      photo: \"\",\n      position: \"\",\n      role: {},\n      status: \"\",\n      passport: \"\",\n      salary: {},\n      permissions: []\n    },\n    user: {},\n    user_worker: {},\n    permissions: [],\n    exam_active: false,\n    openNotification: false,\n    openSettings: false,\n    my_scroll: 0,\n    activeNav: false\n  }),\n  getters: {\n    get_current_user(current_user) {\n      return this.current_user;\n    },\n    get_user(user) {\n      return this.user;\n    },\n    get_server_domain() {\n      return \"https://test-api-buildwithus.ai-softdev.com\";\n    }\n  },\n  actions: {\n    async authorize(params, router) {\n      await axios.post(\"auth/login\", {\n        email: params.email,\n        password: params.password\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        nuxtStorage.localStorage.setData(\"token\", response.data.access, isProduction ? 30 : 1200);\n        this.loadCurrentUser();\n        router.push(\"/base/companies\").then((e) => {\n          toast.success(\"Успешная авторизация\", { autoClose: 1500, theme: \"auto\" });\n        });\n      }).catch((e) => {\n        router.push(\"/\");\n        toast.error(\"Неверный логин или пароль\", { autoClose: 1500, theme: \"auto\" });\n      });\n    },\n    async loadCurrentUserWorker() {\n      await axios.get(\"user/current-user-worker\", {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.user_worker = res.data;\n      });\n    },\n    async loadCurrentUser() {\n      await axios.get(\"user/current-user\", {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.user = response.data;\n      });\n    },\n    async update_my(params) {\n      let fd = new FormData();\n      const originalUser = this.user;\n      if (params.user.first_name !== originalUser.first_name) {\n        fd.set(\"first_name\", params.user.first_name);\n      }\n      if (params.user.last_name !== originalUser.last_name) {\n        fd.set(\"last_name\", params.user.last_name);\n      }\n      if (params.user.phone !== originalUser.phone) {\n        fd.set(\"phone\", params.user.phone);\n      }\n      if (params.user.password !== originalUser.password) {\n        fd.set(\"password\", params.user.password);\n      }\n      if (params.user.salary !== originalUser.salary) {\n        fd.set(\"salary\", params.user.salary);\n      }\n      if (params.user.email !== originalUser.email) {\n        fd.set(\"email\", params.user.email);\n      }\n      if (params.user.date_of_birth !== originalUser.date_of_birth) {\n        fd.set(\"date_of_birth\", params.user.date_of_birth);\n      }\n      if (params.user.passport !== originalUser.passport) {\n        fd.set(\"password\", params.user.password);\n      }\n      if (params.user.department_id !== originalUser.department_id) {\n        fd.set(\"department_id\", params.user.department_id);\n      }\n      if (params.user.position.id !== originalUser.position.id) {\n        fd.set(\"position\", params.user.position.id);\n      }\n      if (params.update_type !== \"current-user\" && params.user.permissions_ids !== originalUser.permissions_id) {\n        fd.set(\"permissions_ids\", params.permissions_ids);\n      }\n      if (params.update_type !== \"current-user\" && params.user.role_id !== originalUser.role_id) {\n        fd.set(\"role_id\", params.user.role_id);\n      }\n      if (typeof params.user.photo === \"string\" && params.user.photo !== originalUser.photo) {\n        fd.set(\"photo\", params.user.photo);\n      }\n      await axios.patch(`user/current-user`, fd, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.user = response.data;\n        toast.success(\"Данные успешно обновлены\", { autoClose: 1500, theme: \"auto\" });\n      }).catch((e) => {\n        toast.error(e, { autoClose: 1500, theme: \"auto\" });\n      });\n    }\n  }\n});\n",
      "start": 1743102869134,
      "end": 1743102872462,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/stores/auth.ts"
        ],
        "sourcesContent": [
          "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport {toast} from \"vue3-toastify\";\nimport {useUserStore} from \"~/stores/users\";\nimport type {Router} from \"vue-router\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport {isDevelopment, isProduction} from \"std-env\";\n\ninterface IUser {\n  user: object | unknown\n}\n\nexport const useAuthStore = defineStore('authUser', {\n  state: () => ({\n    current_user: {\n      id: null,\n      email: '',\n      password: '',\n      date_of_birth: '',\n      first_name: '',\n      last_name: '',\n      company_id: '',\n      phone: '',\n      photo: '',\n      position: '',\n      role: {},\n      status: '',\n      passport: '',\n      salary: {},\n      permissions: []\n    },\n    user: {} as IUser,\n    user_worker: {} as IUser,\n    permissions: [],\n    exam_active: false,\n    openNotification: false,\n    openSettings: false,\n    my_scroll: 0,\n    activeNav: false,\n  }),\n  getters: {\n    get_current_user(current_user) {\n      return this.current_user\n    },\n    get_user(user){\n      return this.user\n    },\n    get_server_domain(){\n      return 'https://test-api-buildwithus.ai-softdev.com'\n      // return 'http://192.168.152.169:8000'\n      // return 'https://f01d-94-158-60-209.ngrok-free.app'\n      // return 'https://api-buildwithus.ai-softdev.com'\n    }\n  },\n  actions: {\n    async authorize(params: { email: any, password: any }, router: Router) {\n      await axios.post('auth/login', {\n        email: params.email,\n        password: params.password,\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        nuxtStorage.localStorage.setData('token', response.data.access, isProduction ? 30 : 1200)\n        this.loadCurrentUser()\n        router.push('/base/companies').then(e=>{\n          toast.success('Успешная авторизация', {autoClose: 1500, theme: 'auto'},)\n        })\n      }).catch(e => {\n        router.push('/')\n        toast.error('Неверный логин или пароль', {autoClose: 1500, theme: \"auto\"})\n      })\n    },\n\n    async loadCurrentUserWorker() {\n      await axios.get('user/current-user-worker', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.user_worker = res.data;\n      })\n    },\n\n    async loadCurrentUser() {\n     await axios.get('user/current-user', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.user = response.data\n      })\n    },\n    async update_my(params: { user: any}) {\n      let fd = new FormData();\n      const originalUser = this.user\n      if(params.user.first_name !== originalUser.first_name) {\n        fd.set('first_name', params.user.first_name)\n      }\n      if(params.user.last_name !== originalUser.last_name) {\n        fd.set('last_name', params.user.last_name)\n      }\n      if(params.user.phone !== originalUser.phone) {\n        fd.set('phone', params.user.phone)\n      }\n      if(params.user.password !== originalUser.password) {\n        fd.set('password', params.user.password)\n      }\n      if(params.user.salary !== originalUser.salary) {\n        fd.set('salary', params.user.salary)\n      }\n      if(params.user.email !== originalUser.email) {\n        fd.set('email', params.user.email)\n      }\n      if(params.user.date_of_birth !== originalUser.date_of_birth) {\n        fd.set('date_of_birth', params.user.date_of_birth)\n      }\n      if(params.user.passport !== originalUser.passport) {\n        fd.set('password', params.user.password)\n      }\n      if(params.user.department_id !== originalUser.department_id) {\n        fd.set('department_id', params.user.department_id)\n      }\n      if(params.user.position.id !== originalUser.position.id) {\n        fd.set('position', params.user.position.id)\n      }\n      if (params.update_type !== 'current-user' && params.user.permissions_ids !== originalUser.permissions_id) {\n        fd.set('permissions_ids', params.permissions_ids)\n      }\n      if (params.update_type !== 'current-user' && params.user.role_id !== originalUser.role_id) {\n        fd.set('role_id', params.user.role_id)\n\n      }\n      if (typeof params.user.photo === 'string' && params.user.photo !== originalUser.photo) {\n        fd.set('photo', params.user.photo)\n      }\n      await axios.patch(`user/current-user`, fd, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.user = response.data\n        toast.success('Данные успешно обновлены', {autoClose: 1500, theme: 'auto'})\n      }).catch(e => {\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\n      })\n    }\n  },\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1743102872463,
      "end": 1743102872463,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743102872464,
      "end": 1743102872464,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1743102872464,
      "end": 1743102872465,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743102872465,
      "end": 1743102872465,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743102872465,
      "end": 1743102872465,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743102872465,
      "end": 1743102872465,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743102872466,
      "end": 1743102872466,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743102872466,
      "end": 1743102872466,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1743102872466,
      "end": 1743102872466,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743102872466,
      "end": 1743102872466,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743102872466,
      "end": 1743102872466,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1743102872496,
      "end": 1743102872496,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1743102872496,
      "end": 1743102872496,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1743102872497,
      "end": 1743102872497,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1743102872497,
      "end": 1743102872497,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1743102872498,
      "end": 1743102872498,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1743102872498,
      "end": 1743102872498,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1743102872508,
      "end": 1743102872508,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1743102872508,
      "end": 1743102872508,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1743102872508,
      "end": 1743102872514,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1743102872508,
      "end": 1743102872514,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1743102872514,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1743102872514,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1743102872515,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1743102872515,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1743102872515,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1743102872515,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1743102872515,
      "end": 1743102872515,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743102872516,
      "end": 1743102872516,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743102872516,
      "end": 1743102872516,
      "order": "normal"
    }
  ]
}
