{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/components/Chat/UI/Voice/AudioRecorder.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\r\n// import WaveSurfer from 'wavesurfer.js'\r\n// import RecordPlugin from 'wavesurfer.js/dist/plugins/record'\r\n//\r\n// interface IWave {\r\n//   registerPlugin: (plugin: any )=> any\r\n//   destroy: () => void\r\n// }\r\n// interface IRecord{\r\n//   isRecording: () => boolean,\r\n//   isPaused: () => boolean,\r\n//   startRecording: (options: { deviceId: any }) => Promise<void>\r\n//   stopRecording: () => void\r\n//   on: (event: string, callback: (blob: Blob) => void) => void\r\n// }\r\n//\r\n// let wavesurfer: IWave\r\n// let record: IRecord\r\n// let scrollingWaveform = false\r\n// const recordings = ref<HTMLElement | null>(null)\r\n// const createWaveSurfer = () => {\r\n//   if (wavesurfer) {\r\n//     wavesurfer.destroy()\r\n//   }\r\n//   wavesurfer = WaveSurfer.create({\r\n//     container: '#mic',\r\n//     waveColor: 'rgb(200, 0, 200)',\r\n//     progressColor: 'rgb(100, 0, 100)',\r\n//   })\r\n//\r\n//   record = wavesurfer.registerPlugin(RecordPlugin.create({scrollingWaveform, renderRecordedAudio: false}))\r\n//   record.on('record-end', (blob: Blob) => {\r\n//     const recordedUrl = URL.createObjectURL(blob)\r\n//     const wavesurfer = WaveSurfer.create({\r\n//       container: '#voiceMessageContainer',\r\n//       waveColor: 'rgb(200, 100, 0)',\r\n//       progressColor: 'rgb(100, 50, 0)',\r\n//       url: recordedUrl,\r\n//     })\r\n//   })\r\n// }\r\n// {\r\n//   RecordPlugin.getAvailableAudioDevices().then((devices) => {\r\n//     devices.forEach((device) => {\r\n//       const option = document.createElement('option')\r\n//       option.value = device.deviceId\r\n//       option.text = device.label || device.deviceId\r\n//     })\r\n//   })\r\n// }\r\n// const recButton = () => {\r\n//   if (record && (record.isRecording() || record.isPaused())) {\r\n//     record.stopRecording()\r\n//     return\r\n//   }\r\n//   if(record) {\r\n//     record.startRecording({deviceId: null}).then(() => {\r\n//         return false\r\n//     })\r\n//   }\r\n// }\r\n// onMounted(() => {\r\n//   createWaveSurfer()\r\n// })\r\n</script>\r\n\r\n<template>\r\n<!--  <div>-->\r\n<!--    <button id=\"record\" @click=\"recButton\">Record</button>-->\r\n<!--    <div id=\"voiceMessageContainer\">-->\r\n<!--    </div>-->\r\n<!--    <select id=\"mic-select\">-->\r\n<!--      <option value=\"\" hidden>Select mic</option>-->\r\n<!--    </select>-->\r\n<!--    <label style=\"display:inline-block;\"><input type=\"checkbox\"/> Scrolling waveform</label>-->\r\n<!--    <div id=\"mic\" style=\"border: 1px solid #ddd; border-radius: 4px; margin-top: 1rem\"></div>-->\r\n<!--    <div ref=\"recordings\" style=\"margin: 1rem 0\"></div>-->\r\n<!--  </div>-->\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>",
      "start": 1748952493451,
      "end": 1748952493703,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748952493703,
      "end": 1748952493703,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748952493703,
      "end": 1748952493703,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748952493703,
      "end": 1748952493703,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748952493703,
      "end": 1748952493703,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1748952493703,
      "end": 1748952493703,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1748952493703,
      "end": 1748952493703,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748952493704,
      "end": 1748952493704,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748952493704,
      "end": 1748952493704,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748952493704,
      "end": 1748952493704,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748952493704,
      "end": 1748952493704,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748952493704,
      "end": 1748952493704,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"D:/projects/nuxt/workix-nuxt-front/components/Chat/UI/Voice/AudioRecorder.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"D:/projects/nuxt/workix-nuxt-front/components/Chat/UI/Voice/AudioRecorder.vue?vue&type=script&setup=true&lang.ts\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"components/Chat/UI/Voice/AudioRecorder.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nexport default _sfc_main;\n",
      "start": 1748952493704,
      "end": 1748952493870,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748952493871,
      "end": 1748952493871,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748952493872,
      "end": 1748952493872,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748952493872,
      "end": 1748952493872,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748952493872,
      "end": 1748952493873,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748952493873,
      "end": 1748952493873,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748952493873,
      "end": 1748952493873,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748952493873,
      "end": 1748952493873,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748952493874,
      "end": 1748952493874,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748952493876,
      "end": 1748952493877,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748952493881,
      "end": 1748952493881,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748952493887,
      "end": 1748952493887,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748952493887,
      "end": 1748952493887,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1748952493887,
      "end": 1748952493887,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1748952493887,
      "end": 1748952493887,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1748952493887,
      "end": 1748952493887,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1748952493887,
      "end": 1748952493887,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1748952493888,
      "end": 1748952493888,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1748952493888,
      "end": 1748952493888,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748952493889,
      "end": 1748952493900,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748952493889,
      "end": 1748952493900,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748952493900,
      "end": 1748952493900,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748952493900,
      "end": 1748952493900,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748952493909,
      "end": 1748952493909,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748952493909,
      "end": 1748952493909,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1748952493909,
      "end": 1748952493909,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748952493909,
      "end": 1748952493910,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748952493910,
      "end": 1748952493910,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748952493910,
      "end": 1748952493910,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748952493910,
      "end": 1748952493910,
      "order": "normal"
    }
  ]
}
