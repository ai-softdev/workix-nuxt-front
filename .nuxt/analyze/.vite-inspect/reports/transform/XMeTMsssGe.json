{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_equalArrays.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n",
      "start": 1749106339868,
      "end": 1749106339869,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749106339869,
      "end": 1749106339869,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1749106339869,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749106339870,
      "end": 1749106339870,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_SetCache.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_arraySome.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_cacheHas.js?commonjs-proxy\";\n\nvar SetCache = require$$0,\n    arraySome = require$$1,\n    cacheHas = require$$2;\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nvar _equalArrays = equalArrays;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(_equalArrays);\nexport { _equalArrays as __moduleExports };",
      "start": 1749106339870,
      "end": 1749106340070,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749106340070,
      "end": 1749106340070,
      "order": "normal"
    }
  ]
}
