{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/isArrayLike.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n",
      "start": 1750850818689,
      "end": 1750850818709,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1750850818709,
      "end": 1750850818709,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750850818710,
      "end": 1750850818710,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/isFunction.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/isLength.js?commonjs-proxy\";\n\nvar isFunction = require$$0,\n    isLength = require$$1;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nvar isArrayLike_1 = isArrayLike;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(isArrayLike_1);\nexport { isArrayLike_1 as __moduleExports };",
      "start": 1750850818710,
      "end": 1750850818754,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;AAAA,IAAI,UAAU,GAAG,UAAuB;AACxC,IAAI,QAAQ,GAAG,UAAqB,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,EAAE,OAAO,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACvE,CAAC;AACD;IACA,aAAc,GAAG,WAAW"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750850818755,
      "end": 1750850818755,
      "order": "normal"
    }
  ]
}
