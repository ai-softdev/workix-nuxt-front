{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/components/Chat/UI/Voice/AudioRecorder.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AudioRecorder',\n  setup(__props) {\n\n// import WaveSurfer from 'wavesurfer.js'\n// import RecordPlugin from 'wavesurfer.js/dist/plugins/record'\n//\n// interface IWave {\n//   registerPlugin: (plugin: any )=> any\n//   destroy: () => void\n// }\n// interface IRecord{\n//   isRecording: () => boolean,\n//   isPaused: () => boolean,\n//   startRecording: (options: { deviceId: any }) => Promise<void>\n//   stopRecording: () => void\n//   on: (event: string, callback: (blob: Blob) => void) => void\n// }\n//\n// let wavesurfer: IWave\n// let record: IRecord\n// let scrollingWaveform = false\n// const recordings = ref<HTMLElement | null>(null)\n// const createWaveSurfer = () => {\n//   if (wavesurfer) {\n//     wavesurfer.destroy()\n//   }\n//   wavesurfer = WaveSurfer.create({\n//     container: '#mic',\n//     waveColor: 'rgb(200, 0, 200)',\n//     progressColor: 'rgb(100, 0, 100)',\n//   })\n//\n//   record = wavesurfer.registerPlugin(RecordPlugin.create({scrollingWaveform, renderRecordedAudio: false}))\n//   record.on('record-end', (blob: Blob) => {\n//     const recordedUrl = URL.createObjectURL(blob)\n//     const wavesurfer = WaveSurfer.create({\n//       container: '#voiceMessageContainer',\n//       waveColor: 'rgb(200, 100, 0)',\n//       progressColor: 'rgb(100, 50, 0)',\n//       url: recordedUrl,\n//     })\n//   })\n// }\n// {\n//   RecordPlugin.getAvailableAudioDevices().then((devices) => {\n//     devices.forEach((device) => {\n//       const option = document.createElement('option')\n//       option.value = device.deviceId\n//       option.text = device.label || device.deviceId\n//     })\n//   })\n// }\n// const recButton = () => {\n//   if (record && (record.isRecording() || record.isPaused())) {\n//     record.stopRecording()\n//     return\n//   }\n//   if(record) {\n//     record.startRecording({deviceId: null}).then(() => {\n//         return false\n//     })\n//   }\n// }\n// onMounted(() => {\n//   createWaveSurfer()\n// })\n\nreturn (_ctx: any,_cache: any) => {\n  return null\n}\n}\n\n})",
      "start": 1743096190999,
      "end": 1743096190999
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1743096190999,
      "end": 1743096190999,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1743096190999,
      "end": 1743096190999,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1743096190999,
      "end": 1743096190999,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1743096190999,
      "end": 1743096190999,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743096190999,
      "end": 1743096190999,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"AudioRecorder\",\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return null;\n    };\n  }\n});\n",
      "start": 1743096190999,
      "end": 1743096191142,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/components/Chat/UI/Voice/AudioRecorder.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AudioRecorder',\n  setup(__props) {\n\n// import WaveSurfer from 'wavesurfer.js'\n// import RecordPlugin from 'wavesurfer.js/dist/plugins/record'\n//\n// interface IWave {\n//   registerPlugin: (plugin: any )=> any\n//   destroy: () => void\n// }\n// interface IRecord{\n//   isRecording: () => boolean,\n//   isPaused: () => boolean,\n//   startRecording: (options: { deviceId: any }) => Promise<void>\n//   stopRecording: () => void\n//   on: (event: string, callback: (blob: Blob) => void) => void\n// }\n//\n// let wavesurfer: IWave\n// let record: IRecord\n// let scrollingWaveform = false\n// const recordings = ref<HTMLElement | null>(null)\n// const createWaveSurfer = () => {\n//   if (wavesurfer) {\n//     wavesurfer.destroy()\n//   }\n//   wavesurfer = WaveSurfer.create({\n//     container: '#mic',\n//     waveColor: 'rgb(200, 0, 200)',\n//     progressColor: 'rgb(100, 0, 100)',\n//   })\n//\n//   record = wavesurfer.registerPlugin(RecordPlugin.create({scrollingWaveform, renderRecordedAudio: false}))\n//   record.on('record-end', (blob: Blob) => {\n//     const recordedUrl = URL.createObjectURL(blob)\n//     const wavesurfer = WaveSurfer.create({\n//       container: '#voiceMessageContainer',\n//       waveColor: 'rgb(200, 100, 0)',\n//       progressColor: 'rgb(100, 50, 0)',\n//       url: recordedUrl,\n//     })\n//   })\n// }\n// {\n//   RecordPlugin.getAvailableAudioDevices().then((devices) => {\n//     devices.forEach((device) => {\n//       const option = document.createElement('option')\n//       option.value = device.deviceId\n//       option.text = device.label || device.deviceId\n//     })\n//   })\n// }\n// const recButton = () => {\n//   if (record && (record.isRecording() || record.isPaused())) {\n//     record.stopRecording()\n//     return\n//   }\n//   if(record) {\n//     record.startRecording({deviceId: null}).then(() => {\n//         return false\n//     })\n//   }\n// }\n// onMounted(() => {\n//   createWaveSurfer()\n// })\n\nreturn (_ctx: any,_cache: any) => {\n  return null\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AAGpD,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,MAAM,SAAS;AAkEjB,WAAO,CAAC,MAAU,WAAgB;AAChC,aAAO;AAAA,IACT;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1743096191142,
      "end": 1743096191142,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743096191142,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1743096191143,
      "end": 1743096191143,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1743096191143,
      "end": 1743096191144,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1743096191144,
      "end": 1743096191147,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1743096191149,
      "end": 1743096191149,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1743096191149,
      "end": 1743096191149,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1743096191149,
      "end": 1743096191149,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1743096191149,
      "end": 1743096191149,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1743096191149,
      "end": 1743096191149,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1743096191149,
      "end": 1743096191149,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743096191149,
      "end": 1743096191150,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743096191150,
      "end": 1743096191150,
      "order": "normal"
    }
  ]
}
