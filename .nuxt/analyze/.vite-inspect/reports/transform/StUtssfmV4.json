{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/isEqual.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n",
      "start": 1741331326865,
      "end": 1741331326867,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741331326867,
      "end": 1741331326867,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_baseIsEqual.js?commonjs-proxy\";\n\nvar baseIsEqual = require$$0;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nvar isEqual_1 = isEqual;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(isEqual_1);\nexport { isEqual_1 as __moduleExports };",
      "start": 1741331326867,
      "end": 1741331327040,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,IAAI,WAAW,GAAG,UAAyB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE;AAC/B,EAAE,OAAO,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACnC,CAAC;AACD;IACA,SAAc,GAAG,OAAO"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741331327040,
      "end": 1741331327040,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741331327040,
      "end": 1741331327040,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741331327040,
      "end": 1741331327040,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741331327040,
      "end": 1741331327040,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741331327040,
      "end": 1741331327040,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1741331327040,
      "end": 1741331327040,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741331327040,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741331327041,
      "end": 1741331327041,
      "order": "normal"
    }
  ]
}
