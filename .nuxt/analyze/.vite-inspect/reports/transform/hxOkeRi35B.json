{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/date-fns/esm/setWeek/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import getWeek from \"../getWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport default function setWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, options) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}",
      "start": 1749812707441,
      "end": 1749812707471,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749812707471,
      "end": 1749812707471,
      "order": "normal"
    }
  ]
}
