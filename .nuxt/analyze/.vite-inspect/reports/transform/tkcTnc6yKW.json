{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/stores/sales.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {defineStore} from \"pinia\";\r\nimport axios from \"~/composables/axios\";\r\nimport {toast} from \"vue3-toastify\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useSales = defineStore('sales', {\r\n    state:() => ({\r\n        sales: {}\r\n    }),\r\n    getters: {\r\n        get_objects(object) {\r\n            return this.objects\r\n        }\r\n    },\r\n    actions: {\r\n        async loadSalesList(params: any) {\r\n            axios.get(`sales/list?page=${params.page}&limit=${params.limit}${params.name ? `&name=${params.name}` : ''}${params.min_price ? `&min_price=${params.min_price}` : ''}${params.max_price ? `&max_price=${params.max_price}` : ''}${params.min_count ? `&min_count=${params.min_count}` : ''}${params.max_count ? `&max_count=${params.max_count}` : ''}${params.order_by ? `&order_by=${params.order_by}` : ''}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n                }\r\n            }).then(response => {\r\n                this.sales = response.data\r\n            })\r\n        },\r\n        async loadSalesListFile() {\r\n            axios.post(`sales/report`, {}, {\r\n                responseType: 'blob',\r\n                headers: {\r\n                    Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n                }\r\n            }).then(response => {\r\n                console.log(response)\r\n                if(response.status === 201){\r\n                    toast.success('Создание отчёта началось!', {autoClose: 1500, theme: 'auto'})\r\n                } else if (response.status === 200){\r\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n                    const a = document.createElement('a');\r\n                    a.href = url;\r\n                    a.download = `sales.xlsx`;\r\n                    document.body.appendChild(a);\r\n                    a.click();\r\n\r\n                    window.URL.revokeObjectURL(url);\r\n                    document.body.removeChild(a);\r\n                }\r\n            })\r\n        },\r\n\r\n        async createItem(params: any) {\r\n\r\n            axios.post(`sales/create`, params.form, {\r\n                headers: {\r\n                    Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n                }\r\n            }).then(response => {\r\n                toast.success('Товар успешно создан!', {autoClose: 1500, theme: 'auto'})\r\n            }).catch(e => {\r\n                toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n                throw e;\r\n            })\r\n        },\r\n\r\n        // async loadObject(params: {id: number}) {\r\n        //     axios.get(`object/${params.id}`, {\r\n        //         headers: {\r\n        //             Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        //         }\r\n        //     }).then(response => {\r\n        //         this.objects = response.data\r\n        //     })\r\n        // },\r\n    }\r\n})",
      "start": 1751281484320,
      "end": 1751281485977,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1751281485977,
      "end": 1751281485977,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1751281485977,
      "end": 1751281485977,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1751281485977,
      "end": 1751281485977,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1751281485977,
      "end": 1751281485977,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1751281485977,
      "end": 1751281485977,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport { toast } from \"vue3-toastify\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nexport const useSales = defineStore(\"sales\", {\n  state: () => ({\n    sales: {}\n  }),\n  getters: {\n    get_objects(object) {\n      return this.objects;\n    }\n  },\n  actions: {\n    async loadSalesList(params) {\n      axios.get(`sales/list?page=${params.page}&limit=${params.limit}${params.name ? `&name=${params.name}` : \"\"}${params.min_price ? `&min_price=${params.min_price}` : \"\"}${params.max_price ? `&max_price=${params.max_price}` : \"\"}${params.min_count ? `&min_count=${params.min_count}` : \"\"}${params.max_count ? `&max_count=${params.max_count}` : \"\"}${params.order_by ? `&order_by=${params.order_by}` : \"\"}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.sales = response.data;\n      });\n    },\n    async loadSalesListFile() {\n      axios.post(`sales/report`, {}, {\n        responseType: \"blob\",\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        console.log(response);\n        if (response.status === 201) {\n          toast.success(\"Создание отчёта началось!\", { autoClose: 1500, theme: \"auto\" });\n        } else if (response.status === 200) {\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const a = document.createElement(\"a\");\n          a.href = url;\n          a.download = `sales.xlsx`;\n          document.body.appendChild(a);\n          a.click();\n          window.URL.revokeObjectURL(url);\n          document.body.removeChild(a);\n        }\n      });\n    },\n    async createItem(params) {\n      axios.post(`sales/create`, params.form, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        toast.success(\"Товар успешно создан!\", { autoClose: 1500, theme: \"auto\" });\n      }).catch((e) => {\n        toast.error(e, { autoClose: 1500, theme: \"auto\" });\n        throw e;\n      });\n    }\n    // async loadObject(params: {id: number}) {\n    //     axios.get(`object/${params.id}`, {\n    //         headers: {\n    //             Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n    //         }\n    //     }).then(response => {\n    //         this.objects = response.data\n    //     })\n    // },\n  }\n});\n",
      "start": 1751281485977,
      "end": 1751281486410,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/stores/sales.ts"
        ],
        "sourcesContent": [
          "import {defineStore} from \"pinia\";\r\nimport axios from \"~/composables/axios\";\r\nimport {toast} from \"vue3-toastify\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useSales = defineStore('sales', {\r\n    state:() => ({\r\n        sales: {}\r\n    }),\r\n    getters: {\r\n        get_objects(object) {\r\n            return this.objects\r\n        }\r\n    },\r\n    actions: {\r\n        async loadSalesList(params: any) {\r\n            axios.get(`sales/list?page=${params.page}&limit=${params.limit}${params.name ? `&name=${params.name}` : ''}${params.min_price ? `&min_price=${params.min_price}` : ''}${params.max_price ? `&max_price=${params.max_price}` : ''}${params.min_count ? `&min_count=${params.min_count}` : ''}${params.max_count ? `&max_count=${params.max_count}` : ''}${params.order_by ? `&order_by=${params.order_by}` : ''}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n                }\r\n            }).then(response => {\r\n                this.sales = response.data\r\n            })\r\n        },\r\n        async loadSalesListFile() {\r\n            axios.post(`sales/report`, {}, {\r\n                responseType: 'blob',\r\n                headers: {\r\n                    Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n                }\r\n            }).then(response => {\r\n                console.log(response)\r\n                if(response.status === 201){\r\n                    toast.success('Создание отчёта началось!', {autoClose: 1500, theme: 'auto'})\r\n                } else if (response.status === 200){\r\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n                    const a = document.createElement('a');\r\n                    a.href = url;\r\n                    a.download = `sales.xlsx`;\r\n                    document.body.appendChild(a);\r\n                    a.click();\r\n\r\n                    window.URL.revokeObjectURL(url);\r\n                    document.body.removeChild(a);\r\n                }\r\n            })\r\n        },\r\n\r\n        async createItem(params: any) {\r\n\r\n            axios.post(`sales/create`, params.form, {\r\n                headers: {\r\n                    Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n                }\r\n            }).then(response => {\r\n                toast.success('Товар успешно создан!', {autoClose: 1500, theme: 'auto'})\r\n            }).catch(e => {\r\n                toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n                throw e;\r\n            })\r\n        },\r\n\r\n        // async loadObject(params: {id: number}) {\r\n        //     axios.get(`object/${params.id}`, {\r\n        //         headers: {\r\n        //             Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        //         }\r\n        //     }).then(response => {\r\n        //         this.objects = response.data\r\n        //     })\r\n        // },\r\n    }\r\n})"
        ],
        "mappings": "AAAA,SAAQ,mBAAkB;AAC1B,OAAO,WAAW;AAClB,SAAQ,aAAY;AACpB,OAAO,iBAAiB;AACjB,aAAM,WAAW,YAAY,SAAS;AAAA,EACzC,OAAM,OAAO;AAAA,IACT,OAAO,CAAC;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,IACL,YAAY,QAAQ;AAChB,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AAAA,EACA,SAAS;AAAA,IACL,MAAM,cAAc,QAAa;AAC7B,YAAM,IAAI,mBAAmB,OAAO,IAAI,UAAU,OAAO,KAAK,GAAG,OAAO,OAAO,SAAS,OAAO,IAAI,KAAK,EAAE,GAAG,OAAO,YAAY,cAAc,OAAO,SAAS,KAAK,EAAE,GAAG,OAAO,YAAY,cAAc,OAAO,SAAS,KAAK,EAAE,GAAG,OAAO,YAAY,cAAc,OAAO,SAAS,KAAK,EAAE,GAAG,OAAO,YAAY,cAAc,OAAO,SAAS,KAAK,EAAE,GAAG,OAAO,WAAW,aAAa,OAAO,QAAQ,KAAK,EAAE,IAAI;AAAA,QAC9Y,SAAS;AAAA,UACL,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACtE;AAAA,MACJ,CAAC,EAAE,KAAK,cAAY;AAChB,aAAK,QAAQ,SAAS;AAAA,MAC1B,CAAC;AAAA,IACL;AAAA,IACA,MAAM,oBAAoB;AACtB,YAAM,KAAK,gBAAgB,CAAC,GAAG;AAAA,QAC3B,cAAc;AAAA,QACd,SAAS;AAAA,UACL,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACtE;AAAA,MACJ,CAAC,EAAE,KAAK,cAAY;AAChB,gBAAQ,IAAI,QAAQ;AACpB,YAAG,SAAS,WAAW,KAAI;AACvB,gBAAM,QAAQ,6BAA6B,EAAC,WAAW,MAAM,OAAO,OAAM,CAAC;AAAA,QAC/E,WAAW,SAAS,WAAW,KAAI;AAC/B,gBAAM,MAAM,OAAO,IAAI,gBAAgB,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC;AAEhE,gBAAM,IAAI,SAAS,cAAc,GAAG;AACpC,YAAE,OAAO;AACT,YAAE,WAAW;AACb,mBAAS,KAAK,YAAY,CAAC;AAC3B,YAAE,MAAM;AAER,iBAAO,IAAI,gBAAgB,GAAG;AAC9B,mBAAS,KAAK,YAAY,CAAC;AAAA,QAC/B;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IAEA,MAAM,WAAW,QAAa;AAE1B,YAAM,KAAK,gBAAgB,OAAO,MAAM;AAAA,QACpC,SAAS;AAAA,UACL,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACtE;AAAA,MACJ,CAAC,EAAE,KAAK,cAAY;AAChB,cAAM,QAAQ,yBAAyB,EAAC,WAAW,MAAM,OAAO,OAAM,CAAC;AAAA,MAC3E,CAAC,EAAE,MAAM,OAAK;AACV,cAAM,MAAM,GAAG,EAAC,WAAW,MAAM,OAAO,OAAM,CAAC;AAC/C,cAAM;AAAA,MACV,CAAC;AAAA,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWJ;AACJ,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1751281486411,
      "end": 1751281486411,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1751281486412,
      "end": 1751281486412,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1751281486413,
      "end": 1751281486413,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1751281486413,
      "end": 1751281486413,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1751281486414,
      "end": 1751281486414,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1751281486415,
      "end": 1751281486415,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1751281486415,
      "end": 1751281486415,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1751281486415,
      "end": 1751281486415,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1751281486415,
      "end": 1751281486416,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1751281486416,
      "end": 1751281486416,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1751281486416,
      "end": 1751281486416,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1751281486416,
      "end": 1751281486416,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751281486416,
      "end": 1751281486416,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751281486416,
      "end": 1751281486416,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751281486417,
      "end": 1751281486417,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1751281486417,
      "end": 1751281486417,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751281486418,
      "end": 1751281486418,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751281486418,
      "end": 1751281486418,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1751281486419,
      "end": 1751281486419,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1751281486421,
      "end": 1751281486421,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1751281486423,
      "end": 1751281486423,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1751281486423,
      "end": 1751281486423,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1751281486424,
      "end": 1751281486431,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1751281486431,
      "end": 1751281486431,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1751281486432,
      "end": 1751281486432,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1751281486432,
      "end": 1751281486432,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1751281486433,
      "end": 1751281486433,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1751281486433,
      "end": 1751281486433,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1751281486434,
      "end": 1751281486434,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751281486434,
      "end": 1751281486434,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751281486434,
      "end": 1751281486434,
      "order": "normal"
    }
  ]
}
