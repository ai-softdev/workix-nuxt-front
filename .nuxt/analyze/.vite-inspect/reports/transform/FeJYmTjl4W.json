{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/date-fns/esm/getWeekYear/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport default function getWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}",
      "start": 1748346348985,
      "end": 1748346349017,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748346349017,
      "end": 1748346349017,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748346349017,
      "end": 1748346349018,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748346349018,
      "end": 1748346349018,
      "order": "normal"
    }
  ]
}
