{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_baseIsArguments.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n",
      "start": 1741373249632,
      "end": 1741373249642,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741373249642,
      "end": 1741373249642,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_baseGetTag.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/isObjectLike.js?commonjs-proxy\";\n\nvar baseGetTag = require$$0,\n    isObjectLike = require$$1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nvar _baseIsArguments = baseIsArguments;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(_baseIsArguments);\nexport { _baseIsArguments as __moduleExports };",
      "start": 1741373249643,
      "end": 1741373249643,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;AAAA,IAAI,UAAU,GAAG,UAAwB;AACzC,IAAI,YAAY,GAAG,UAAyB,CAAC;AAC7C;AACA;AACA,IAAI,OAAO,GAAG,oBAAoB,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,KAAK,EAAE;AAChC,EAAE,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;AAC7D,CAAC;AACD;IACA,gBAAc,GAAG,eAAe"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741373249644,
      "end": 1741373249644,
      "order": "normal"
    }
  ]
}
