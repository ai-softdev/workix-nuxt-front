{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/date-fns/esm/formatRFC7231/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2);\n\n  // Result variables.\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}",
      "start": 1749812707245,
      "end": 1749812707274,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749812707274,
      "end": 1749812707274,
      "order": "normal"
    }
  ]
}
