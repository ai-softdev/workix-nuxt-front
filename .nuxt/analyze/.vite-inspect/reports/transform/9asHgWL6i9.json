{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/components/Tasks/TasksContent.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n  <div class=\"my-6\">\r\n    <form @submit.prevent>\r\n      <div class=\"flex items-center gap-3 max-[768px]:flex-col\">\r\n        <div class=\"w-6/12 flex items-center gap-3 max-[768px]:w-full\">\r\n          <TheSearch\r\n              class=\"w-full\"\r\n              v-model:model-value=\"params.query\"\r\n              @search=\"tasksList.loadTasksLists({...params, query: params.query})\"\r\n          />\r\n          <TasksContentSearch\r\n              @setFilters=\"setFilters\"\r\n          />\r\n        </div>\r\n        <button\r\n            class=\"w-3/12 max-[768px]:w-full flex items-center gap-2 justify-center ml-auto bg-golden px-10 py-2.5 rounded-full font-bold max-md:py-2 active:scale-95 transition-all duration-200\"\r\n            @click=\"showCreate = true; loads()\"\r\n        >\r\n          <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.5 1V15M1.5 8H15.5\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"/>\r\n          </svg>\r\n          {{ $t('Создать задание') }}\r\n        </button>\r\n      </div>\r\n    </form>\r\n    <div v-if=\"tasksList.get_tasks.results\" id=\"content\" class=\"mx-auto\">\r\n      <div\r\n          class=\"flex gap-x-2.5 my-10 flex-wrap max-md:mx-auto max-md:justify-center gap-y-5 \"\r\n      >\r\n        <button class=\"p-2 border rounded-full dark:text-white px-4 py-2 font-bold text-mediumGray\"\r\n                :class=\"{'bg-golden border-golden text-white' : taskChecked === 'all'}\"\r\n                @click=\"taskChecked = 'all'; tasksList.loadTasksLists({page: 1, limit: params.limit, filter: `&filter=${taskChecked}`, query: params.query}); tasksList.loadTasksStats({task_filter: `filter=${taskChecked}`})\"\r\n        >\r\n          {{ $t('Общее') }}\r\n        </button>\r\n        <button class=\"p-2 border rounded-full dark:text-white px-4 py-2 font-bold text-mediumGray\"\r\n                :class=\"{'bg-golden border-golden text-white' : taskChecked === 'to-me'}\"\r\n                @click=\"taskChecked = 'to-me'; tasksList.loadTasksLists({page: 1, limit: params.limit, filter: `&filter=${taskChecked}`, query: params.query}); tasksList.loadTasksStats({task_filter: `filter=${taskChecked}`})\"\r\n        >\r\n          {{ $t('Для Меня') }}\r\n        </button>\r\n        <button class=\"p-2 border rounded-full dark:text-white px-4 py-2 font-bold text-mediumGray\"\r\n                :class=\"{'bg-golden border-golden text-white' : taskChecked === 'from-me'}\"\r\n                @click=\"taskChecked = 'from-me'; tasksList.loadTasksLists({page: 1, limit: params.limit, filter: `&filter=${taskChecked}`, query: params.query}); tasksList.loadTasksStats({task_filter: `filter=${taskChecked}`})\"\r\n        >\r\n          {{ $t('От Меня') }}\r\n        </button>\r\n      </div>\r\n      <TasksContentBlock\r\n          v-if=\"params.query === ''\"\r\n          v-for=\"task of tasksList?.get_tasks.results\"\r\n          :task=\"task\"\r\n      />\r\n      <TasksContentBlock\r\n          v-if=\"params.query !== ''\"\r\n          v-for=\"taskSearch in tasksList?.get_search_task.results\"\r\n          :task=\"taskSearch\"\r\n      />\r\n    </div>\r\n    <div v-else>\r\n      <div v-if=\"loadCurrentUser.user.permissions?.find(value => value.name_en === 'task.create')\"\r\n           class=\"flex mt-10 items-center gap-x-10\">\r\n        <div class=\"flex gap-x-4\">\r\n          <TheSceleton v-for=\"i in 3\" border-radius=\"5px\" width=\"100px\" height=\"20px\"></TheSceleton>\r\n        </div>\r\n        <TheSceleton border-radius=\"10px\" width=\"150px\" height=\"30px\"></TheSceleton>\r\n      </div>\r\n      <div class=\"flex mt-10 flex-col gap-y-6\">\r\n        <TheSceleton v-for=\"i in 5\" class=\"opacity-50\" border-radius=\"5px\" width=\"92%\" height=\"120px\"></TheSceleton>\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center mt-10 flex flex-col items-center gap-y-6 gap-x-10\" v-if=\"tasksList?.get_tasks.count === 0\">\r\n      <p class=\"text-2xl dark:text-white\">{{ $t('Ничего не найдено') }}</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex justify-center gap-x-4\">\r\n    <div\r\n        v-if=\"tasksList.get_tasks.count > 5\"\r\n        v-for=\"(page, id) in tasksList.get_tasks.links\"\r\n        :key=\"id\"\r\n        class=\"px-4 py-2 rounded-full cursor-pointer\"\r\n        :class=\"{'bg-blue-400 text-white' : page.active, 'bg-gray-200 text-black hover:bg-blue-400 hover:text-white transition-all' : !page.active}\"\r\n        @click=\"loadPage(page.label); tasksList.loadTasksLists({page: params.page, limit: params.limit, query: params.query})\"\r\n    >\r\n      {{ page.label }}\r\n    </div>\r\n  </div>\r\n  <TheModal v-if=\"showCreate\"\r\n            @showModal=\"showCreate = !showCreate; !showCreate ? createForm.description = '' : createForm \">\r\n    <div>\r\n      <TheTextContent>{{ $t('Создание задания') }}</TheTextContent>\r\n      <form\r\n          @submit.prevent=\"tasksList.create_task({...createForm, performers: filteredParticipants?.filter(e => e.value).map(i => i.id)}); showCreate = false\">\r\n        <TaskContentCreateElems>\r\n          <div\r\n              v-if=\"loadCurrentUser.user.role_en === 'department_director' || loadCurrentUser.user.role_en === 'vice_department_director'\"\r\n              class=\"w-full max-lg:w-full\">\r\n            <TheInput type=\"text\" :label=\"$t('Заголовок')\" v-model=\"createForm.title\"/>\r\n          </div>\r\n          <div v-else class=\"w-6/12 max-lg:w-full\">\r\n            <TheInput type=\"text\" :label=\"$t('Заголовок')\" v-model=\"createForm.title\"/>\r\n          </div>\r\n          <div class=\"w-6/12 max-lg:w-full flex flex-col gap-y-2\">\r\n            <p class=\"text-md dark:text-white tracking-wider\">{{ $t('Отдел') }}</p>\r\n            <select type=\"text\" v-model=\"createForm.department\"\r\n                    class=\"w-full text-black rounded-lg p-2.5 border dark:bg-gray-300 dark:border-none outline-semiCyan outline-1\"\r\n                    @change=\"onDepartmentChange\">\r\n              <option v-for=\"department in companies.get_all_department.results\" :value=\"department\">\r\n                {{ department.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </TaskContentCreateElems>\r\n        <TaskContentCreateElems>\r\n          <div class=\"w-6/12 max-lg:w-full flex flex-col gap-y-2\">\r\n            <p class=\"text-md dark:text-white tracking-wider\">{{ $t('Ответственный') }}</p>\r\n            <select type=\"text\" v-model=\"createForm.main_performer_id\"\r\n                    class=\"w-full text-black rounded-lg p-2.5 border dark:bg-gray-300 dark:border-none outline-semiCyan outline-1\">\r\n              <option v-for=\"main_performer in filteredParticipants\"\r\n                      :value=\"main_performer?.id\"\r\n                      :key=\"main_performer?.id\"\r\n              >\r\n                {{ main_performer.first_name + ' ' + main_performer.last_name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div\r\n              class=\"w-6/12 max-lg:w-full flex flex-col gap-y-2 border p-2 rounded-lg\">\r\n            <p class=\"text-md dark:text-white tracking-wider text-center\">{{ $t('Исполнители') }}</p>\r\n            <div v-for=\"performer in companies.current_department?.participants\" :for=\"'checkbox-' + performer?.id\">\r\n              <label v-if=\"performer.id !== loadCurrentUser.user.id\" class=\"cursor-pointer\">\r\n                <TheCheckbox :item=\"performer\" :id=\"'checkbox-' + performer?.id\">\r\n                </TheCheckbox>\r\n                <span class=\"ml-10\">{{ performer.first_name + ' ' + performer.last_name }}</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </TaskContentCreateElems>\r\n        <TaskContentCreateElems>\r\n          <div class=\"w-6/12 max-lg:w-full text-black\">\r\n            <TheInput type=\"textarea\" :label=\"$t('Описание задания')\" v-model=\"createForm.description\"/>\r\n          </div>\r\n          <div class=\"w-6/12 max-lg:w-full flex flex-col gap-y-2 rounded-lg border\">\r\n            <div class=\"text-center tracking-widest pt-4 pb-10\">\r\n              <h2 class=\"dark:text-white\">{{ $t('Прикрепите файлы к заданию') }}</h2>\r\n              <h2 class=\"text-gray-300\">({{ $t('не обязательно') }})</h2>\r\n            </div>\r\n            <TheInput class=\"\" type=\"file\" id=\"upload-file\"\r\n                      @input=\"createForm.author_file_file = $event.target.files\"></TheInput>\r\n          </div>\r\n        </TaskContentCreateElems>\r\n        <TaskContentCreateElems>\r\n          <div class=\"text-center\">\r\n            <p class=\"text-md dark:text-white tracking-wider mb-2\">{{ $t('Срок до') }}</p>\r\n            <vue-date-picker v-model=\"createForm.deadline\" :select-text=\"$t('Выбрать')\"\r\n                             :min-date=\"new Date()\"\r\n                             :timezone=\"timezone\"\r\n                             :cancel-text=\"$t('Отменить')\" placeholder=\"Start Typing ...\" text-input\r\n                             class=\"w-full rounded-lg p-2 dark:border-none outline-semiCyan outline-1\" auto-apply inline\r\n                             multi-calendars-solo/>\r\n          </div>\r\n        </TaskContentCreateElems>\r\n        <TaskContentCreateElems>\r\n          <TheButton class=\"py-2 px-6 rounded-full\" t=\"button\" type=\"danger\" @click=\"showCreate = false\">\r\n            {{ $t('Отменить') }}\r\n          </TheButton>\r\n          <TheButton class=\"py-2 px-6 rounded-full\" t=\"submit\" type=\"success\" @click=\"validationForm()\">\r\n            {{ $t('Создать') }}\r\n          </TheButton>\r\n        </TaskContentCreateElems>\r\n      </form>\r\n    </div>\r\n  </TheModal>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport TasksContentSearch from \"~/components/Tasks/TaskUI/TasksContentSearch.vue\";\r\nimport TasksContentBlock from \"~/components/Tasks/TaskUI/TasksContentBlock.vue\";\r\nimport TaskContentCreateElems from \"~/components/Tasks/TaskUI/TaskContentCreateElems.vue\";\r\nimport TheModal from \"~/components/UI/TheModal.vue\";\r\nimport TheSearch from \"~/components/UI/TheSearch.vue\";\r\nimport TheCheckboxCreateUser from \"~/components/User/UserUI/TheCheckboxCreateUser.vue\";\r\nimport {useAuthStore} from \"~/stores/auth\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\r\nimport \"@vuepic/vue-datepicker/dist/main.css\"\r\nimport TheButton from \"~/components/UI/TheButton.vue\";\r\nimport {toast} from \"vue3-toastify\"\r\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\r\nimport TheInput from \"~/components/UI/TheInput.vue\";\r\nimport {useCompanies} from \"~/stores/companies\";\r\nimport {useTaskList} from \"~/stores/tasks\";\r\nimport TheSceleton from \"~/components/UI/TheSceleton.vue\";\r\nimport TheCheckbox from \"~/components/UI/TheCheckbox.vue\";\r\n\r\nconst loadCurrentUser = useAuthStore()\r\nconst tasksList = useTaskList()\r\nconst companies = useCompanies()\r\nconst timezone = ref('UTC');\r\nconst createForm = ref({\r\n  title: '',\r\n  description: '',\r\n  deadline: '',\r\n  author_file_file: '',\r\n  performers: [],\r\n  department: {},\r\n  participants: [],\r\n  worth: 0,\r\n  main_performer_id: {},\r\n  performer_file: '',\r\n})\r\n\r\nconst params = {\r\n  page: 1,\r\n  limit: 5,\r\n  query: '',\r\n  task_type: 'task-list',\r\n}\r\n\r\nconst filteredParticipants = ref([])\r\n\r\nfunction onDepartmentChange() {\r\n  const selectedDepartment = createForm.value.department;\r\n  companies.loadDepartment({id: selectedDepartment.id})\r\n}\r\n\r\nfunction setFilters(status){\r\n  tasksList.loadTasksLists({page: 1, limit: params.limit, status: `&status=${status}`, query: params.query})\r\n}\r\n\r\nfunction loads() {\r\n  companies.loadDepartmentList()\r\n  createForm.value.department = companies.get_department\r\n  createForm.value.participants = companies.get_department.participants.map(e => {\r\n    e.value = createForm.value.participants?.filter(i => i.id == e.id).length != 0\r\n  })\r\n}\r\n\r\nfunction validationForm() {\r\n  if (createForm?.value.deadline === '') {\r\n    toast.error('Укажите срок', {theme: \"auto\", autoClose: 1500})\r\n  }\r\n}\r\n\r\nfunction loadPage(page: any) {\r\n  if (page === '<') {\r\n    if (Number(params.page) > 1) {\r\n      params.page -= 1;\r\n    }\r\n  } else if (page === '>') {\r\n    if (Number(params.page) < tasksList.task?.number_of_pages) {\r\n      params.page = Number(params.page) + 1\r\n    }\r\n  } else {\r\n    if (Number(page) <= tasksList.task?.number_of_pages) {\r\n      params.page = Number(page)\r\n    }\r\n  }\r\n  // console.log(page)\r\n  if (window.innerWidth > 1000) {\r\n    window.scrollTo({top: 600})\r\n  } else if (window.innerWidth < 1000) {\r\n    window.scrollTo({top: 895})\r\n  } else {\r\n    window.scrollTo()\r\n  }\r\n}\r\n\r\n\r\ndefineProps({\r\n  showTask: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  changeInfo: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  showConfirm: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  showCreate: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  task_info: {\r\n    type: Object,\r\n    required: true,\r\n    default: () => {\r\n    }\r\n  },\r\n  taskChecked: {\r\n    type: String,\r\n    default: 'list'\r\n  },\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  navigateTo({\r\n    params: {\r\n      page: params.page\r\n    }\r\n  })\r\n})\r\nwatchEffect(() => {\r\n  tasksList.loadTasksLists({page: params.page, limit: params.limit, query: params.query})\r\n  tasksList.loadTasksStats({task_filter: params.task_type})\r\n\r\n  const participants = companies.current_department.participants\r\n  const currentUserId = loadCurrentUser.user?.id\r\n\r\n  if (participants && currentUserId) {\r\n    filteredParticipants.value = participants.filter(\r\n        participant => participant.id !== currentUserId\r\n    )\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n* {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n\r\n.active-page {\r\n  background-color: #3498db;\r\n  border: 1px solid #3498db;\r\n  color: white;\r\n}\r\n\r\n.active-page:hover {\r\n  background-color: #2988c8;\r\n}\r\n\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n  transition: all 0.75s ease-out;\r\n}\r\n\r\n.slide-enter-to {\r\n  position: absolute;\r\n  right: 0;\r\n}\r\n\r\n.slide-enter-from {\r\n  position: absolute;\r\n  right: -100%;\r\n}\r\n\r\n.slide-leave-to {\r\n  position: absolute;\r\n  left: -100%;\r\n}\r\n\r\n.slide-leave-from {\r\n  position: absolute;\r\n  left: 0;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7);\r\n  }\r\n\r\n  70% {\r\n    transform: scale(1);\r\n    box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);\r\n  }\r\n}\r\n\r\n</style>",
      "start": 1752216120231,
      "end": 1752216120860,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1752216120860,
      "end": 1752216120860,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"D:/projects/nuxt/workix-nuxt-front/components/Tasks/TasksContent.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"D:/projects/nuxt/workix-nuxt-front/components/Tasks/TasksContent.vue?vue&type=script&setup=true&lang.ts\";\nimport \"D:/projects/nuxt/workix-nuxt-front/components/Tasks/TasksContent.vue?vue&type=style&index=0&lang.css\";\nexport default _sfc_main;\n",
      "start": 1752216120860,
      "end": 1752216121704,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1752216121705,
      "end": 1752216121705,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1752216121705,
      "end": 1752216121706,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1752216121706,
      "end": 1752216121706,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1752216121706,
      "end": 1752216121706,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1752216121707,
      "end": 1752216121707,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1752216121708,
      "end": 1752216121708,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1752216121708,
      "end": 1752216121708,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1752216121708,
      "end": 1752216121708,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1752216121709,
      "end": 1752216121709,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1752216121709,
      "end": 1752216121709,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1752216121709,
      "end": 1752216121709,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1752216121710,
      "end": 1752216121710,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1752216121710,
      "end": 1752216121710,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1752216121710,
      "end": 1752216121710,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1752216121710,
      "end": 1752216121710,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1752216121711,
      "end": 1752216121711,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1752216121711,
      "end": 1752216121712,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1752216121712,
      "end": 1752216121712,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1752216121712,
      "end": 1752216121713,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1752216121713,
      "end": 1752216121715,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1752216121716,
      "end": 1752216121716,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1752216121717,
      "end": 1752216121717,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1752216121719,
      "end": 1752216121719,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1752216121720,
      "end": 1752216121720,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1752216121720,
      "end": 1752216121721,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1752216121721,
      "end": 1752216121721,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1752216121721,
      "end": 1752216121722,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1752216121722,
      "end": 1752216121722,
      "order": "normal"
    }
  ]
}
