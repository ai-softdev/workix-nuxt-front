{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_listCacheDelete.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n",
      "start": 1750922116932,
      "end": 1750922116987,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750922116987,
      "end": 1750922116987,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_assocIndexOf.js?commonjs-proxy\";\n\nvar assocIndexOf = require$$0;\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nvar _listCacheDelete = listCacheDelete;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(_listCacheDelete);\nexport { _listCacheDelete as __moduleExports };",
      "start": 1750922116987,
      "end": 1750922117053,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,IAAI,YAAY,GAAG,UAA0B,CAAC;AAC9C;AACA;AACA,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC;AACjC;AACA;AACA,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,GAAG,EAAE;AAC9B,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ;AAC1B,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClC,EAAE,IAAI,KAAK,IAAI,SAAS,EAAE;AAC1B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAG,MAAM;AACT,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAChC,GAAG;AACH,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;AACd,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;IACA,gBAAc,GAAG,eAAe"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750922117053,
      "end": 1750922117053,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750922117053,
      "end": 1750922117053,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1750922117053,
      "end": 1750922117053,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1750922117053,
      "end": 1750922117053,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1750922117053,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1750922117054,
      "end": 1750922117054,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1750922117054,
      "end": 1750922117055,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750922117055,
      "end": 1750922117055,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750922117055,
      "end": 1750922117055,
      "order": "normal"
    }
  ]
}
