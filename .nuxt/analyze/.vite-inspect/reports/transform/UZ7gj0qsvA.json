{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_getRawTag.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n",
      "start": 1749115983184,
      "end": 1749115983221,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1749115983221,
      "end": 1749115983221,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749115983222,
      "end": 1749115983222,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_Symbol.js?commonjs-proxy\";\n\nvar Symbol = require$$0;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(_getRawTag);\nexport { _getRawTag as __moduleExports };",
      "start": 1749115983222,
      "end": 1749115983248,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,IAAI,MAAM,GAAG,UAAoB,CAAC;AAClC;AACA;AACA,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;AACnC;AACA;AACA,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,GAAG,WAAW,CAAC,QAAQ,CAAC;AAChD;AACA;AACA,IAAI,cAAc,GAAG,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,SAAS,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE;AAC1B,EAAE,IAAI,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC;AACxD,MAAM,GAAG,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;AAClC;AACA,EAAE,IAAI;AACN,IAAI,KAAK,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC;AACtC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC;AACxB,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE;AAChB;AACA,EAAE,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChD,EAAE,IAAI,QAAQ,EAAE;AAChB,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,KAAK,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;AAClC,KAAK,MAAM;AACX,MAAM,OAAO,KAAK,CAAC,cAAc,CAAC,CAAC;AACnC,KAAK;AACL,GAAG;AACH,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD;IACA,UAAc,GAAG,SAAS"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749115983248,
      "end": 1749115983248,
      "order": "normal"
    }
  ]
}
