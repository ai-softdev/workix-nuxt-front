{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/date-fns/esm/formatRFC3339/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\nexport default function formatRFC3339(dirtyDate, options) {\n  var _options$fractionDigi;\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var fractionDigits = Number((_options$fractionDigi = options === null || options === void 0 ? void 0 : options.fractionDigits) !== null && _options$fractionDigi !== void 0 ? _options$fractionDigi : 0);\n\n  // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(toInteger(absoluteOffset / 60), 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2);\n    // If less than 0, the sign is +, because it is ahead of time.\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}",
      "start": 1741373248197,
      "end": 1741373248235,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741373248235,
      "end": 1741373248235,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1741373248235,
      "end": 1741373248236,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741373248236,
      "end": 1741373248236,
      "order": "normal"
    }
  ]
}
