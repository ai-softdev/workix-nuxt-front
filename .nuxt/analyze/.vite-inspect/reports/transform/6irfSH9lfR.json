{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/stores/companies.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport {toast} from \"vue3-toastify\";\nimport type {Router} from \"vue-router\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\n\nexport const useCompanies = defineStore('current-company', {\n  state: () => ({\n    company: {\n      id: '',\n      name: '',\n      address: '',\n      created_at: '',\n      description: '',\n      email: '',\n      logo_file: '',\n      users_count: '',\n      departments_count: '',\n      objects_count: ''\n    },\n    news: {\n      title: '',\n      description: '',\n      photo: '',\n      photo_url: ''\n    },\n    department: {\n      id: null,\n      name: '',\n      participants: []\n    },\n    current_department: {\n      id: '',\n      name: '',\n      participants: []\n    }\n  }),\n  getters: {\n    current_company(company) {\n      return this.company\n    },\n    get_all_company(company) {\n      return this.company\n    },\n    get_all_news(news) {\n      return this.news\n    },\n    get_all_department(department) {\n      return this.department\n    },\n    get_department(current_department){\n      return this.current_department\n    }\n  },\n  actions: {\n    async loadCurrentCompany() {\n      await axios.get('company/current', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n      })\n    },\n    async loadCompanyList(params: { page: number, limit: number, query: string }) {\n      await axios.get(`company/list?page=${params.page}&limit=${params.limit}&query=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n      })\n    },\n    async loadCompany(params: { id: number }) {\n      await axios.get(`company/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n      })\n    },\n    async loadDepartmentList() {\n      await axios.get('department/', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.department = response.data\n      })\n    },\n    async loadDepartment(params: { id: number }) {\n      await axios.get(`department/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.current_department = response.data\n      })\n    },\n\n    async loadNewsList() {\n      await axios.get(`news/news-list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.news = response.data\n      })\n    },\n    async loadNews(params: { id: number }) {\n      await axios.get(`news/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.news = response.data\n      })\n    },\n\n    async createCompany(params: { name: any }): Promise<void> {\n      await axios.post(`company/create`, {\n        name: params.name,\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n        toast.success('Компания успешно создана', {autoClose: 1500, theme: 'auto'})\n        this.loadCompanyList({page: 1, limit: 5, query: ''})\n      }).catch(e => {\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\n      })\n    },\n\n    async createDepartment(params: { department: any }) {\n      await axios.post(`department/`, {\n        name: params.department.name,\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.department = res.data\n        this.loadDepartmentList()\n      }).catch(e => {\n        toast.error('Ошибка при создании', {theme: 'auto', autoClose: 1500})\n      })\n    },\n    async deleteDepartment(params: {id: any}, router: Router) {\n      await axios.delete(`department/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        toast.success('Успешно удалён', {autoClose: 1500, theme: 'auto'})\n        this.department = res.data\n        router.go(-1)\n      })\n    }\n  }\n})",
      "start": 1742237853369,
      "end": 1742237853688,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1742237853688,
      "end": 1742237853688,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1742237853688,
      "end": 1742237853688,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1742237853688,
      "end": 1742237853688,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1742237853688,
      "end": 1742237853688,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1742237853688,
      "end": 1742237853688,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport { toast } from \"vue3-toastify\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nexport const useCompanies = defineStore(\"current-company\", {\n  state: () => ({\n    company: {\n      id: \"\",\n      name: \"\",\n      address: \"\",\n      created_at: \"\",\n      description: \"\",\n      email: \"\",\n      logo_file: \"\",\n      users_count: \"\",\n      departments_count: \"\",\n      objects_count: \"\"\n    },\n    news: {\n      title: \"\",\n      description: \"\",\n      photo: \"\",\n      photo_url: \"\"\n    },\n    department: {\n      id: null,\n      name: \"\",\n      participants: []\n    },\n    current_department: {\n      id: \"\",\n      name: \"\",\n      participants: []\n    }\n  }),\n  getters: {\n    current_company(company) {\n      return this.company;\n    },\n    get_all_company(company) {\n      return this.company;\n    },\n    get_all_news(news) {\n      return this.news;\n    },\n    get_all_department(department) {\n      return this.department;\n    },\n    get_department(current_department) {\n      return this.current_department;\n    }\n  },\n  actions: {\n    async loadCurrentCompany() {\n      await axios.get(\"company/current\", {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.company = response.data;\n      });\n    },\n    async loadCompanyList(params) {\n      await axios.get(`company/list?page=${params.page}&limit=${params.limit}&query=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.company = response.data;\n      });\n    },\n    async loadCompany(params) {\n      await axios.get(`company/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.company = response.data;\n      });\n    },\n    async loadDepartmentList() {\n      await axios.get(\"department/\", {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.department = response.data;\n      });\n    },\n    async loadDepartment(params) {\n      await axios.get(`department/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.current_department = response.data;\n      });\n    },\n    async loadNewsList() {\n      await axios.get(`news/news-list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.news = response.data;\n      });\n    },\n    async loadNews(params) {\n      await axios.get(`news/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.news = response.data;\n      });\n    },\n    async createCompany(params) {\n      await axios.post(`company/create`, {\n        name: params.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((response) => {\n        this.company = response.data;\n        toast.success(\"Компания успешно создана\", { autoClose: 1500, theme: \"auto\" });\n        this.loadCompanyList({ page: 1, limit: 5, query: \"\" });\n      }).catch((e) => {\n        toast.error(e, { autoClose: 1500, theme: \"auto\" });\n      });\n    },\n    async createDepartment(params) {\n      await axios.post(`department/`, {\n        name: params.department.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.department = res.data;\n        this.loadDepartmentList();\n      }).catch((e) => {\n        toast.error(\"Ошибка при создании\", { theme: \"auto\", autoClose: 1500 });\n      });\n    },\n    async deleteDepartment(params, router) {\n      await axios.delete(`department/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        toast.success(\"Успешно удалён\", { autoClose: 1500, theme: \"auto\" });\n        this.department = res.data;\n        router.go(-1);\n      });\n    }\n  }\n});\n",
      "start": 1742237853688,
      "end": 1742237854228,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/stores/companies.ts"
        ],
        "sourcesContent": [
          "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport {toast} from \"vue3-toastify\";\nimport type {Router} from \"vue-router\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\n\nexport const useCompanies = defineStore('current-company', {\n  state: () => ({\n    company: {\n      id: '',\n      name: '',\n      address: '',\n      created_at: '',\n      description: '',\n      email: '',\n      logo_file: '',\n      users_count: '',\n      departments_count: '',\n      objects_count: ''\n    },\n    news: {\n      title: '',\n      description: '',\n      photo: '',\n      photo_url: ''\n    },\n    department: {\n      id: null,\n      name: '',\n      participants: []\n    },\n    current_department: {\n      id: '',\n      name: '',\n      participants: []\n    }\n  }),\n  getters: {\n    current_company(company) {\n      return this.company\n    },\n    get_all_company(company) {\n      return this.company\n    },\n    get_all_news(news) {\n      return this.news\n    },\n    get_all_department(department) {\n      return this.department\n    },\n    get_department(current_department){\n      return this.current_department\n    }\n  },\n  actions: {\n    async loadCurrentCompany() {\n      await axios.get('company/current', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n      })\n    },\n    async loadCompanyList(params: { page: number, limit: number, query: string }) {\n      await axios.get(`company/list?page=${params.page}&limit=${params.limit}&query=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n      })\n    },\n    async loadCompany(params: { id: number }) {\n      await axios.get(`company/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n      })\n    },\n    async loadDepartmentList() {\n      await axios.get('department/', {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.department = response.data\n      })\n    },\n    async loadDepartment(params: { id: number }) {\n      await axios.get(`department/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.current_department = response.data\n      })\n    },\n\n    async loadNewsList() {\n      await axios.get(`news/news-list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.news = response.data\n      })\n    },\n    async loadNews(params: { id: number }) {\n      await axios.get(`news/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.news = response.data\n      })\n    },\n\n    async createCompany(params: { name: any }): Promise<void> {\n      await axios.post(`company/create`, {\n        name: params.name,\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(response => {\n        this.company = response.data\n        toast.success('Компания успешно создана', {autoClose: 1500, theme: 'auto'})\n        this.loadCompanyList({page: 1, limit: 5, query: ''})\n      }).catch(e => {\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\n      })\n    },\n\n    async createDepartment(params: { department: any }) {\n      await axios.post(`department/`, {\n        name: params.department.name,\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.department = res.data\n        this.loadDepartmentList()\n      }).catch(e => {\n        toast.error('Ошибка при создании', {theme: 'auto', autoClose: 1500})\n      })\n    },\n    async deleteDepartment(params: {id: any}, router: Router) {\n      await axios.delete(`department/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        toast.success('Успешно удалён', {autoClose: 1500, theme: 'auto'})\n        this.department = res.data\n        router.go(-1)\n      })\n    }\n  }\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1742237854228,
      "end": 1742237854228,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1742237854228,
      "end": 1742237854228,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1742237854228,
      "end": 1742237854228,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1742237854229,
      "end": 1742237854229,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1742237854229,
      "end": 1742237854229,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1742237854229,
      "end": 1742237854229,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1742237854229,
      "end": 1742237854229,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1742237854229,
      "end": 1742237854229,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1742237854230,
      "end": 1742237854230,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1742237854231,
      "end": 1742237854231,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1742237854231,
      "end": 1742237854231,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1742237854231,
      "end": 1742237854231,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1742237854231,
      "end": 1742237854232,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1742237854232,
      "end": 1742237854241,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1742237854246,
      "end": 1742237854246,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1742237854246,
      "end": 1742237854246,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1742237854250,
      "end": 1742237854250,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1742237854250,
      "end": 1742237854250,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1742237854250,
      "end": 1742237854250,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1742237854251,
      "end": 1742237854251,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1742237854251,
      "end": 1742237854251,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1742237854252,
      "end": 1742237854252,
      "order": "normal"
    }
  ]
}
