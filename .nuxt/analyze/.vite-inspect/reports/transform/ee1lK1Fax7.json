{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/date-fns/esm/formatISO9075/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\nexport default function formatISO9075(dirtyDate, options) {\n  var _options$format, _options$representati;\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : '';\n\n  // Representation is either 'date' or 'complete'\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4);\n\n    // yyyyMMdd or yyyy-MM-dd.\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  }\n\n  // Representation is either 'time' or 'complete'\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2);\n\n    // If there's also date, separate it with time with a space\n    var separator = result === '' ? '' : ' ';\n\n    // HHmmss or HH:mm:ss.\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n  return result;\n}",
      "start": 1748868459011,
      "end": 1748868459036,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748868459036,
      "end": 1748868459036,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748868459036,
      "end": 1748868459037,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748868459037,
      "end": 1748868459037,
      "order": "normal"
    }
  ]
}
