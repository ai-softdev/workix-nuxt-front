{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/isTypedArray.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n",
      "start": 1743442383773,
      "end": 1743442383791,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743442383792,
      "end": 1743442383792,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_baseIsTypedArray.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_baseUnary.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000D:/projects/nuxt/workix-nuxt-front/node_modules/lodash/_nodeUtil.js?commonjs-proxy\";\n\nvar baseIsTypedArray = require$$0,\n    baseUnary = require$$1,\n    nodeUtil = require$$2;\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nvar isTypedArray_1 = isTypedArray;\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(isTypedArray_1);\nexport { isTypedArray_1 as __moduleExports };",
      "start": 1743442383792,
      "end": 1743442383917,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;AAAA,IAAI,gBAAgB,GAAG,UAA8B;AACrD,IAAI,SAAS,GAAG,UAAuB;AACvC,IAAI,QAAQ,GAAG,UAAsB,CAAC;AACtC;AACA;AACA,IAAI,gBAAgB,GAAG,QAAQ,IAAI,QAAQ,CAAC,YAAY,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,gBAAgB,GAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC;AACrF;IACA,cAAc,GAAG,YAAY"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1743442383917,
      "end": 1743442383917,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1743442383918,
      "end": 1743442383918,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743442383918,
      "end": 1743442383918,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743442383918,
      "end": 1743442383918,
      "order": "normal"
    }
  ]
}
