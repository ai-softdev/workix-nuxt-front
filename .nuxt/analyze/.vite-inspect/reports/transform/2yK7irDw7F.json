{
  "resolvedId": "C:/project/nuxt/workix-nuxt-front/node_modules/date-fns/esm/closestTo/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date | Number} dateToCompare - the date to compare with\n * @param {Array<Date> | Array<number>} datesArray - the array to search\n * @returns {Date | undefined} the date from the array closest to the given date or undefined if no valid value is given\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * const dateToCompare = new Date(2015, 8, 6)\n * const result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  if (isNaN(Number(dateToCompare))) return new Date(NaN);\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray;\n  // `dirtyDatesArray` is undefined or null\n  if (dirtyDatesArray == null) {\n    datesArray = [];\n\n    // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n\n    // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (isNaN(Number(currentDate))) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n    if (result == null || distance < Number(minDistance)) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}",
      "start": 1748615644832,
      "end": 1748615644877,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748615644877,
      "end": 1748615644877,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748615644877,
      "end": 1748615644878,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748615644878,
      "end": 1748615644878,
      "order": "normal"
    }
  ]
}
