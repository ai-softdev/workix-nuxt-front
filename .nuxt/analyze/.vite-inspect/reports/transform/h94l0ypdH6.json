{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/std-env/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const r=Object.create(null),E=e=>globalThis.process?.env||import.meta.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?r:globalThis),s=new Proxy(r,{get(e,o){return E()[o]??r[o]},has(e,o){const i=E();return o in i||o in r},set(e,o,i){const g=E(!0);return g[o]=i,!0},deleteProperty(e,o){if(!o)return!1;const i=E(!0);return delete i[o],!0},ownKeys(){const e=E(!0);return Object.keys(e)}}),t=typeof process<\"u\"&&process.env&&process.env.NODE_ENV||\"\",p=[[\"APPVEYOR\"],[\"AWS_AMPLIFY\",\"AWS_APP_ID\",{ci:!0}],[\"AZURE_PIPELINES\",\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"],[\"AZURE_STATIC\",\"INPUT_AZURE_STATIC_WEB_APPS_API_TOKEN\"],[\"APPCIRCLE\",\"AC_APPCIRCLE\"],[\"BAMBOO\",\"bamboo_planKey\"],[\"BITBUCKET\",\"BITBUCKET_COMMIT\"],[\"BITRISE\",\"BITRISE_IO\"],[\"BUDDY\",\"BUDDY_WORKSPACE_ID\"],[\"BUILDKITE\"],[\"CIRCLE\",\"CIRCLECI\"],[\"CIRRUS\",\"CIRRUS_CI\"],[\"CLOUDFLARE_PAGES\",\"CF_PAGES\",{ci:!0}],[\"CODEBUILD\",\"CODEBUILD_BUILD_ARN\"],[\"CODEFRESH\",\"CF_BUILD_ID\"],[\"DRONE\"],[\"DRONE\",\"DRONE_BUILD_EVENT\"],[\"DSARI\"],[\"GITHUB_ACTIONS\"],[\"GITLAB\",\"GITLAB_CI\"],[\"GITLAB\",\"CI_MERGE_REQUEST_ID\"],[\"GOCD\",\"GO_PIPELINE_LABEL\"],[\"LAYERCI\"],[\"HUDSON\",\"HUDSON_URL\"],[\"JENKINS\",\"JENKINS_URL\"],[\"MAGNUM\"],[\"NETLIFY\"],[\"NETLIFY\",\"NETLIFY_LOCAL\",{ci:!1}],[\"NEVERCODE\"],[\"RENDER\"],[\"SAIL\",\"SAILCI\"],[\"SEMAPHORE\"],[\"SCREWDRIVER\"],[\"SHIPPABLE\"],[\"SOLANO\",\"TDDIUM\"],[\"STRIDER\"],[\"TEAMCITY\",\"TEAMCITY_VERSION\"],[\"TRAVIS\"],[\"VERCEL\",\"NOW_BUILDER\"],[\"VERCEL\",\"VERCEL\",{ci:!1}],[\"VERCEL\",\"VERCEL_ENV\",{ci:!1}],[\"APPCENTER\",\"APPCENTER_BUILD_ID\"],[\"CODESANDBOX\",\"CODESANDBOX_SSE\",{ci:!1}],[\"STACKBLITZ\"],[\"STORMKIT\"],[\"CLEAVR\"],[\"ZEABUR\"],[\"CODESPHERE\",\"CODESPHERE_APP_ID\",{ci:!0}],[\"RAILWAY\",\"RAILWAY_PROJECT_ID\"],[\"RAILWAY\",\"RAILWAY_SERVICE_ID\"]];function B(){if(globalThis.process?.env)for(const e of p){const o=e[1]||e[0];if(globalThis.process?.env[o])return{name:e[0].toLowerCase(),...e[2]}}return globalThis.process?.env?.SHELL===\"/bin/jsh\"&&globalThis.process?.versions?.webcontainer?{name:\"stackblitz\",ci:!1}:{name:\"\",ci:!1}}const l=B(),d=l.name;function n(e){return e?e!==\"false\":!1}const I=globalThis.process?.platform||\"\",T=n(s.CI)||l.ci!==!1,R=n(globalThis.process?.stdout&&globalThis.process?.stdout.isTTY),U=typeof window<\"u\",h=n(s.DEBUG),C=t===\"test\"||n(s.TEST),f=t===\"production\",v=t===\"dev\"||t===\"development\",m=n(s.MINIMAL)||T||C||!R,a=/^win/i.test(I),M=/^linux/i.test(I),V=/^darwin/i.test(I),Y=!n(s.NO_COLOR)&&(n(s.FORCE_COLOR)||(R||a)&&s.TERM!==\"dumb\"||T),_=(globalThis.process?.versions?.node||\"\").replace(/^v/,\"\")||null,y=Number(_?.split(\".\")[0])||null,W=globalThis.process||Object.create(null),c={versions:{}},w=new Proxy(W,{get(e,o){if(o===\"env\")return s;if(o in e)return e[o];if(o in c)return c[o]}}),A=globalThis.process?.release?.name===\"node\",L=!!globalThis.Bun||!!globalThis.process?.versions?.bun,D=!!globalThis.Deno,O=!!globalThis.fastly,S=!!globalThis.Netlify,N=!!globalThis.EdgeRuntime,u=globalThis.navigator?.userAgent===\"Cloudflare-Workers\",b=!!globalThis.__lagon__,F=[[S,\"netlify\"],[N,\"edge-light\"],[u,\"workerd\"],[O,\"fastly\"],[D,\"deno\"],[L,\"bun\"],[A,\"node\"],[b,\"lagon\"]];function G(){const e=F.find(o=>o[0]);if(e)return{name:e[1]}}const P=G(),K=P?.name||\"\";export{s as env,R as hasTTY,U as hasWindow,L as isBun,T as isCI,Y as isColorSupported,h as isDebug,D as isDeno,v as isDevelopment,N as isEdgeLight,O as isFastly,b as isLagon,M as isLinux,V as isMacOS,m as isMinimal,S as isNetlify,A as isNode,f as isProduction,C as isTest,a as isWindows,u as isWorkerd,t as nodeENV,y as nodeMajorVersion,_ as nodeVersion,I as platform,w as process,d as provider,l as providerInfo,K as runtime,P as runtimeInfo};\n",
      "start": 1752216121471,
      "end": 1752216121822,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1752216121822,
      "end": 1752216121822,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1752216121822,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1752216121823,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1752216121823,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1752216121823,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1752216121823,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1752216121823,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1752216121823,
      "end": 1752216121823,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "var define_globalThis_process_env_default = {};\nvar define_import_meta_env_default = { BASE_URL: \"./\", MODE: \"production\", DEV: false, PROD: true, SSR: false };\nvar define_process_env_default = {};\nconst r = /* @__PURE__ */ Object.create(null), E = (e) => define_globalThis_process_env_default || define_import_meta_env_default || globalThis.Deno?.env.toObject() || globalThis.__env__ || (e ? r : globalThis), s = new Proxy(r, { get(e, o) {\n  return E()[o] ?? r[o];\n}, has(e, o) {\n  const i = E();\n  return o in i || o in r;\n}, set(e, o, i) {\n  const g = E(true);\n  return g[o] = i, true;\n}, deleteProperty(e, o) {\n  if (!o)\n    return false;\n  const i = E(true);\n  return delete i[o], true;\n}, ownKeys() {\n  const e = E(true);\n  return Object.keys(e);\n} }), t = typeof process < \"u\" && define_process_env_default && \"production\" || \"\", p = [[\"APPVEYOR\"], [\"AWS_AMPLIFY\", \"AWS_APP_ID\", { ci: true }], [\"AZURE_PIPELINES\", \"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"], [\"AZURE_STATIC\", \"INPUT_AZURE_STATIC_WEB_APPS_API_TOKEN\"], [\"APPCIRCLE\", \"AC_APPCIRCLE\"], [\"BAMBOO\", \"bamboo_planKey\"], [\"BITBUCKET\", \"BITBUCKET_COMMIT\"], [\"BITRISE\", \"BITRISE_IO\"], [\"BUDDY\", \"BUDDY_WORKSPACE_ID\"], [\"BUILDKITE\"], [\"CIRCLE\", \"CIRCLECI\"], [\"CIRRUS\", \"CIRRUS_CI\"], [\"CLOUDFLARE_PAGES\", \"CF_PAGES\", { ci: true }], [\"CODEBUILD\", \"CODEBUILD_BUILD_ARN\"], [\"CODEFRESH\", \"CF_BUILD_ID\"], [\"DRONE\"], [\"DRONE\", \"DRONE_BUILD_EVENT\"], [\"DSARI\"], [\"GITHUB_ACTIONS\"], [\"GITLAB\", \"GITLAB_CI\"], [\"GITLAB\", \"CI_MERGE_REQUEST_ID\"], [\"GOCD\", \"GO_PIPELINE_LABEL\"], [\"LAYERCI\"], [\"HUDSON\", \"HUDSON_URL\"], [\"JENKINS\", \"JENKINS_URL\"], [\"MAGNUM\"], [\"NETLIFY\"], [\"NETLIFY\", \"NETLIFY_LOCAL\", { ci: false }], [\"NEVERCODE\"], [\"RENDER\"], [\"SAIL\", \"SAILCI\"], [\"SEMAPHORE\"], [\"SCREWDRIVER\"], [\"SHIPPABLE\"], [\"SOLANO\", \"TDDIUM\"], [\"STRIDER\"], [\"TEAMCITY\", \"TEAMCITY_VERSION\"], [\"TRAVIS\"], [\"VERCEL\", \"NOW_BUILDER\"], [\"VERCEL\", \"VERCEL\", { ci: false }], [\"VERCEL\", \"VERCEL_ENV\", { ci: false }], [\"APPCENTER\", \"APPCENTER_BUILD_ID\"], [\"CODESANDBOX\", \"CODESANDBOX_SSE\", { ci: false }], [\"STACKBLITZ\"], [\"STORMKIT\"], [\"CLEAVR\"], [\"ZEABUR\"], [\"CODESPHERE\", \"CODESPHERE_APP_ID\", { ci: true }], [\"RAILWAY\", \"RAILWAY_PROJECT_ID\"], [\"RAILWAY\", \"RAILWAY_SERVICE_ID\"]];\nfunction B() {\n  if (define_globalThis_process_env_default)\n    for (const e of p) {\n      const o = e[1] || e[0];\n      if (define_globalThis_process_env_default[o])\n        return { name: e[0].toLowerCase(), ...e[2] };\n    }\n  return define_globalThis_process_env_default?.SHELL === \"/bin/jsh\" && globalThis.process?.versions?.webcontainer ? { name: \"stackblitz\", ci: false } : { name: \"\", ci: false };\n}\nconst l = B(), d = l.name;\nfunction n(e) {\n  return e ? e !== \"false\" : false;\n}\nconst I = globalThis.process?.platform || \"\", T = n(s.CI) || l.ci !== false, R = n(globalThis.process?.stdout && globalThis.process?.stdout.isTTY), U = typeof window < \"u\", h = n(s.DEBUG), C = t === \"test\" || n(s.TEST), f = t === \"production\", v = t === \"dev\" || t === \"development\", m = n(s.MINIMAL) || T || C || !R, a = /^win/i.test(I), M = /^linux/i.test(I), V = /^darwin/i.test(I), Y = !n(s.NO_COLOR) && (n(s.FORCE_COLOR) || (R || a) && s.TERM !== \"dumb\" || T), _ = (globalThis.process?.versions?.node || \"\").replace(/^v/, \"\") || null, y = Number(_?.split(\".\")[0]) || null, W = globalThis.process || /* @__PURE__ */ Object.create(null), c = { versions: {} }, w = new Proxy(W, { get(e, o) {\n  if (o === \"env\")\n    return s;\n  if (o in e)\n    return e[o];\n  if (o in c)\n    return c[o];\n} }), A = globalThis.process?.release?.name === \"node\", L = !!globalThis.Bun || !!globalThis.process?.versions?.bun, D = !!globalThis.Deno, O = !!globalThis.fastly, S = !!globalThis.Netlify, N = !!globalThis.EdgeRuntime, u = globalThis.navigator?.userAgent === \"Cloudflare-Workers\", b = !!globalThis.__lagon__, F = [[S, \"netlify\"], [N, \"edge-light\"], [u, \"workerd\"], [O, \"fastly\"], [D, \"deno\"], [L, \"bun\"], [A, \"node\"], [b, \"lagon\"]];\nfunction G() {\n  const e = F.find((o) => o[0]);\n  if (e)\n    return { name: e[1] };\n}\nconst P = G(), K = P?.name || \"\";\nexport { s as env, R as hasTTY, U as hasWindow, L as isBun, T as isCI, Y as isColorSupported, h as isDebug, D as isDeno, v as isDevelopment, N as isEdgeLight, O as isFastly, b as isLagon, M as isLinux, V as isMacOS, m as isMinimal, S as isNetlify, A as isNode, f as isProduction, C as isTest, a as isWindows, u as isWorkerd, t as nodeENV, y as nodeMajorVersion, _ as nodeVersion, I as platform, w as process, d as provider, l as providerInfo, K as runtime, P as runtimeInfo };\n",
      "start": 1752216121823,
      "end": 1752216121875,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1752216121875,
      "end": 1752216121875,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1752216121875,
      "end": 1752216121875,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1752216121875,
      "end": 1752216121875,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1752216121875,
      "end": 1752216121876,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1752216121876,
      "end": 1752216121876,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1752216121876,
      "end": 1752216121876,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1752216121876,
      "end": 1752216121876,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1752216121876,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1752216121877,
      "end": 1752216121877,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1752216121878,
      "end": 1752216121878,
      "order": "normal"
    }
  ]
}
