{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/node_modules/date-fns/esm/eachYearOfInterval/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n  return dates;\n}",
      "start": 1748427019990,
      "end": 1748427020044,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748427020045,
      "end": 1748427020045,
      "order": "normal"
    }
  ]
}
