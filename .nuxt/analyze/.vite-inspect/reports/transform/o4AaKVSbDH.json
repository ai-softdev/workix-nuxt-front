{
  "resolvedId": "D:/projects/nuxt/workix-nuxt-front/stores/storage.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport {toast} from \"vue3-toastify\";\nimport type {ICurrentCategory, TGoods} from \"~/types/storage\";\n\nexport const useStorageStore = defineStore('storage', {\n  state: () => ({\n    isActive: false,\n    createCategory: false,\n    storageCategoryList: [],\n    storageHomeAllList: [],\n    storageItem: {} as TGoods,\n    currentCategory: {} as ICurrentCategory,\n    contextMenuCategory: false,\n    scan: ref(null),\n    searchGoods: '',\n    searchCategory: '',\n    streaming: false,\n  }),\n  getters: {\n    getStorageCategoryList: (state) => state.storageCategoryList,\n    getStorageSubCategory: (state) => state.currentCategory,\n    getStorageHomeAllList: (state) => state.storageHomeAllList,\n    getStorageItem: (state) => state.storageItem\n  },\n  actions: {\n    async loadStorageCategoryList(): Promise<void> {\n      await axios.get(`store/category/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageCategoryList = res.data\n      })\n    },\n    async loadStorageSubCategory(params: { slug: string | string[], search?: string | number }): Promise<void> {\n      await axios.get(`store/subcategory/${params.slug}?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.currentCategory = res.data\n\n      }).catch(e => {\n      })\n    },\n    async loadStorageCategorySearch(params: { query: string | number }): Promise<void> {\n      await axios.get(`store/category/list?name=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageCategoryList = res.data\n      })\n    },\n    async loadAllList(): Promise<void> {\n      await axios.get(`store/item/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageHomeAllList = res.data\n      })\n    },\n    async loadAllListSearch(params: { search?: any }): Promise<void> {\n      await axios.get(`store/item/list?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageHomeAllList = res.data\n      })\n    },\n    async loadItem(params: { itemSlug: string | string[] }): Promise<void> {\n      await axios.get(`store/item/${params.itemSlug}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageItem = res.data\n      })\n    },\n    async createStorageCategoryOrSubcategory(params: {\n      createType?: string,\n      name: string,\n      category_id?: number\n    }): Promise<void> {\n      await axios.post(`store/${params.createType}/create`, {\n        name: params.name,\n        category_id: params.createType === 'subcategory' ? params.category_id : null\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.loadStorageCategoryList()\n        this.createCategory = false\n        toast.success('Успешно создано', {autoClose: 1500, theme: 'auto'})\n      }).catch(e => {\n        toast.error('Возникла ошибка при создании', {autoClose: 1500, theme: 'auto'})\n      })\n    },\n    async updateStorageElem(params: { updateType: string, id: number }): Promise<void> {\n      await axios.patch(`store/${params.updateType}/update`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n\n      }).catch(e => {\n\n      })\n    },\n    async deleteStorageElem(params: { deleteType: string, id: number }): Promise<void> {\n      await axios.delete(`store/${params.deleteType}/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        if (['subcategory', 'category'].includes(params.deleteType)) {\n          this.loadStorageCategoryList()\n        }\n        toast.success('Успешно удалён', {autoClose: 1500, theme: 'auto'})\n      })\n    }\n  }\n})",
      "start": 1746241947761,
      "end": 1746241947960,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1746241947960,
      "end": 1746241947960,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1746241947960,
      "end": 1746241947960,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1746241947960,
      "end": 1746241947960,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1746241947960,
      "end": 1746241947960,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1746241947960,
      "end": 1746241947960,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport { toast } from \"vue3-toastify\";\nexport const useStorageStore = defineStore(\"storage\", {\n  state: () => ({\n    isActive: false,\n    createCategory: false,\n    storageCategoryList: [],\n    storageHomeAllList: [],\n    storageItem: {},\n    currentCategory: {},\n    contextMenuCategory: false,\n    scan: ref(null),\n    searchGoods: \"\",\n    searchCategory: \"\",\n    streaming: false\n  }),\n  getters: {\n    getStorageCategoryList: (state) => state.storageCategoryList,\n    getStorageSubCategory: (state) => state.currentCategory,\n    getStorageHomeAllList: (state) => state.storageHomeAllList,\n    getStorageItem: (state) => state.storageItem\n  },\n  actions: {\n    async loadStorageCategoryList() {\n      await axios.get(`store/category/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageCategoryList = res.data;\n      });\n    },\n    async loadStorageSubCategory(params) {\n      await axios.get(`store/subcategory/${params.slug}?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.currentCategory = res.data;\n      }).catch((e) => {\n      });\n    },\n    async loadStorageCategorySearch(params) {\n      await axios.get(`store/category/list?name=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageCategoryList = res.data;\n      });\n    },\n    async loadAllList() {\n      await axios.get(`store/item/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageHomeAllList = res.data;\n      });\n    },\n    async loadAllListSearch(params) {\n      await axios.get(`store/item/list?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageHomeAllList = res.data;\n      });\n    },\n    async loadItem(params) {\n      await axios.get(`store/item/${params.itemSlug}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageItem = res.data;\n      });\n    },\n    async createStorageCategoryOrSubcategory(params) {\n      await axios.post(`store/${params.createType}/create`, {\n        name: params.name,\n        category_id: params.createType === \"subcategory\" ? params.category_id : null\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.loadStorageCategoryList();\n        this.createCategory = false;\n        toast.success(\"Успешно создано\", { autoClose: 1500, theme: \"auto\" });\n      }).catch((e) => {\n        toast.error(\"Возникла ошибка при создании\", { autoClose: 1500, theme: \"auto\" });\n      });\n    },\n    async updateStorageElem(params) {\n      await axios.patch(`store/${params.updateType}/update`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n      }).catch((e) => {\n      });\n    },\n    async deleteStorageElem(params) {\n      await axios.delete(`store/${params.deleteType}/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        if ([\"subcategory\", \"category\"].includes(params.deleteType)) {\n          this.loadStorageCategoryList();\n        }\n        toast.success(\"Успешно удалён\", { autoClose: 1500, theme: \"auto\" });\n      });\n    }\n  }\n});\n",
      "start": 1746241947960,
      "end": 1746241948359,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/projects/nuxt/workix-nuxt-front/stores/storage.ts"
        ],
        "sourcesContent": [
          "import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport {toast} from \"vue3-toastify\";\nimport type {ICurrentCategory, TGoods} from \"~/types/storage\";\n\nexport const useStorageStore = defineStore('storage', {\n  state: () => ({\n    isActive: false,\n    createCategory: false,\n    storageCategoryList: [],\n    storageHomeAllList: [],\n    storageItem: {} as TGoods,\n    currentCategory: {} as ICurrentCategory,\n    contextMenuCategory: false,\n    scan: ref(null),\n    searchGoods: '',\n    searchCategory: '',\n    streaming: false,\n  }),\n  getters: {\n    getStorageCategoryList: (state) => state.storageCategoryList,\n    getStorageSubCategory: (state) => state.currentCategory,\n    getStorageHomeAllList: (state) => state.storageHomeAllList,\n    getStorageItem: (state) => state.storageItem\n  },\n  actions: {\n    async loadStorageCategoryList(): Promise<void> {\n      await axios.get(`store/category/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageCategoryList = res.data\n      })\n    },\n    async loadStorageSubCategory(params: { slug: string | string[], search?: string | number }): Promise<void> {\n      await axios.get(`store/subcategory/${params.slug}?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.currentCategory = res.data\n\n      }).catch(e => {\n      })\n    },\n    async loadStorageCategorySearch(params: { query: string | number }): Promise<void> {\n      await axios.get(`store/category/list?name=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageCategoryList = res.data\n      })\n    },\n    async loadAllList(): Promise<void> {\n      await axios.get(`store/item/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageHomeAllList = res.data\n      })\n    },\n    async loadAllListSearch(params: { search?: any }): Promise<void> {\n      await axios.get(`store/item/list?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageHomeAllList = res.data\n      })\n    },\n    async loadItem(params: { itemSlug: string | string[] }): Promise<void> {\n      await axios.get(`store/item/${params.itemSlug}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.storageItem = res.data\n      })\n    },\n    async createStorageCategoryOrSubcategory(params: {\n      createType?: string,\n      name: string,\n      category_id?: number\n    }): Promise<void> {\n      await axios.post(`store/${params.createType}/create`, {\n        name: params.name,\n        category_id: params.createType === 'subcategory' ? params.category_id : null\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.loadStorageCategoryList()\n        this.createCategory = false\n        toast.success('Успешно создано', {autoClose: 1500, theme: 'auto'})\n      }).catch(e => {\n        toast.error('Возникла ошибка при создании', {autoClose: 1500, theme: 'auto'})\n      })\n    },\n    async updateStorageElem(params: { updateType: string, id: number }): Promise<void> {\n      await axios.patch(`store/${params.updateType}/update`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n\n      }).catch(e => {\n\n      })\n    },\n    async deleteStorageElem(params: { deleteType: string, id: number }): Promise<void> {\n      await axios.delete(`store/${params.deleteType}/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        if (['subcategory', 'category'].includes(params.deleteType)) {\n          this.loadStorageCategoryList()\n        }\n        toast.success('Успешно удалён', {autoClose: 1500, theme: 'auto'})\n      })\n    }\n  }\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1746241948359,
      "end": 1746241948360,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1746241948360,
      "end": 1746241948360,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1746241948360,
      "end": 1746241948360,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1746241948360,
      "end": 1746241948360,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746241948361,
      "end": 1746241948361,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1746241948361,
      "end": 1746241948361,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1746241948361,
      "end": 1746241948361,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1746241948361,
      "end": 1746241948361,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1746241948362,
      "end": 1746241948362,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1746241948362,
      "end": 1746241948362,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746241948362,
      "end": 1746241948362,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1746241948362,
      "end": 1746241948362,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746241948362,
      "end": 1746241948362,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1746241948362,
      "end": 1746241948362,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1746241948363,
      "end": 1746241948363,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1746241948363,
      "end": 1746241948363,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746241948363,
      "end": 1746241948363,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746241948364,
      "end": 1746241948364,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1746241948364,
      "end": 1746241948364,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1746241948365,
      "end": 1746241948365,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1746241948366,
      "end": 1746241948367,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1746241948367,
      "end": 1746241948367,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { defineStore } from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nimport { toast } from \"vue3-toastify\";\nexport const useStorageStore = defineStore(\"storage\", {\n  state: () => ({\n    isActive: false,\n    createCategory: false,\n    storageCategoryList: [],\n    storageHomeAllList: [],\n    storageItem: {},\n    currentCategory: {},\n    contextMenuCategory: false,\n    scan: ref(null),\n    searchGoods: \"\",\n    searchCategory: \"\",\n    streaming: false\n  }),\n  getters: {\n    getStorageCategoryList: (state) => state.storageCategoryList,\n    getStorageSubCategory: (state) => state.currentCategory,\n    getStorageHomeAllList: (state) => state.storageHomeAllList,\n    getStorageItem: (state) => state.storageItem\n  },\n  actions: {\n    async loadStorageCategoryList() {\n      await axios.get(`store/category/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageCategoryList = res.data;\n      });\n    },\n    async loadStorageSubCategory(params) {\n      await axios.get(`store/subcategory/${params.slug}?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.currentCategory = res.data;\n      }).catch((e) => {\n      });\n    },\n    async loadStorageCategorySearch(params) {\n      await axios.get(`store/category/list?name=${params.query}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageCategoryList = res.data;\n      });\n    },\n    async loadAllList() {\n      await axios.get(`store/item/list`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageHomeAllList = res.data;\n      });\n    },\n    async loadAllListSearch(params) {\n      await axios.get(`store/item/list?search=${params.search}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageHomeAllList = res.data;\n      });\n    },\n    async loadItem(params) {\n      await axios.get(`store/item/${params.itemSlug}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.storageItem = res.data;\n      });\n    },\n    async createStorageCategoryOrSubcategory(params) {\n      await axios.post(`store/${params.createType}/create`, {\n        name: params.name,\n        category_id: params.createType === \"subcategory\" ? params.category_id : null\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        this.loadStorageCategoryList();\n        this.createCategory = false;\n        toast.success(\"Успешно создано\", { autoClose: 1500, theme: \"auto\" });\n      }).catch((e) => {\n        toast.error(\"Возникла ошибка при создании\", { autoClose: 1500, theme: \"auto\" });\n      });\n    },\n    async updateStorageElem(params) {\n      await axios.patch(`store/${params.updateType}/update`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n      }).catch((e) => {\n      });\n    },\n    async deleteStorageElem(params) {\n      await axios.delete(`store/${params.deleteType}/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData(\"token\")}`\n        }\n      }).then((res) => {\n        if ([\"subcategory\", \"category\"].includes(params.deleteType)) {\n          this.loadStorageCategoryList();\n        }\n        toast.success(\"Успешно удалён\", { autoClose: 1500, theme: \"auto\" });\n      });\n    }\n  }\n});\n",
      "start": 1746241948367,
      "end": 1746241948371,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjhD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACz
      }
    },
    {
      "name": "unctx:transform",
      "start": 1746241948372,
      "end": 1746241948372,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1746241948372,
      "end": 1746241948372,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1746241948373,
      "end": 1746241948373,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1746241948373,
      "end": 1746241948373,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1746241948374,
      "end": 1746241948374,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1746241948375,
      "end": 1746241948375,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746241948375,
      "end": 1746241948376,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746241948376,
      "end": 1746241948376,
      "order": "normal"
    }
  ]
}
