import{d as n}from"./entry.Doav1j1v.js";import{u as r}from"./auth.B6SFGXBB.js";import{a,n as s,l as i}from"./nuxt-storage.gLjAmBiV.js";const c=n("test-list",{state:()=>({test:{},testIQ:{},testSpecial:{},currentTest:{},exam:{}}),getters:{get_all_exam(t){return this.exam},get_test(t){return this.test},get_current_test(t){return this.currentTest},get_all_test(t){return this.test},get_test_iq(t){return this.testIQ},get_test_special(t){return this.testSpecial}},actions:{async loadAllTest(t){a.get(`test/test-list?page=${t.page}&limit=${t.limit}&usual=${t.usual}`,{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(e=>{t.usual!==0?this.testIQ=e.data:this.testSpecial=e.data})},async loadExam(){a.get("exam/exam-list",{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(t=>{this.test=t.data})},async loadCurrentTest(){a.get("exam/current-test",{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(t=>{this.currentTest=t.data}).catch(t=>{r().exam_active=!1})},async testStart(t,e){a.post("exam/start",{usual:t.usual},{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(o=>{this.test=o.data,this.loadCurrentTest(),r().exam_active=!0,r().loadCurrentUser(),e.push("/base/tests/exam")})},async testAnswer(t,e){a.post("exam/answer",{test_id:t.test_id,answer:t.answer},{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(o=>{this.loadCurrentTest(),r().loadCurrentUser()}).catch(o=>{e.push("/base/tests")})},async createTest(t){a.post("test/create",{answer_text:t.answer,options_list:t.options,question:t.test.question,department_id:t.test.department_id},{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(e=>{this.test=e.data,i.success("Тест успешно создан",{autoClose:1500,theme:"auto"})})},async deleteTest(t){a.delete(`test/delete/${t.test_id}`,{headers:{Authorization:`Bearer ${s.localStorage.getData("token")}`}}).then(e=>{i.success("Тест успешно удалён",{autoClose:1500,theme:"auto"}),this.test=e.data,this.loadAllTest({page:1,limit:20})}).catch(e=>{i("Ошибка",{theme:"auto",autoClose:1500})})}}});export{c as u};
