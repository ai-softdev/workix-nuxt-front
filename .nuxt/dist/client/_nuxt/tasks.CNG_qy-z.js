import{d as i}from"./entry.CkLTnUVz.js";import{a as o,n as r,l as s}from"./nuxt-storage.CgJyI38a.js";const d=i("task-list",{state:()=>({searchList:{},task:{id:"",title:"",description:"",status:"",author_name:"",author_file:"",created_at:"",updates_at:"",deadline:"",author_file_file:"",performers:[],main_performer:{},respondent:{},worth:"",performer_file:[],task_type:""},stats:{id:"",status:"",count:{}}}),getters:{get_tasks:t=>t.task,get_task:t=>t.task,get_stats:t=>t.stats,get_search_task:t=>t.searchList},actions:{async loadTasksLists(t){await o.get(`task/list?query=${t.query}&page=${t.page}&limit=${t.limit}`,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(e=>{this.task=e.data,this.searchList=e.data})},async loadCurrentTask(t){await o.get(`task/${t.id}`,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(e=>{this.task=e.data})},async create_task(t){let e=new FormData;if(e.set("title",t.title),e.set("description",t.description),e.append("deadline",t.deadline.toISOString()),e.set("main_performer_id",t.main_performer_id),Array.isArray(t.performers)&&t.performers.forEach(a=>{e.append("performers",a)}),e.set("worth",t.worth),typeof t.author_file_file!="string")for(let a of t.author_file_file)e.append("author_files",a);console.log(t.performers),console.log(typeof t.performers),o.post("task/create",e,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(a=>{this.task=a.data,this.loadTasksLists({task_type:"task-list",query:"",limit:5,page:1}),s.success("Вы успешно создали задание",{autoClose:1500,theme:"auto"})}).catch(a=>{s.error(a,{autoClose:1500,theme:"auto"})})},async update_task(t){let e=new FormData;e.set("title",t.task.title),e.set("description",t.task.description),e.set("status",t.task.status),e.set("performers",t.task.performers),e.set("respondent",t.task.respondent),t.task.author_file&&e.set("author_file",t.task.author_file),await o.patch(`task/update/${t.task.id}`,e,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(a=>{this.task=a.data,this.loadCurrentTask({id:this.task.id}),s.success("Данные успешно обновлены",{autoClose:1500,theme:"auto"})}).catch(a=>{s.error(a,{autoClose:1500,theme:"auto"})})},async addUser_task(t){let e=new FormData;e.set("performers",t.performers),await o.patch(`task/add-by-users/${t.id}`,e,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(a=>{this.task=a.data,this.loadTasksLists(),s.success("Успешно добавлены",{autoClose:1500,theme:"auto"})})},async deleteUser_task(t){await o.patch(`task/remove-user/${t.id}`,{user_id:t.user_id},{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(e=>{this.task=e.data,this.loadTasksLists(),s.success("Успешно удалены",{autoClose:1500,theme:"auto"})})},async delete_task(t,e){await o.delete(`task/delete/${t.id}`,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(a=>{this.task=a.data,e.push("/base/tasks").then(h=>{s.success("Успешно удалён",{theme:"auto",autoClose:1500})})})},async loadTasksStats(t){await o.get(`task/stats?${t.task_filter}`,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(e=>{this.stats=e.data})},async taskWatching(t){let e=new FormData;if(typeof t.performer_files!="string")for(let a of t.performer_files)e.append("performer_files",a);await o.post(`task/${t.task_status}/${t.id}`,e,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(a=>{this.task=a.data,this.loadCurrentTask({id:t.id}),s.success("Статус успешно изменён",{autoClose:1500,theme:"auto"})}).catch(a=>{s.error(a,{autoClose:1500,theme:"auto"})})},async change_taskStatus(t){let e=new FormData;e.set("comment",t.comment),await o.post(`task/${t.task_status}/${t.id}`,e,{headers:{Authorization:`Bearer ${r.localStorage.getData("token")}`}}).then(a=>{this.task=a.data,this.loadCurrentTask({id:t.id}),s.success("Статус успешно изменён",{autoClose:1500,theme:"auto"})}).catch(a=>{s.error(a,{autoClose:1500,theme:"auto"})})}}});export{d as u};
