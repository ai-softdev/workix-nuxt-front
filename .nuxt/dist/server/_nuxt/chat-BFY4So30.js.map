{"version":3,"file":"chat-BFY4So30.js","sources":["../../../../stores/chat.ts"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport axios from \"~/composables/axios\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\n\ntype TClickTimeout = NodeJS.Timeout | null\nexport const useChat = defineStore('chat', {\n  state: () => ({\n    chatList: {},\n    userChat: {\n      messages: [],\n      name: '',\n      description: ''\n    },\n    messageLimit: null,\n    messagesMakeRead: [],\n    messageUpdate: {},\n    messageReplied: {},\n    messageText: '',\n    searchElem: '',\n    messageForwarded: {},\n    showForwardInfo: false,\n    checkboxForwarded: true,\n    showSendWindow: false,\n    messagePinned: {},\n    arrayPin: [],\n    activeChatNav: true,\n    windowWidth: 0,\n    showPinnedWindow: false,\n    showGroupCreate: false,\n    showGroupCreateChoice: false,\n    showVoiceInfo: false,\n    showChatInfo: false,\n    showSettingChat: false,\n    showChatChangeInfo: false,\n    showChatChangeInfoModal: false,\n    showChatCropper: false,\n    showImageChange: false,\n    chatChangeInfo: {\n      name: '',\n      img: '',\n      description: '',\n    },\n    showChangeWindowChat: false,\n    showChatGallery: false,\n    showDragInfo: false,\n    showUploadWindow: false,\n    updateChatName: '',\n    updateDescription: '',\n    voiceTimer: 0,\n    recordingVoice: false,\n    isGroup: false,\n    clickerTimeout: null as TClickTimeout,\n    flag: true,\n    displayChat: 'all',\n    file: '',\n    src: '',\n    signature: '',\n    fileSizeInfo : false,\n    fileReadInfo: false,\n    fileChecked: false,\n    fileUpload: null,\n    results: {\n      coordinates: null,\n      image: null,\n    },\n    focusInput: null,\n  }),\n  getters: {\n    get_chat_list: (state) => state.chatList,\n    get_user_chat: (state) => state.userChat,\n    get_pinned_list: (state) => state.arrayPin\n  },\n  actions: {\n    async loadChatList(params: { page?: number, limit?: number }) {\n      await axios.get(`chat/chat-list?page=${params.page}&limit=${params.limit}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.chatList = res.data\n      })\n    },\n    async loadUserChat(params: { id: number, limit: number, page: number }) {\n      await axios.get(`chat/${params.id}?limit=${params.limit}&page=${params.page}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.messageLimit = res.data.messages.length\n        if (res.data.messages) {\n          this.userChat = res.data\n          let new_array = res.data.messages.reverse()\n          let temp = [...new_array]\n          new_array = new_array.map((el: any) => {\n            return new Date(el.created_at).toLocaleDateString()\n          })\n          new_array = [...new Set(new_array)]\n          let new_messages = new_array.map((el: string) => {\n            return {\n              messages: temp.filter(e => {\n                return new Date(e.created_at).toLocaleDateString() == el\n              }),\n              date: el\n            }\n          })\n          this.userChat.messages = new_messages\n        }\n        // else {\n        //   this.userChat.messages = [...res.data.messages.reverse(), ...this.userChat.messages]\n        // }\n      })\n    },\n    async loadPinnedList(params: {id: number, page: number, limit: number }) {\n      await axios.get(`chat/message/pinned-list/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.arrayPin = res.data\n      })\n    },\n\n    async chatUpdate(params: {\n      id: any; update: {\n        name: any,\n        description: any,\n        photo: any\n      }\n    }) {\n      let fd = new FormData();\n      if(this.updateChatName !== this.userChat.name){\n        fd.set('name', params.update.name)\n      }\n      if(this.updateDescription !== this.userChat.description) {\n        fd.set('description', params.update.description)\n      }\n      if(this.fileUpload) {\n        fd.append('photo', params.update.photo, 'image.webp')\n      }\n      await axios.patch(`chat/update/${params.id}`, fd, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      })\n    },\n    async chatDelete(params: { id: number }) {\n      await axios.delete(`chat/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n\n      })\n    },\n\n    async createMessage(params: { id: number, text: string, message_id?: number, file?: any }) {\n      let fd = new FormData();\n      if (!this.messageForwarded.id && !this.file) {\n        fd.set('text', params.text)\n      } else if(!this.signature && !this.messageForwarded.id){\n        fd.set('file', params.file)\n      } else if(this.signature && this.file){\n        fd.set('text', params.text)\n        fd.set('file', params.file)\n      } else {\n        fd.set('text', params.text)\n        fd.set('message_id', params.message_id)\n      }\n      await axios.post(`chat/message/create/${params.id}`, fd, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res=>{\n        this.messageForwarded = {id: null}\n      })\n    },\n    async updateMessage(params: { id: number, text: any }) {\n      await axios.patch(`chat/message/update/${params.id}`, {\n        text: params.text\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n      })\n    },\n    async deleteMessage(params: { id: number }) {\n      await axios.delete(`chat/message/delete/${params.id}`, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n      })\n    },\n    async createChatUser(params: { users: any, user_id: any, name: string, photo: any }) {\n      let fd = new FormData()\n      if (this.isGroup) {\n        fd.set('name', params.name)\n        fd.set('users', params.users)\n        if (typeof params.photo !== 'string') {\n          fd.set('photo', params.photo)\n        }\n      } else {\n        fd.set('user_id', params.user_id)\n      }\n      await axios.post(`chat/create`, fd, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.loadChatList()\n      })\n    },\n\n\n\n    async makeRead(params: { messages: any }) {\n      await axios.post(`chat/message/make-read`, {\n        messages: params.messages\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      }).then(res => {\n        this.loadChatList()\n      })\n    },\n    async makePinned(params: { messages: any }) {\n      await axios.post(`chat/message/make-pinned`, {\n        messages: params.messages\n      }, {\n        headers: {\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\n        }\n      })\n    },\n  }\n})\n"],"names":[],"mappings":"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"}