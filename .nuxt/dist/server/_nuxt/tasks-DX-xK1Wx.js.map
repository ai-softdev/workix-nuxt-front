{"version":3,"file":"tasks-DX-xK1Wx.js","sources":["../../../../stores/tasks.ts"],"sourcesContent":["import {defineStore} from \"pinia\";\r\nimport axios from \"~/composables/axios\";\r\nimport {toast} from \"vue3-toastify\";\r\nimport {Router} from \"vue-router\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useTaskList = defineStore('task-list', {\r\n  state: () => ({\r\n    searchList: {},\r\n    task: {\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: '',\r\n      author_name: '',\r\n      author_file: '',\r\n      created_at: '',\r\n      updates_at: '',\r\n      deadline: '',\r\n      author_file_file: '',\r\n      performers: [],\r\n      main_performer: {},\r\n      respondent: {},\r\n      worth: '',\r\n      performer_file: [],\r\n      task_type: ''\r\n    },\r\n    stats: {\r\n      id: '',\r\n      status: '',\r\n      count: {}\r\n    },\r\n  }),\r\n  getters: {\r\n    get_tasks: (state) => state.task,\r\n    get_task: (state) => state.task,\r\n    get_stats: (state) => state.stats,\r\n    get_search_task: (state) => state.searchList\r\n  },\r\n  actions: {\r\n    async loadTasksLists(params: { page: number, limit: number, query?: string | number}) {\r\n     await axios.get(`task/list?query=${params.query}&page=${params.page}&limit=${params.limit}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.task = response.data\r\n        this.searchList = response.data\r\n      })\r\n    },\r\n    async loadCurrentTask(params: {id: any}){\r\n       await axios.get(`task/${params.id}`, {\r\n         headers: {\r\n           Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n         }\r\n       }).then(res => {\r\n         this.task = res.data\r\n       })\r\n    },\r\n    async create_task(params: { task: any, performers: any }) {\r\n      let formD = new FormData();\r\n      formD.set('title', params.title)\r\n      formD.set('description', params.description)\r\n      formD.append('deadline', params.deadline.toISOString())\r\n      formD.set('main_performer_id', params.main_performer_id)\r\n\r\n      if (Array.isArray(params.performers)) {\r\n        params.performers.forEach(id => {\r\n          formD.append('performers', id);\r\n        });\r\n      }\r\n\r\n      formD.set('worth', params.worth)\r\n      if (typeof params.author_file_file !== 'string') {\r\n        for(let i of params.author_file_file){\r\n          formD.append('author_files', i)\r\n\r\n        }\r\n      }\r\n      console.log(params.performers)\r\n      console.log(typeof params.performers)\r\n      axios.post(`task/create`, formD, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.task = response.data\r\n        this.loadTasksLists({task_type: 'task-list', query: '', limit: 5, page: 1})\r\n        toast.success('Вы успешно создали задание', {autoClose: 1500, theme: 'auto'})\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n    async update_task(params: { task: any }) {\r\n      let fd = new FormData();\r\n      fd.set('title', params.task.title)\r\n      fd.set('description', params.task.description)\r\n      fd.set('status', params.task.status)\r\n      fd.set('performers', params.task.performers)\r\n      fd.set('respondent', params.task.respondent)\r\n      if (params.task.author_file) {\r\n        fd.set('author_file', params.task.author_file)\r\n      }\r\n      await axios.patch(`task/update/${params.task.id}`, fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.task = response.data\r\n        this.loadCurrentTask({id: this.task.id})\r\n        toast.success('Данные успешно обновлены', {autoClose: 1500, theme: 'auto'})\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n    async addUser_task(params: {id: any, performers: any}){\r\n      let fd = new FormData()\r\n      fd.set('performers', params.performers)\r\n      await axios.patch(`task/add-by-users/${params.id}`, fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.task = res.data\r\n        this.loadTasksLists()\r\n        toast.success('Успешно добавлены', {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n    async deleteUser_task(params: {id: any, user_id: any}) {\r\n      await axios.patch(`task/remove-user/${params.id}`, {\r\n        user_id: params.user_id\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.task = res.data\r\n        this.loadTasksLists()\r\n        toast.success('Успешно удалены', {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n    async delete_task(params: {id: any}, router: Router) {\r\n      await axios.delete(`task/delete/${params.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.task = res.data\r\n        router.push('/base/tasks').then(res=>{\r\n          toast.success('Успешно удалён', {theme: 'auto', autoClose: 1500})\r\n        })\r\n      })\r\n    },\r\n    async loadTasksStats(params: { task_filter: string }) {\r\n     await axios.get(`task/stats?${params.task_filter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.stats = response.data\r\n      })\r\n    },\r\n    async taskWatching(params: { task_status: any, id: any, performer_files: any}) {\r\n      let fd = new FormData()\r\n      if (typeof params.performer_files !== 'string') {\r\n        for(let i of params.performer_files){\r\n          fd.append('performer_files', i)\r\n        }\r\n      }\r\n      await axios.post(`task/${params.task_status}/${params.id}`,fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.task = response.data\r\n        this.loadCurrentTask({id: params.id})\r\n        toast.success('Статус успешно изменён', {autoClose: 1500, theme: \"auto\"})\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n    async change_taskStatus(params: { task_status: any, id: any, comment: any}) {\r\n      let form = new FormData()\r\n      form.set('comment', params.comment)\r\n      await axios.post(`task/${params.task_status}/${params.id}`, form , {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.task = response.data\r\n        this.loadCurrentTask({id: params.id})\r\n        toast.success('Статус успешно изменён', {autoClose: 1500, theme: \"auto\"})\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    }\r\n  }\r\n})\r\n// task/make-performing/id      performer\r\n// task/make-completed/id       performed {performer_file: FILE}\r\n// task/make-rejected/id        author {comment: 'asdas'}\r\n"],"names":["res"],"mappings":"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"}