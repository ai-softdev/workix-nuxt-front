{"version":3,"file":"index-DFfyw-52.js","sources":["../../../../components/Tests/TestContent.vue","../../../../components/Tests/TestUI/TestContentCreateElems.vue","../../../../components/Tests/TestCreate.vue","../../../../components/Tests/TestLists.vue","../../../../pages/base/tests/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {useTestList} from \"~/stores/test\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport TheContentBlock from \"~/components/UI/TheContentBlock.vue\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\n\nconst loadCurrentUser = useAuthStore()\nconst testList = useTestList()\ntestList.loadExam()\nconst testType = ref({\n  type: '',\n})\nconst params = {\n  page: 1,\n  limit: 5\n}\nonUpdated(() => {\n  if(loadCurrentUser.user.exam_active === true) {\n    testList.loadCurrentTest()\n  }\n})\n\n\n</script>\n<template>\n  <div class=\"flex flex-col gap-y-10 w-full\">\n    <div class=\"w-full flex max-sm:flex-col max-sm:gap-y-4 gap-x-10 justify-center\">\n      <div class=\"w-5/12 max-sm:w-11/12 mx-auto\">\n        <TheContentBlock>\n          <TheTextContent>{{ $t('По специальности') }}</TheTextContent>\n          <div class=\"justify-center flex\">\n            <img class=\"rounded-lg\" src=\"/img/2.png\" alt=\"\">\n          </div>\n          <div class=\"my-2\">\n            <p class=\"text-sm tracking-wider\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquid atque\n              commodi consectetur cupiditate distinctio dolores earum eius esse eum ipsam iste minus molestiae, natus\n              necessitatibus neque nulla optio pariatur placeat porro quasi quia quibusdam, ratione reiciendis rem rerum\n              sunt suscipit tempore unde velit! Accusantium amet asperiores assumenda atque dolorem dolores enim\n              explicabo impedit iste magnam modi necessitatibus omnis placeat quae quidem quo repellendus reprehenderit,\n              saepe soluta voluptates. Deleniti dolores eligendi, error laboriosam minima quasi quod repellendus\n              temporibus unde. Debitis earum incidunt maiores vitae. Accusantium alias deleniti doloremque illo illum,\n              itaque, nemo pariatur quidem ratione sapiente sunt tempora veritatis voluptate.</p>\n          </div>\n          <div class=\"mt-4 flex justify-center\"\n               @click=\"testType.type = 'testSpecial'; nuxtStorage.localStorage.setData('testType', testType.type)\">\n            <TheButton v-if=\"!loadCurrentUser.user.exam_active\" type=\"success\" class=\"px-10 py-2 rounded-lg\"\n                       @click=\"testList.testStart({usual: 0}, $router)\">{{ $t('Начать') }}\n            </TheButton>\n          </div>\n        </TheContentBlock>\n      </div>\n      <div class=\"w-5/12 max-sm:w-11/12 mx-auto\">\n        <TheContentBlock>\n          <TheTextContent>{{ $t('На интеллект') }}</TheTextContent>\n          <div class=\"justify-center h-full flex\">\n            <img class=\"rounded-lg h-full\" src=\"/img/3.webp\" alt=\"\">\n          </div>\n          <div class=\"my-2\">\n            <p class=\"text-sm tracking-wider\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquid atque\n              commodi consectetur cupiditate distinctio dolores earum eius esse eum ipsam iste minus molestiae, natus\n              necessitatibus neque nulla optio pariatur placeat porro quasi quia quibusdam, ratione reiciendis rem rerum\n              sunt suscipit tempore unde velit! Accusantium amet asperiores assumenda atque dolorem dolores enim\n              explicabo impedit iste magnam modi necessitatibus omnis placeat quae quidem quo repellendus reprehenderit,\n              saepe soluta voluptates. Deleniti dolores eligendi, error laboriosam minima quasi quod repellendus\n              temporibus unde. Debitis earum incidunt maiores vitae. Accusantium alias deleniti doloremque illo illum,\n              itaque, nemo pariatur quidem ratione sapiente sunt tempora veritatis voluptate.</p>\n          </div>\n          <div class=\"mt-4 flex justify-center\"\n               @click=\"testType.type = 'testIq'; nuxtStorage.localStorage.setData('testType', testType.type)\">\n            <TheButton v-if=\"!loadCurrentUser.user.exam_active\" type=\"success\" class=\"px-10 py-2 rounded-lg\"\n                       @click=\"testList.testStart({usual: 1}, $router)\">{{ $t('Начать') }}\n            </TheButton>\n          </div>\n        </TheContentBlock>\n      </div>\n    </div>\n    <div v-if=\"loadCurrentUser.user.exam_active\">\n      <TheContentBlock class=\"w-10/12 mx-auto\">\n        <TheTextContent>{{ $t('Текущий тест') }}</TheTextContent>\n        <p class=\"text-center\">\n          <span v-if=\"nuxtStorage.localStorage.getData('testType')\">{{ $t('по') + ' ' }}</span>\n          <span v-if=\"nuxtStorage.localStorage.getData('testType') === 'testIq'\">{{ 'IQ' }}</span>\n          <span v-else-if=\"nuxtStorage.localStorage.getData('testType') === 'testSpecial'\">{{ $t('специальности') }}</span>\n        </p>\n        <div class=\"p-4 w-full h-full flex max-md:flex-wrap border-t gap-x-4 dark:border-gray-500 mt-2\"\n             @click=\"console.log(nuxtStorage.localStorage.getData('testType'))\">\n          <div class=\"w-5/12 max-md:w-full\">\n            <div class=\"w-[250px] max-md:w-9/12 max-sm:w-full mx-auto\">\n              <img class=\"w-full h-full\" v-if=\"nuxtStorage.localStorage.getData('testType') === 'testSpecial'\"\n                   src=\"/img/2.png\" alt=\"\">\n              <img class=\"w-full h-full\" v-else-if=\"nuxtStorage.localStorage.getData('testType') === 'testIq'\"\n                   src=\"/img/3.webp\" alt=\"\">\n              <img class=\"w-full h-full\" v-else src=\"/img/3.webp\" alt=\"\">\n            </div>\n          </div>\n          <div\n            class=\"flex max-lg:flex-col items-center justify-around max-md:justify-center w-8/12 max-md:w-full gap-x-10 max-md:gap-y-4\">\n            <div class=\"w-7/12 max-md:w-full\">\n              <p class=\"text-gray-400 max-sm:text-sm tracking-widest\">{{ $t('Вопрос:') }}</p>\n              <p class=\"text-2xl max-sm:text-lg break-words\">\n                {{ testList.get_current_test.test?.question.length > 80 ? testList.get_current_test.test?.question.slice(0, 80) + '...' : testList.get_current_test.test?.question\n                }}</p>\n            </div>\n            <NuxtLink to=\"/base/tests/exam\"\n                      class=\"text-2xl text-white max-sm:text-lg py-2 bg-blueDarkSemiLight rounded-full text-center w-4/12 max-lg:w-7/12 max-md:w-full \">\n              {{ $t('Продолжить') }}\n            </NuxtLink>\n          </div>\n        </div>\n      </TheContentBlock>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\n</script>\n\n<template>\n  <div class=\"flex max-lg:flex-wrap gap-y-4 justify-center gap-x-10 my-10 mx-auto w-full\">\n    <slot/>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TestContentCreateElems from \"~/components/Tests/TestUI/TestContentCreateElems.vue\";\nimport TheInput from \"~/components/UI/TheInput.vue\";\nimport {useTestList} from \"~/stores/test\";\nimport {useCompanies} from \"~/stores/companies\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport {toast} from \"vue3-toastify\";\n\n\nconst department = useCompanies()\nconst test = useTestList()\n\nconst selectedTestType = ref('')\nconst props = defineProps({\n  showCreate: {\n    type: Boolean,\n    default: false,\n  },\n  trimi: {\n    type: Boolean,\n    default: null,\n  },\n  checkAnswer: {\n    type: Object,\n    default: () => {\n    },\n  }\n})\n\nconst createForm = ref({\n  answer: '',\n  options_list: [\n    {},\n    {}\n  ],\n  department_id: null,\n  question: '',\n})\n</script>\n\n<template>\n  <div class=\"\">\n    <button class=\"font-bold tracking-widest text-white bg-blue-400 mx-auto py-4 rounded-xl px-4 text-sm\"\n            @click=\"showCreate = true; department.loadDepartmentList()\">{{ $t('Создать тест') }}\n    </button>\n    <TheModal v-if=\"showCreate\" @showModal=\"showCreate = !showCreate\">\n      <TheTextContent>{{ $t('Создание тест') }}</TheTextContent>\n      <form class=\"!overflow-x-hidden p-2\"\n            @submit.prevent=\"()=>{\n              if(createForm.options_list.find(e=> e.text.trim() == '')) {\n                 toast.error('Заполните пустые поля', {autoClose: 1500, theme: 'auto'})\n              } else if(selectedTestType === '') {\n                selectedTestType = 'error'\n                toast.error('Укажите тип теста', {autoClose: 1500, theme: 'auto'})\n              } else if(selectedTestType === 'testSpecial' && !createForm.department_id){\n                toast.error('Выберите департамент', {autoClose: 1500, theme: 'auto'})\n              } else {\n                  test.createTest({test: createForm, answer: props.checkAnswer.item?.text, options: createForm.options_list.filter(e=>e.text).map(e=>e.text)}).then(res=>{\n                    test.loadAllTest({page: 1, limit: 20})\n                  })\n                }\n            }\">\n        <TestContentCreateElems>\n          <div class=\"flex flex-wrap gap-y-2 justify-center gap-x-10\">\n            <button type=\"button\" class=\"border px-6 py-4 rounded-lg transition-all\"\n                    :class=\"{'bg-gray-700 text-white': selectedTestType === 'testIQ', 'bg-red-400 text-white' : selectedTestType === 'error'}\"\n                    @click=\"selectedTestType = 'testIQ'; createForm.department_id = null\">\n              {{ $t('На IQ') }}\n            </button>\n            <button type=\"button\" class=\"border px-6 py-4 rounded-lg transition-all\"\n                    :class=\"{'bg-gray-700 text-white': selectedTestType === 'testSpecial', 'bg-red-400 text-white' : selectedTestType === 'error'}\"\n                    @click=\"selectedTestType = 'testSpecial'\">\n              {{ $t('По специальности') }}\n            </button>\n          </div>\n        </TestContentCreateElems>\n        <TestContentCreateElems v-if=\"selectedTestType === 'testSpecial'\">\n          <div class=\"flex flex-col w-full items-center\">\n            <p>{{ $t('Выберите департамент') }}<span class=\"text-red-500 ml-2\">*</span></p>\n            <select\n              class=\"w-7/12 max-lg:w-full dark:bg-gray-300 dark:border-none border dark:text-black text-sm rounded-lg py-4 px-2\"\n              v-model=\"createForm.department_id\">\n              <option v-for=\"item in department.get_all_department?.results\" :value=\"item.id\">{{ item.name }}</option>\n            </select>\n          </div>\n        </TestContentCreateElems>\n        <TestContentCreateElems>\n          <div class=\"w-full \">\n            <TheInput type=\"textarea\" :required=\"true\" :label=\"$t('Вопрос')\"\n                      :trimi=\"createForm.question.trim() == '' && createForm.question.length !== 0 ? true : false\"\n                      v-model=\"createForm.question\"></TheInput>\n          </div>\n        </TestContentCreateElems>\n        <TestContentCreateElems>\n          <div class=\"w-full \">\n            <div>\n              <TheButton class=\"px-10 py-2 mx-auto flex justify-center rounded-full\" type=\"change\" t=\"button\"\n                         @click=\"createForm.options_list.push({text: ''})\">\n                {{ $t('Добавить ответ') }}\n              </TheButton>\n              <p class=\"text-center text-sm text-gray-300 my-2\">({{ $t('Выберите правильный ответ') }})</p>\n            </div>\n            <TransitionGroup clas=\"=\" name=\"list\" class=\"w-full flex flex-col gap-y-4\" tag=\"ul\">\n              <li class=\"flex max-[400px]:flex-col max-[400px]: gap-x-2 items-center w-full\"\n                  v-for=\"(item, id) in createForm.options_list\" :key=\"id\">\n                <div class=\"flex flex-col w-full\">\n                  <span>Ответ <span class=\"text-red-500\" v-if=\"id === 0 || id === 1\">*</span></span>\n                  <input class=\"w-full p-2 rounded-lg dark:bg-gray-500 bg-gray-200\" :key=\"id\"\n                         :class=\"{'!bg-green-500 text-white' : checkAnswer?.id === id}\" type=\"text\"\n                         v-model=\"item.text\"/>\n                </div>\n                <div class=\"flex gap-x-2 mt-8\">\n                  <div class=\"cursor-pointer bg-blueSemiLight p-2 rounded-lg\"\n                       @click=\"checkAnswer = {id, item}\">\n                    <svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                         xmlns=\"http://www.w3.org/2000/svg\">\n                      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                            d=\"M21.2287 6.60355C21.6193 6.99407 21.6193 7.62723 21.2287 8.01776L10.2559 18.9906C9.86788 19.3786 9.23962 19.3814 8.84811 18.9969L2.66257 12.9218C2.26855 12.5349 2.26284 11.9017 2.64983 11.5077L3.35054 10.7942C3.73753 10.4002 4.37067 10.3945 4.7647 10.7815L9.53613 15.4677L19.1074 5.89644C19.4979 5.50592 20.1311 5.50591 20.5216 5.89644L21.2287 6.60355Z\"/>\n                    </svg>\n                  </div>\n                  <div @click=\"createForm.options_list.splice(id, 1)\" v-if=\"id !== 0 && id !== 1\"\n                       class=\" cursor-pointer bg-red-400 p-2 rounded-lg\">\n                    <svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"-3.5 0 19 19\"\n                         xmlns=\"http://www.w3.org/2000/svg\">\n                      <path\n                        d=\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\"/>\n                    </svg>\n                  </div>\n                </div>\n              </li>\n            </TransitionGroup>\n          </div>\n        </TestContentCreateElems>\n        <TestContentCreateElems>\n          <TheButton class=\"py-2 max-sm:w-full px-6 rounded-full\" t=\"button\" type=\"danger\" @click=\"showCreate = false\">\n            {{ $t('Отменить')\n            }}\n          </TheButton>\n          <TheButton class=\"py-2 max-sm:w-full px-6 rounded-full\" t=\"submit\" type=\"change\">{{ $t('Создать') }}\n          </TheButton>\n        </TestContentCreateElems>\n      </form>\n\n    </TheModal>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.list-enter-active,\n.list-leave-active {\n  transition: all 0.5s ease;\n}\n\n.list-enter-from,\n.list-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n</style>","<script setup lang=\"ts\">\nimport {useTestList} from \"~/stores/test\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\n\nconst testList = useTestList()\ndefineProps({\n  test: {\n    type: Object,\n    default: () => {\n    }\n  },\n  openTest: {\n    type: Boolean,\n    default: false\n  },\n  showTestError: {\n    type: Boolean,\n    default: false\n  }\n})\n</script>\n\n<template>\n  <div>\n    <div\n      class=\" p-2 border flex items-center justify-between cursor-pointer rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-all\">\n      <div class=\"w-full\" @click=\"openTest = true\">\n        <p>{{ test?.question.length > 20 ? test.question?.slice(0, 20) + '...' : test?.question }}</p>\n      </div>\n      <div @click=\"showTestError = true\">\n        <div class=\"cursor-pointer bg-red-400 p-2 rounded-lg\">\n          <svg class=\"fill-white\" width=\"20px\" height=\"20px\" viewBox=\"-3.5 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\"></path>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <TheModal v-if=\"openTest\" @showModal=\"openTest = !openTest\">\n      <TheTextContent class=\"break-words\">{{ $t('Тест:') + ' ' + test.question }}</TheTextContent>\n      <p class=\"my-2\">{{ $t('Варианты ответа:') }}</p>\n      <div class=\"flex gap-x-2 w-full justify-center max-lg:flex-wrap gap-y-2\">\n        <div v-for=\"item in test.options\" class=\"max-lg:w-full w-6/12\">\n          <p class=\"border p-2 rounded-lg break-words\">{{ item.text }}</p>\n        </div>\n      </div>\n    </TheModal>\n    <TheModal v-if=\"showTestError\" @showModal=\"showTestError = !showTestError\">\n      <TheTextContent>{{ $t('Вы уверены что хотите удалить тест?') }}</TheTextContent>\n      <p class=\"text-center text-xl tracking-widest\">{{ $t('Удалённые тесты возврату') + ' ' }}<span\n        class=\"font-bold underline\">{{ $t('не подлежат') }}</span></p>\n      <div class=\"flex justify-center gap-x-10 mt-10\">\n        <TheButton class=\"px-10 py-2 rounded-full\" type=\"danger\" @click=\"showTestError = false\">{{ $t('Отмена') }}\n        </TheButton>\n        <TheButton class=\"px-10 py-2 rounded-full\" type=\"success\" @click=\"testList.deleteTest({test_id: test?.id})\">\n          {{ $t('Удалить') }}\n        </TheButton>\n      </div>\n    </TheModal>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useTestList} from \"~/stores/test\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TestContent from \"~/components/Tests/TestContent.vue\";\nimport TestCreate from \"~/components/Tests/TestCreate.vue\";\nimport ThePreloader from \"~/components/UI/ThePreloader.vue\";\nimport TheContentBlock from \"~/components/UI/TheContentBlock.vue\";\nimport TestLists from \"~/components/Tests/TestLists.vue\";\n\nconst user = useAuthStore()\nconst testContent = useTestList()\ndefineProps({\n  testElem: {\n    type: Object,\n    default: () => {\n    }\n  }\n})\nwatchSyncEffect(() => {\n  if (user.get_user.permissions?.find(e => e.name_en === 'test.create')) {\n    testContent.loadAllTest({limit: 20, page: 1, usual: 0})\n    testContent.loadAllTest({limit: 20, page: 1, usual: 1})\n  }\n  useSeoMeta({\n    title: 'Тесты',\n    description: 'Страница с тестированием для пользователей'\n  })\n})\n</script>\n\n<template>\n  <div>\n    <TheTextContent :text-type=\"'pageTitle'\">\n      {{ $t('Страница с тестами') }}\n    </TheTextContent>\n    <div class=\"flex items-center gap-x-6\">\n      <TestContent></TestContent>\n    </div>\n    <div class=\"flex my-10 gap-x-2 justify-center\"\n         v-if=\"user.get_user?.permissions?.find(e=> e.name_en === 'task.create')\">\n      <TheContentBlock class=\"w-11/12 mx-auto\">\n        <TestCreate class=\"mx-auto mb-4\"></TestCreate>\n        <div class=\"flex max-md:flex-wrap max-md:gap-y-4 gap-x-4\">\n          <TheContentBlock class=\"w-6/12 max-md:w-full\">\n            <TheTextContent>{{ $t('IQ тесты') }}</TheTextContent>\n            <div class=\"flex flex-col gap-y-2\">\n              <TestLists :test=\"item\" v-for=\"item in testContent.get_test_iq?.results\"></TestLists>\n            </div>\n          </TheContentBlock>\n          <TheContentBlock class=\"w-6/12 max-md:w-full\">\n            <TheTextContent>{{ $t('Тесты по Специальности') }}</TheTextContent>\n            <div class=\"flex flex-col gap-y-2\">\n              <TestLists :test=\"item\" v-for=\"item in testContent.get_test_special?.results\"></TestLists>\n            </div>\n          </TheContentBlock>\n        </div>\n      </TheContentBlock>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n</style>"],"names":["_ssrRenderAttrs","_mergeProps","_ssrRenderSlot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,UAAM,kBAAkB;AACxB,UAAM,WAAW;AACjB,aAAS,SAAS;AAClB,UAAM,WAAW,IAAI;AAAA,MACnB,MAAM;AAAA,IAAA,CACP;AAKD,cAAU,MAAM;AACX,UAAA,gBAAgB,KAAK,gBAAgB,MAAM;AAC5C,iBAAS,gBAAgB;AAAA,MAC3B;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBD,SAAA,eAAA,MAAA,OAAA,SAKY;AALZ,QAAA,OAAAA,eAAAC,WAAA,EAAA,OAAA,gFAAA,MAAA,CAAA,CAAA,GAAA;AAAAC,gBAAA,KAAA,QAAA,WAAA,CAAA,GAAA,MAAA,OAAA,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYA,UAAM,aAAa;AACnB,UAAM,OAAO;AAEP,UAAA,mBAAmB,IAAI,EAAE;AAC/B,UAAM,QAAQ;AAgBd,UAAM,aAAa,IAAI;AAAA,MACrB,QAAQ;AAAA,MACR,cAAc;AAAA,QACZ,CAAC;AAAA,QACD,CAAC;AAAA,MACH;AAAA,MACA,eAAe;AAAA,MACflCD,UAAM,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIjB,UAAM,OAAO;AACb,UAAM,cAAc;AAQpB,oBAAgB,MAAM;;AAChB,WAAA,UAAK,SAAS,gBAAd,mBAA2B,KAAK,OAAK,EAAE,YAAY,gBAAgB;AACzD,oBAAA,YAAY,EAAC,OAAO,IAAI,MAAM,GAAG,OAAO,GAAE;AAC1C,oBAAA,YAAY,EAAC,OAAO,IAAI,MAAM,GAAG,OAAO,GAAE;AAAA,MACxD;AACW,iBAAA;AAAA,QACT,OAAO;AAAA,QACP,aAAa;AAAA,MAAA,CACd;AAAA,IAAA,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}