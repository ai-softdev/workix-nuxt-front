{"version":3,"file":"_id_-BZj7Ssg3.js","sources":["../../../../components/Chat/ChatContent/ChatContentUserElem.vue","../../../../node_modules/@vueuse/components/index.mjs","../../../../components/Chat/ChatNav/UI/TheChatContentEmpty.vue","../../../../components/Chat/ChatContent/ChatContentUser.vue","../../../../components/UI/TheTextareaAutosize.vue","../../../../components/Chat/ChatNav/UI/TheChatContentPinned.vue","../../../../components/Chat/UI/Upload/ChatUploadInfo.vue","../../../../components/Chat/UI/Upload/ChatUploadFile.vue","../../../../hooks/Recordings.ts","../../../../components/Chat/UI/Voice/ChatVoiceContent.vue","../../../../components/Chat/ChatContent.vue","../../../../components/Chat/UI/Pinned/TheChatContentPinnedMessages.vue","../../../../components/Chat/UI/Pinned/TheChatContentPinnedHeader.vue","../../../../components/Chat/UI/Pinned/TheChatContentPinnedFooter.vue","../../../../components/Chat/ChatContent/ChatContentUserPinned.vue","../../../../components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeaderUI/ChatWindowSettingContentHeadersElems.vue","../../../../components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeader.vue","../../../../components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentMain.vue","../../../../components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentUserList.vue","../../../../components/Chat/UI/ChatCropperFileInput.vue","../../../../components/Chat/UI/ChatFileError.vue","../../../../components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeaderUI/ChatWindowSettingContentHeaderChange.vue","../../../../components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent.vue","../../../../components/Chat/UI/ChatChangeWindowElem.vue","../../../../components/Chat/UI/ChatChangeWindow.vue","../../../../components/Chat/UI/Upload/ChatUploadWindow.vue","../../../../components/Chat/UI/Upload/ChatUploadError.vue","../../../../pages/base/chat/[id].vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useChat } from \"~/stores/chat\";\nimport { useAuthStore } from \"~/stores/auth\";\nimport { downloadWithAxios } from \"~/hooks/ElemUI\";\nimport axios from \"~/composables/axios\";\nconst chat = useChat();\nconst currentUser = useAuthStore();\ndefineProps({\n  item: {\n    type: Object,\n    default: () => {},\n  },\n  textType: {\n    type: String,\n    default: \"\",\n  },\n});\nlet req = new XMLHttpRequest();\n</script>\n\n<template>\n  <div @contextmenu.prevent :id=\"item.id\">\n    <div\n      class=\"flex items-end gap-x-2 p-1 rounded-lg\"\n      :class=\"{\n        'max-md:justify-end': item.sender.id === currentUser.user.id,\n        'w-7/12 max-md:w-full text-center ': item.message_type !== 'default',\n      }\"\n    >\n      <div\n        v-if=\"item.message_type === 'default'\"\n        class=\"rounded-full max-md:hidden w-[30px]\"\n        :class=\"{\n          'max-md:!block': chat.userChat.is_group,\n          'max-md:!hidden': item.sender.id === currentUser.user.id,\n        }\"\n      >\n        <slot name=\"userImage\" />\n      </div>\n      <div\n        :class=\"{\n          'mx-auto py-1 px-4 dark:text-gray-300 text-gray-500 tracking-wider rounded-full dark:!bg-black dark:!bg-opacity-30':\n            item.message_type !== 'default',\n          '!bg-transparent dark:!bg-transparent !p-0 !shadow-none':\n            item.message_type === 'change' && item.file,\n          'flex flex-col py-1 px-2 gap-x-2 rounded-xl max-w-[40%] max-lg:max-w-[50%] max-md:max-w-[80%] relative before:absolute before:border-l-[5px] before:border-l-transparent before:border-r-[10px] before:border-b-[10px] before:border-r-transparent before:w-[3px] before:h-[3px] before:bottom-0':\n            item.message_type === 'default',\n          'dark:bg-gray-600 bg-gray-200 dark:shadow-none shadow-md max-md:rounded-r-xl max-md:rounded-l-lg':\n            item.sender.id !== currentUser.user.id,\n          'dark:bg-gray-700 bg-gray-200 dark:shadow-none shadow-md max-md:rounded-l-xl max-md:rounded-r-lg':\n            item.sender.id === currentUser.user.id,\n          'before:dark:border-b-gray-700 before:border-gray-200 before:-left-1 max-md:before:-right-2 max-md:before:left-auto':\n            item.sender.id === currentUser.user.id,\n          'before:dark:border-b-gray-600 before:border-gray-200 before:-left-1 max-md:before:-left-1':\n            item.sender.id !== currentUser.user.id,\n        }\"\n      >\n        <p\n          v-if=\"item.forwarded_from?.id && item.message_type === 'default'\"\n          class=\"text-semiCyan font-bold text-[12px]\"\n        >\n          <slot name=\"userForwarded\"></slot>\n        </p>\n        <div class=\"break-words relative\">\n          <p\n            class=\"text-[12px] text-blueSemiLight tracking-widest\"\n            v-if=\"\n              chat.userChat.is_group &&\n              !item.forwarded_from?.id &&\n              item.sender.id !== currentUser.user.id &&\n              item.message_type === 'default'\n            \"\n          >\n            <slot name=\"userSenderName\" />\n          </p>\n          <div class=\"\" v-if=\"item.file && item.message_type === 'default'\">\n            <div\n              class=\"flex gap-x-4 p-2 items-center cursor-pointer\"\n              v-if=\"item.file_name.substr(-4) !== '.png'\"\n              @click=\"downloadWithAxios(item)\"\n            >\n              <div class=\"bg-blueSemiLight rounded-full p-3\">\n                <svg\n                  width=\"25px\"\n                  height=\"25px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g opacity=\"0.5\">\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V10C2 6.22876 2 4.34315 3.17157 3.17157C4.34315 2 6.23869 2 10.0298 2C10.6358 2 11.1214 2 11.53 2.01666C11.5166 2.09659 11.5095 2.17813 11.5092 2.26057L11.5 5.09497C11.4999 6.19207 11.4998 7.16164 11.6049 7.94316C11.7188 8.79028 11.9803 9.63726 12.6716 10.3285C13.3628 11.0198 14.2098 11.2813 15.0569 11.3952C15.8385 11.5003 16.808 11.5002 17.9051 11.5001L18 11.5001H21.9574C22 12.0344 22 12.6901 22 13.5629V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22Z\"\n                      fill=\"#1C274C\"\n                    ></path>\n                  </g>\n                  <path\n                    d=\"M11.5092 2.2601L11.5 5.0945C11.4999 6.1916 11.4998 7.16117 11.6049 7.94269C11.7188 8.78981 11.9803 9.6368 12.6716 10.3281C13.3629 11.0193 14.2098 11.2808 15.057 11.3947C15.8385 11.4998 16.808 11.4997 17.9051 11.4996L21.9574 11.4996C21.9698 11.6552 21.9786 11.821 21.9848 11.9995H22C22 11.732 22 11.5983 21.9901 11.4408C21.9335 10.5463 21.5617 9.52125 21.0315 8.79853C20.9382 8.6713 20.8743 8.59493 20.7467 8.44218C19.9542 7.49359 18.911 6.31193 18 5.49953C17.1892 4.77645 16.0787 3.98536 15.1101 3.3385C14.2781 2.78275 13.862 2.50487 13.2915 2.29834C13.1403 2.24359 12.9408 2.18311 12.7846 2.14466C12.4006 2.05013 12.0268 2.01725 11.5 2.00586L11.5092 2.2601Z\"\n                    fill=\"#1C274C\"\n                  ></path>\n                </svg>\n              </div>\n              <div class=\"float-start break-all\">\n                <p>\n                  {{\n                    item.file_name?.length > 20\n                      ? item.file_name.slice(0, 15) + \"...\" + item.file_name.substr(-6)\n                      : item.file_name\n                  }}\n                </p>\n                <span class=\"text-sm dark:text-gray-500 text-gray-400 font-bold\"\n                  >{{ item.file_size }}\n                  <span>{{ item.file_size > 1000 ? $t(\"КБ\") : $t(\"Б\") }}</span>\n                </span>\n              </div>\n            </div>\n            <div\n              class=\"cursor-pointer max-w-[300px]\"\n              @dragstart.prevent\n              v-if=\"item.file_name.substr(-4) === '.png'\"\n            >\n              <img\n                class=\"w-full\"\n                :src=\"currentUser.get_server_domain + item.file\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n          <div\n            class=\"text-sm break-all\"\n            :class=\"{\n              'flex flex-col items-center justify-center':\n                item.message_type === 'change' && item.file,\n            }\"\n          >\n            <span\n              class=\"\"\n              v-if=\"item.text\"\n              :class=\"{\n                'dark:!bg-black dark:!bg-opacity-30 py-1 px-4 rounded-full bg-gray-200':\n                  item.message_type === 'change' && item.file,\n              }\"\n            >\n              <slot name=\"userMessage\" />\n            </span>\n            <div v-if=\"item.message_type === 'change' && item.file\">\n              <img\n                class=\"rounded-full w-[80px] h-[80px] cursor-pointer\"\n                :src=\"currentUser.get_server_domain + item.file\"\n                alt=\"\"\n              />\n            </div>\n            <div\n              v-if=\"item.message_type === 'default'\"\n              class=\"flex items-center justify-end gap-x-1 float-right ml-2\"\n              :class=\"{ 'mt-1': item.text?.length <= 70 }\"\n            >\n              <div v-if=\"item.pinned === true && !chat.showPinnedWindow\">\n                <svg\n                  class=\"fill-semiCyan\"\n                  width=\"13px\"\n                  height=\"13px\"\n                  viewBox=\"0 0 256 256\"\n                  id=\"Flat\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M231.999,107.31445,173.47168,165.8418c4.55664,12.67968,6.44531,33.88965-13.18945,59.98584a15.96991,15.96991,0,0,1-11.64649,6.33007q-.5625.03955-1.124.03956a16.0039,16.0039,0,0,1-11.31934-4.69141L88,179.314,53.65723,213.65674a8.00018,8.00018,0,0,1-11.31446-11.31348L76.686,168,28.2959,119.60986a16.01339,16.01339,0,0,1,1.2832-23.78613C55.00488,75.312,79.34082,79.35205,89.99316,82.69287L148.68555,24l.001-.001a16.02135,16.02135,0,0,1,22.627,0L232,84.68652a15.99888,15.99888,0,0,1-.001,22.62793Z\"\n                  />\n                </svg>\n              </div>\n              <p\n                v-if=\"\n                  new Date(item.updated_at).toLocaleString() !==\n                  new Date(item.created_at).toLocaleString()\n                \"\n                class=\"text-[12px] tracking-wider font-light dark:text-gray-400 text-gray-400\"\n              >\n                {{ $t(\"изменено\") }}\n              </p>\n              <p class=\"text-[12px] text-end text-gray-400\">\n                <slot name=\"userDate\" />\n              </p>\n              <div>\n                <svg\n                  v-if=\"item.sender.id === currentUser.user.id\"\n                  class=\"fill-semiCyan\"\n                  width=\"20px\"\n                  height=\"20px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M15.4933 6.93502C15.8053 7.20743 15.8374 7.68122 15.565 7.99325L7.70786 16.9933C7.56543 17.1564 7.35943 17.25 7.14287 17.25C6.9263 17.25 6.72031 17.1564 6.57788 16.9933L3.43502 13.3933C3.16261 13.0812 3.19473 12.6074 3.50677 12.335C3.8188 12.0626 4.29259 12.0947 4.565 12.4068L7.14287 15.3596L14.435 7.00677C14.7074 6.69473 15.1812 6.66261 15.4933 6.93502Z\"\n                  ></path>\n                  <path\n                    v-if=\"item.read && item.sender.id === currentUser.user.id\"\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M20.5175 7.01946C20.8174 7.30513 20.829 7.77986 20.5433 8.07981L11.9716 17.0798C11.8201 17.2389 11.6065 17.3235 11.3872 17.3114C11.1679 17.2993 10.9649 17.1917 10.8318 17.0169L10.4035 16.4544C10.1526 16.1249 10.2163 15.6543 10.5458 15.4034C10.8289 15.1878 11.2161 15.2044 11.4787 15.4223L19.4571 7.04531C19.7428 6.74537 20.2175 6.73379 20.5175 7.01946Z\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","import { defineComponent, ref, h, watch, computed, reactive, shallowRef, nextTick, getCurrentInstance, onMounted, isVue2, watchEffect, toRefs } from 'vue-demi';\nimport { onClickOutside as onClickOutside$1, useActiveElement, useBattery, useBrowserLocation, useClipboard, useDark, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDocumentVisibility, useStorage as useStorage$1, isClient as isClient$1, useDraggable, useElementBounding, useElementSize as useElementSize$1, useElementVisibility as useElementVisibility$1, useEyeDropper, useFullscreen, useGeolocation, useIdle, useMouse, useMouseInElement, useMousePressed, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, usePointer, usePointerLock, usePreferredColorScheme, usePreferredContrast, usePreferredDark as usePreferredDark$1, usePreferredLanguages, usePreferredReducedMotion, useTimeAgo, useTimestamp, useVirtualList, useWindowFocus, useWindowSize } from '@vueuse/core';\nimport { toValue, isClient, noop, isObject, tryOnScopeDispose, isIOS, directiveHooks, pausableWatch, tryOnMounted, toRef, useToggle, notNullish, promiseTimeout, until, useDebounceFn, useThrottleFn } from '@vueuse/shared';\n\nconst OnClickOutside = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"OnClickOutside\",\n  props: [\"as\", \"options\"],\n  emits: [\"trigger\"],\n  setup(props, { slots, emit }) {\n    const target = ref();\n    onClickOutside$1(target, (e) => {\n      emit(\"trigger\", e);\n    }, props.options);\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default());\n    };\n  }\n});\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = toValue(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nconst defaultWindow = isClient ? window : void 0;\n\nfunction useEventListener(...args) {\n  let target;\n  let events;\n  let listeners;\n  let options;\n  if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n    [events, listeners, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, events, listeners, options] = args;\n  }\n  if (!target)\n    return noop;\n  if (!Array.isArray(events))\n    events = [events];\n  if (!Array.isArray(listeners))\n    listeners = [listeners];\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.forEach((fn) => fn());\n    cleanups.length = 0;\n  };\n  const register = (el, event, listener, options2) => {\n    el.addEventListener(event, listener, options2);\n    return () => el.removeEventListener(event, listener, options2);\n  };\n  const stopWatch = watch(\n    () => [unrefElement(target), toValue(options)],\n    ([el, options2]) => {\n      cleanup();\n      if (!el)\n        return;\n      const optionsClone = isObject(options2) ? { ...options2 } : options2;\n      cleanups.push(\n        ...events.flatMap((event) => {\n          return listeners.map((listener) => register(el, event, listener, optionsClone));\n        })\n      );\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\n\nlet _iOSWorkaround = false;\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;\n  if (!window)\n    return noop;\n  if (isIOS && !_iOSWorkaround) {\n    _iOSWorkaround = true;\n    Array.from(window.document.body.children).forEach((el) => el.addEventListener(\"click\", noop));\n    window.document.documentElement.addEventListener(\"click\", noop);\n  }\n  let shouldListen = true;\n  const shouldIgnore = (event) => {\n    return ignore.some((target2) => {\n      if (typeof target2 === \"string\") {\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\n      } else {\n        const el = unrefElement(target2);\n        return el && (event.target === el || event.composedPath().includes(el));\n      }\n    });\n  };\n  const listener = (event) => {\n    const el = unrefElement(target);\n    if (!el || el === event.target || event.composedPath().includes(el))\n      return;\n    if (event.detail === 0)\n      shouldListen = !shouldIgnore(event);\n    if (!shouldListen) {\n      shouldListen = true;\n      return;\n    }\n    handler(event);\n  };\n  const cleanup = [\n    useEventListener(window, \"click\", listener, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      shouldListen = !shouldIgnore(e) && !!(el && !e.composedPath().includes(el));\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      setTimeout(() => {\n        var _a;\n        const el = unrefElement(target);\n        if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement)))\n          handler(event);\n      }, 0);\n    })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nconst vOnClickOutside = {\n  [directiveHooks.mounted](el, binding) {\n    const capture = !binding.modifiers.bubble;\n    if (typeof binding.value === \"function\") {\n      el.__onClickOutside_stop = onClickOutside(el, binding.value, { capture });\n    } else {\n      const [handler, options] = binding.value;\n      el.__onClickOutside_stop = onClickOutside(el, handler, Object.assign({ capture }, options));\n    }\n  },\n  [directiveHooks.unmounted](el) {\n    el.__onClickOutside_stop();\n  }\n};\n\nfunction createKeyPredicate(keyFilter) {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n}\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const {\n    target = defaultWindow,\n    eventName = \"keydown\",\n    passive = false,\n    dedupe = false\n  } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (e.repeat && toValue(dedupe))\n      return;\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\n\nconst vOnKeyStroke = {\n  [directiveHooks.mounted](el, binding) {\n    var _a, _b;\n    const keys = (_b = (_a = binding.arg) == null ? void 0 : _a.split(\",\")) != null ? _b : true;\n    if (typeof binding.value === \"function\") {\n      onKeyStroke(keys, binding.value, {\n        target: el\n      });\n    } else {\n      const [handler, options] = binding.value;\n      onKeyStroke(keys, handler, {\n        target: el,\n        ...options\n      });\n    }\n  }\n};\n\nconst DEFAULT_DELAY = 500;\nconst DEFAULT_THRESHOLD = 10;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  let posStart;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n    posStart = void 0;\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    posStart = {\n      x: ev.x,\n      y: ev.y\n    };\n    timeout = setTimeout(\n      () => handler(ev),\n      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY\n    );\n  }\n  function onMove(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if (!posStart || (options == null ? void 0 : options.distanceThreshold) === false)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - posStart.x;\n    const dy = ev.y - posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance >= ((_d = options == null ? void 0 : options.distanceThreshold) != null ? _d : DEFAULT_THRESHOLD))\n      clear();\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  const cleanup = [\n    useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions),\n    useEventListener(elementRef, \"pointermove\", onMove, listenerOptions),\n    useEventListener(elementRef, [\"pointerup\", \"pointerleave\"], clear, listenerOptions)\n  ];\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nconst OnLongPress = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"OnLongPress\",\n  props: [\"as\", \"options\"],\n  emits: [\"trigger\"],\n  setup(props, { slots, emit }) {\n    const target = ref();\n    onLongPress(\n      target,\n      (e) => {\n        emit(\"trigger\", e);\n      },\n      props.options\n    );\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default());\n    };\n  }\n});\n\nconst vOnLongPress = {\n  [directiveHooks.mounted](el, binding) {\n    if (typeof binding.value === \"function\")\n      onLongPress(el, binding.value, { modifiers: binding.modifiers });\n    else\n      onLongPress(el, ...binding.value);\n  }\n};\n\nconst UseActiveElement = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseActiveElement\",\n  setup(props, { slots }) {\n    const data = reactive({\n      element: useActiveElement()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseBattery = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseBattery\",\n  setup(props, { slots }) {\n    const data = reactive(useBattery(props));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseBrowserLocation = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseBrowserLocation\",\n  setup(props, { slots }) {\n    const data = reactive(useBrowserLocation());\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseClipboard = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseClipboard\",\n  props: [\n    \"source\",\n    \"read\",\n    \"navigator\",\n    \"copiedDuring\",\n    \"legacy\"\n  ],\n  setup(props, { slots }) {\n    const data = reactive(useClipboard(props));\n    return () => {\n      var _a;\n      return (_a = slots.default) == null ? void 0 : _a.call(slots, data);\n    };\n  }\n});\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\nconst handlers = /* @__PURE__ */ getHandlers();\nfunction getHandlers() {\n  if (!(globalKey in _global))\n    _global[globalKey] = _global[globalKey] || {};\n  return _global[globalKey];\n}\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nconst customStorageEventName = \"vueuse-storage\";\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    },\n    initOnMounted\n  } = options;\n  const data = (shallow ? shallowRef : ref)(typeof defaults === \"function\" ? defaults() : defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = toValue(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(\n    data,\n    () => write(data.value),\n    { flush, deep, eventFilter }\n  );\n  if (window && listenToStorageChanges) {\n    tryOnMounted(() => {\n      useEventListener(window, \"storage\", update);\n      useEventListener(window, customStorageEventName, updateFromCustomEvent);\n      if (initOnMounted)\n        update();\n    });\n  }\n  if (!initOnMounted)\n    update();\n  function dispatchWriteEvent(oldValue, newValue) {\n    if (window) {\n      window.dispatchEvent(new CustomEvent(customStorageEventName, {\n        detail: {\n          key,\n          oldValue,\n          newValue,\n          storageArea: storage\n        }\n      }));\n    }\n  }\n  function write(v) {\n    try {\n      const oldValue = storage.getItem(key);\n      if (v == null) {\n        dispatchWriteEvent(oldValue, null);\n        storage.removeItem(key);\n      } else {\n        const serialized = serializer.write(v);\n        if (oldValue !== serialized) {\n          storage.setItem(key, serialized);\n          dispatchWriteEvent(oldValue, serialized);\n        }\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    const rawValue = event ? event.newValue : storage.getItem(key);\n    if (rawValue == null) {\n      if (writeDefaults && rawInit != null)\n        storage.setItem(key, serializer.write(rawInit));\n      return rawInit;\n    } else if (!event && mergeDefaults) {\n      const value = serializer.read(rawValue);\n      if (typeof mergeDefaults === \"function\")\n        return mergeDefaults(value, rawInit);\n      else if (type === \"object\" && !Array.isArray(value))\n        return { ...rawInit, ...value };\n      return value;\n    } else if (typeof rawValue !== \"string\") {\n      return rawValue;\n    } else {\n      return serializer.read(rawValue);\n    }\n  }\n  function update(event) {\n    if (event && event.storageArea !== storage)\n      return;\n    if (event && event.key == null) {\n      data.value = rawInit;\n      return;\n    }\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))\n        data.value = read(event);\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (event)\n        nextTick(resumeWatch);\n      else\n        resumeWatch();\n    }\n  }\n  function updateFromCustomEvent(event) {\n    update(event.detail);\n  }\n  return data;\n}\n\nfunction useMounted() {\n  const isMounted = ref(false);\n  const instance = getCurrentInstance();\n  if (instance) {\n    onMounted(() => {\n      isMounted.value = true;\n    }, isVue2 ? null : instance);\n  }\n  return isMounted;\n}\n\nfunction useSupported(callback) {\n  const isMounted = useMounted();\n  return computed(() => {\n    isMounted.value;\n    return Boolean(callback());\n  });\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  let mediaQuery;\n  const matches = ref(false);\n  const handler = (event) => {\n    matches.value = event.matches;\n  };\n  const cleanup = () => {\n    if (!mediaQuery)\n      return;\n    if (\"removeEventListener\" in mediaQuery)\n      mediaQuery.removeEventListener(\"change\", handler);\n    else\n      mediaQuery.removeListener(handler);\n  };\n  const stopWatch = watchEffect(() => {\n    if (!isSupported.value)\n      return;\n    cleanup();\n    mediaQuery = window.matchMedia(toValue(query));\n    if (\"addEventListener\" in mediaQuery)\n      mediaQuery.addEventListener(\"change\", handler);\n    else\n      mediaQuery.addListener(handler);\n    matches.value = mediaQuery.matches;\n  });\n  tryOnScopeDispose(() => {\n    stopWatch();\n    cleanup();\n    mediaQuery = void 0;\n  });\n  return matches;\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto,\n    disableTransition = true\n  } = options;\n  const modes = {\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\",\n    ...options.modes || {}\n  };\n  const preferredDark = usePreferredDark({ window });\n  const system = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? toRef(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed(() => store.value === \"auto\" ? system.value : store.value);\n  const updateHTMLAttrs = getSSRHandler(\n    \"updateHTMLAttrs\",\n    (selector2, attribute2, value) => {\n      const el = typeof selector2 === \"string\" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);\n      if (!el)\n        return;\n      let style;\n      if (disableTransition) {\n        style = window.document.createElement(\"style\");\n        const styleString = \"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\";\n        style.appendChild(document.createTextNode(styleString));\n        window.document.head.appendChild(style);\n      }\n      if (attribute2 === \"class\") {\n        const current = value.split(/\\s/g);\n        Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n          if (current.includes(v))\n            el.classList.add(v);\n          else\n            el.classList.remove(v);\n        });\n      } else {\n        el.setAttribute(attribute2, value);\n      }\n      if (disableTransition) {\n        window.getComputedStyle(style).opacity;\n        document.head.removeChild(style);\n      }\n    }\n  );\n  function defaultOnChanged(mode) {\n    var _a;\n    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  tryOnMounted(() => onChanged(state.value));\n  const auto = computed({\n    get() {\n      return emitAuto ? store.value : state.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  try {\n    return Object.assign(auto, { store, system, state });\n  } catch (e) {\n    return auto;\n  }\n}\n\nconst UseColorMode = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseColorMode\",\n  props: [\"selector\", \"attribute\", \"modes\", \"onChanged\", \"storageKey\", \"storage\", \"emitAuto\"],\n  setup(props, { slots }) {\n    const mode = useColorMode(props);\n    const data = reactive({\n      mode,\n      system: mode.system,\n      store: mode.store\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDark = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDark\",\n  props: [\"selector\", \"attribute\", \"valueDark\", \"valueLight\", \"onChanged\", \"storageKey\", \"storage\"],\n  setup(props, { slots }) {\n    const isDark = useDark(props);\n    const data = reactive({\n      isDark,\n      toggleDark: useToggle(isDark)\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDeviceMotion = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDeviceMotion\",\n  setup(props, { slots }) {\n    const data = reactive(useDeviceMotion());\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDeviceOrientation = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDeviceOrientation\",\n  setup(props, { slots }) {\n    const data = reactive(useDeviceOrientation());\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDevicePixelRatio = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDevicePixelRatio\",\n  setup(props, { slots }) {\n    const data = reactive({\n      pixelRatio: useDevicePixelRatio()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDevicesList = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDevicesList\",\n  props: [\"onUpdated\", \"requestPermissions\", \"constraints\"],\n  setup(props, { slots }) {\n    const data = reactive(useDevicesList(props));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDocumentVisibility = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDocumentVisibility\",\n  setup(props, { slots }) {\n    const data = reactive({\n      visibility: useDocumentVisibility()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseDraggable = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseDraggable\",\n  props: [\n    \"storageKey\",\n    \"storageType\",\n    \"initialValue\",\n    \"exact\",\n    \"preventDefault\",\n    \"stopPropagation\",\n    \"pointerTypes\",\n    \"as\",\n    \"handle\",\n    \"axis\",\n    \"onStart\",\n    \"onMove\",\n    \"onEnd\",\n    \"disabled\"\n  ],\n  setup(props, { slots }) {\n    const target = ref();\n    const handle = computed(() => {\n      var _a;\n      return (_a = props.handle) != null ? _a : target.value;\n    });\n    const disabled = computed(() => !!props.disabled);\n    const storageValue = props.storageKey && useStorage$1(\n      props.storageKey,\n      toValue(props.initialValue) || { x: 0, y: 0 },\n      isClient$1 ? props.storageType === \"session\" ? sessionStorage : localStorage : void 0\n    );\n    const initialValue = storageValue || props.initialValue || { x: 0, y: 0 };\n    const onEnd = (position, event) => {\n      var _a;\n      (_a = props.onEnd) == null ? void 0 : _a.call(props, position, event);\n      if (!storageValue)\n        return;\n      storageValue.value.x = position.x;\n      storageValue.value.y = position.y;\n    };\n    const data = reactive(useDraggable(target, {\n      ...props,\n      handle,\n      initialValue,\n      onEnd,\n      disabled\n    }));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target, style: `touch-action:none;${data.style}` }, slots.default(data));\n    };\n  }\n});\n\nconst UseElementBounding = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseElementBounding\",\n  props: [\"box\", \"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive(useElementBounding(target));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nfunction useElementHover(el, options = {}) {\n  const {\n    delayEnter = 0,\n    delayLeave = 0,\n    window = defaultWindow\n  } = options;\n  const isHovered = ref(false);\n  let timer;\n  const toggle = (entering) => {\n    const delay = entering ? delayEnter : delayLeave;\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n    if (delay)\n      timer = setTimeout(() => isHovered.value = entering, delay);\n    else\n      isHovered.value = entering;\n  };\n  if (!window)\n    return isHovered;\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\n  return isHovered;\n}\n\nconst vElementHover = {\n  [directiveHooks.mounted](el, binding) {\n    if (typeof binding.value === \"function\") {\n      const isHovered = useElementHover(el);\n      watch(isHovered, (v) => binding.value(v));\n    }\n  }\n};\n\nconst UseElementSize = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseElementSize\",\n  props: [\"width\", \"height\", \"box\", \"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive(useElementSize$1(target, { width: props.width, height: props.height }, { box: props.box }));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nfunction useResizeObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...observerOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => Array.isArray(target) ? target.map((el) => unrefElement(el)) : [unrefElement(target)]);\n  const stopWatch = watch(\n    targets,\n    (els) => {\n      cleanup();\n      if (isSupported.value && window) {\n        observer = new ResizeObserver(callback);\n        for (const _el of els)\n          _el && observer.observe(_el, observerOptions);\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { window = defaultWindow, box = \"content-box\" } = options;\n  const isSVG = computed(() => {\n    var _a, _b;\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\n  });\n  const width = ref(initialSize.width);\n  const height = ref(initialSize.height);\n  const { stop: stop1 } = useResizeObserver(\n    target,\n    ([entry]) => {\n      const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n      if (window && isSVG.value) {\n        const $elem = unrefElement(target);\n        if ($elem) {\n          const styles = window.getComputedStyle($elem);\n          width.value = Number.parseFloat(styles.width);\n          height.value = Number.parseFloat(styles.height);\n        }\n      } else {\n        if (boxSize) {\n          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];\n          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n        } else {\n          width.value = entry.contentRect.width;\n          height.value = entry.contentRect.height;\n        }\n      }\n    },\n    options\n  );\n  tryOnMounted(() => {\n    const ele = unrefElement(target);\n    if (ele) {\n      width.value = \"offsetWidth\" in ele ? ele.offsetWidth : initialSize.width;\n      height.value = \"offsetHeight\" in ele ? ele.offsetHeight : initialSize.height;\n    }\n  });\n  const stop2 = watch(\n    () => unrefElement(target),\n    (ele) => {\n      width.value = ele ? initialSize.width : 0;\n      height.value = ele ? initialSize.height : 0;\n    }\n  );\n  function stop() {\n    stop1();\n    stop2();\n  }\n  return {\n    width,\n    height,\n    stop\n  };\n}\n\nconst vElementSize = {\n  [directiveHooks.mounted](el, binding) {\n    var _a;\n    const handler = typeof binding.value === \"function\" ? binding.value : (_a = binding.value) == null ? void 0 : _a[0];\n    const options = typeof binding.value === \"function\" ? [] : binding.value.slice(1);\n    const { width, height } = useElementSize(el, ...options);\n    watch([width, height], ([width2, height2]) => handler({ width: width2, height: height2 }));\n  }\n};\n\nconst UseElementVisibility = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseElementVisibility\",\n  props: [\"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive({\n      isVisible: useElementVisibility$1(target)\n    });\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0.1,\n    window = defaultWindow,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  const targets = computed(() => {\n    const _target = toValue(target);\n    return (Array.isArray(_target) ? _target : [_target]).map(unrefElement).filter(notNullish);\n  });\n  let cleanup = noop;\n  const isActive = ref(immediate);\n  const stopWatch = isSupported.value ? watch(\n    () => [targets.value, unrefElement(root), isActive.value],\n    ([targets2, root2]) => {\n      cleanup();\n      if (!isActive.value)\n        return;\n      if (!targets2.length)\n        return;\n      const observer = new IntersectionObserver(\n        callback,\n        {\n          root: unrefElement(root2),\n          rootMargin,\n          threshold\n        }\n      );\n      targets2.forEach((el) => el && observer.observe(el));\n      cleanup = () => {\n        observer.disconnect();\n        cleanup = noop;\n      };\n    },\n    { immediate, flush: \"post\" }\n  ) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n    isActive.value = false;\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    isActive,\n    pause() {\n      cleanup();\n      isActive.value = false;\n    },\n    resume() {\n      isActive.value = true;\n    },\n    stop\n  };\n}\n\nfunction useElementVisibility(element, options = {}) {\n  const { window = defaultWindow, scrollTarget, threshold = 0 } = options;\n  const elementIsVisible = ref(false);\n  useIntersectionObserver(\n    element,\n    (intersectionObserverEntries) => {\n      let isIntersecting = elementIsVisible.value;\n      let latestTime = 0;\n      for (const entry of intersectionObserverEntries) {\n        if (entry.time >= latestTime) {\n          latestTime = entry.time;\n          isIntersecting = entry.isIntersecting;\n        }\n      }\n      elementIsVisible.value = isIntersecting;\n    },\n    {\n      root: scrollTarget,\n      window,\n      threshold\n    }\n  );\n  return elementIsVisible;\n}\n\nconst vElementVisibility = {\n  [directiveHooks.mounted](el, binding) {\n    if (typeof binding.value === \"function\") {\n      const handler = binding.value;\n      const isVisible = useElementVisibility(el);\n      watch(isVisible, (v) => handler(v), { immediate: true });\n    } else {\n      const [handler, options] = binding.value;\n      const isVisible = useElementVisibility(el, options);\n      watch(isVisible, (v) => handler(v), { immediate: true });\n    }\n  }\n};\n\nconst UseEyeDropper = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseEyeDropper\",\n  props: {\n    sRGBHex: String\n  },\n  setup(props, { slots }) {\n    const data = reactive(useEyeDropper());\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseFullscreen = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseFullscreen\",\n  props: [\"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive(useFullscreen(target));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nconst UseGeolocation = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseGeolocation\",\n  props: [\"enableHighAccuracy\", \"maximumAge\", \"timeout\", \"navigator\"],\n  setup(props, { slots }) {\n    const data = reactive(useGeolocation(props));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseIdle = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseIdle\",\n  props: [\"timeout\", \"events\", \"listenForVisibilityChange\", \"initialState\"],\n  setup(props, { slots }) {\n    const data = reactive(useIdle(props.timeout, props));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    onSuccess = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = ref(false);\n  const isLoading = ref(false);\n  const error = shallowRef(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n      onSuccess(data);\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw e;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate)\n    execute(delay);\n  const shell = {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n  function waitUntilIsLoaded() {\n    return new Promise((resolve, reject) => {\n      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilIsLoaded().then(onFulfilled, onRejected);\n    }\n  };\n}\n\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes, class: clazz, loading, crossorigin, referrerPolicy } = options;\n    img.src = src;\n    if (srcset)\n      img.srcset = srcset;\n    if (sizes)\n      img.sizes = sizes;\n    if (clazz)\n      img.className = clazz;\n    if (loading)\n      img.loading = loading;\n    if (crossorigin)\n      img.crossOrigin = crossorigin;\n    if (referrerPolicy)\n      img.referrerPolicy = referrerPolicy;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nfunction useImage(options, asyncStateOptions = {}) {\n  const state = useAsyncState(\n    () => loadImage(toValue(options)),\n    void 0,\n    {\n      resetOnExecute: true,\n      ...asyncStateOptions\n    }\n  );\n  watch(\n    () => toValue(options),\n    () => state.execute(asyncStateOptions.delay),\n    { deep: true }\n  );\n  return state;\n}\n\nconst UseImage = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseImage\",\n  props: [\n    \"src\",\n    \"srcset\",\n    \"sizes\",\n    \"as\",\n    \"alt\",\n    \"class\",\n    \"loading\",\n    \"crossorigin\",\n    \"referrerPolicy\"\n  ],\n  setup(props, { slots }) {\n    const data = reactive(useImage(props));\n    return () => {\n      if (data.isLoading && slots.loading)\n        return slots.loading(data);\n      else if (data.error && slots.error)\n        return slots.error(data.error);\n      if (slots.default)\n        return slots.default(data);\n      return h(props.as || \"img\", props);\n    };\n  }\n});\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\",\n    window = defaultWindow,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const internalX = ref(0);\n  const internalY = ref(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c;\n    if (!window)\n      return;\n    const _element = toValue(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? window.document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = toValue(_y)) != null ? _a : y.value,\n      left: (_b = toValue(_x)) != null ? _b : x.value,\n      behavior: toValue(behavior)\n    });\n  }\n  const isScrolling = ref(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = (e) => {\n    if (!isScrolling.value)\n      return;\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  };\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\n  const setArrivedState = (target) => {\n    var _a;\n    if (!window)\n      return;\n    const el = ((_a = target == null ? void 0 : target.document) == null ? void 0 : _a.documentElement) || (target == null ? void 0 : target.documentElement) || unrefElement(target);\n    const { display, flexDirection } = getComputedStyle(el);\n    const scrollLeft = el.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalX.value;\n    const left = Math.abs(scrollLeft) <= (offset.left || 0);\n    const right = Math.abs(scrollLeft) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"row-reverse\") {\n      arrivedState.left = right;\n      arrivedState.right = left;\n    } else {\n      arrivedState.left = left;\n      arrivedState.right = right;\n    }\n    internalX.value = scrollLeft;\n    let scrollTop = el.scrollTop;\n    if (target === window.document && !scrollTop)\n      scrollTop = window.document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    const top = Math.abs(scrollTop) <= (offset.top || 0);\n    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"column-reverse\") {\n      arrivedState.top = bottom;\n      arrivedState.bottom = top;\n    } else {\n      arrivedState.top = top;\n      arrivedState.bottom = bottom;\n    }\n    internalY.value = scrollTop;\n  };\n  const onScrollHandler = (e) => {\n    var _a;\n    if (!window)\n      return;\n    const eventTarget = (_a = e.target.documentElement) != null ? _a : e.target;\n    setArrivedState(eventTarget);\n    isScrolling.value = true;\n    onScrollEndDebounced(e);\n    onScroll(e);\n  };\n  useEventListener(\n    element,\n    \"scroll\",\n    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,\n    eventListenerOptions\n  );\n  tryOnMounted(() => {\n    try {\n      const _element = toValue(element);\n      if (!_element)\n        return;\n      setArrivedState(_element);\n    } catch (e) {\n      onError(e);\n    }\n  });\n  useEventListener(\n    element,\n    \"scrollend\",\n    onScrollEnd,\n    eventListenerOptions\n  );\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions,\n    measure() {\n      const _element = toValue(element);\n      if (window && _element)\n        setArrivedState(_element);\n    }\n  };\n}\n\nfunction resolveElement(el) {\n  if (typeof Window !== \"undefined\" && el instanceof Window)\n    return el.document.documentElement;\n  if (typeof Document !== \"undefined\" && el instanceof Document)\n    return el.documentElement;\n  return el;\n}\n\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a;\n  const {\n    direction = \"bottom\",\n    interval = 100,\n    canLoadMore = () => true\n  } = options;\n  const state = reactive(useScroll(\n    element,\n    {\n      ...options,\n      offset: {\n        [direction]: (_a = options.distance) != null ? _a : 0,\n        ...options.offset\n      }\n    }\n  ));\n  const promise = ref();\n  const isLoading = computed(() => !!promise.value);\n  const observedElement = computed(() => {\n    return resolveElement(toValue(element));\n  });\n  const isElementVisible = useElementVisibility(observedElement);\n  function checkAndLoad() {\n    state.measure();\n    if (!observedElement.value || !isElementVisible.value || !canLoadMore(observedElement.value))\n      return;\n    const { scrollHeight, clientHeight, scrollWidth, clientWidth } = observedElement.value;\n    const isNarrower = direction === \"bottom\" || direction === \"top\" ? scrollHeight <= clientHeight : scrollWidth <= clientWidth;\n    if (state.arrivedState[direction] || isNarrower) {\n      if (!promise.value) {\n        promise.value = Promise.all([\n          onLoadMore(state),\n          new Promise((resolve) => setTimeout(resolve, interval))\n        ]).finally(() => {\n          promise.value = null;\n          nextTick(() => checkAndLoad());\n        });\n      }\n    }\n  }\n  watch(\n    () => [state.arrivedState[direction], isElementVisible.value],\n    checkAndLoad,\n    { immediate: true }\n  );\n  return {\n    isLoading\n  };\n}\n\nconst vInfiniteScroll = {\n  [directiveHooks.mounted](el, binding) {\n    if (typeof binding.value === \"function\")\n      useInfiniteScroll(el, binding.value);\n    else\n      useInfiniteScroll(el, ...binding.value);\n  }\n};\n\nconst vIntersectionObserver = {\n  [directiveHooks.mounted](el, binding) {\n    if (typeof binding.value === \"function\")\n      useIntersectionObserver(el, binding.value);\n    else\n      useIntersectionObserver(el, ...binding.value);\n  }\n};\n\nconst UseMouse = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseMouse\",\n  props: [\"touch\", \"resetOnTouchEnds\", \"initialValue\"],\n  setup(props, { slots }) {\n    const data = reactive(useMouse(props));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseMouseInElement = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseMouseElement\",\n  props: [\"handleOutside\", \"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive(useMouseInElement(target, props));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nconst UseMousePressed = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseMousePressed\",\n  props: [\"touch\", \"initialValue\", \"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive(useMousePressed({ ...props, target }));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nconst UseNetwork = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseNetwork\",\n  setup(props, { slots }) {\n    const data = reactive(useNetwork());\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseNow = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseNow\",\n  props: [\"interval\"],\n  setup(props, { slots }) {\n    const data = reactive(useNow({ ...props, controls: true }));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseObjectUrl = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseObjectUrl\",\n  props: [\n    \"object\"\n  ],\n  setup(props, { slots }) {\n    const object = toRef(props, \"object\");\n    const url = useObjectUrl(object);\n    return () => {\n      if (slots.default && url.value)\n        return slots.default(url);\n    };\n  }\n});\n\nconst UseOffsetPagination = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseOffsetPagination\",\n  props: [\n    \"total\",\n    \"page\",\n    \"pageSize\",\n    \"onPageChange\",\n    \"onPageSizeChange\",\n    \"onPageCountChange\"\n  ],\n  emits: [\n    \"page-change\",\n    \"page-size-change\",\n    \"page-count-change\"\n  ],\n  setup(props, { slots, emit }) {\n    const data = reactive(useOffsetPagination({\n      ...props,\n      onPageChange(...args) {\n        var _a;\n        (_a = props.onPageChange) == null ? void 0 : _a.call(props, ...args);\n        emit(\"page-change\", ...args);\n      },\n      onPageSizeChange(...args) {\n        var _a;\n        (_a = props.onPageSizeChange) == null ? void 0 : _a.call(props, ...args);\n        emit(\"page-size-change\", ...args);\n      },\n      onPageCountChange(...args) {\n        var _a;\n        (_a = props.onPageCountChange) == null ? void 0 : _a.call(props, ...args);\n        emit(\"page-count-change\", ...args);\n      }\n    }));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseOnline = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseOnline\",\n  setup(props, { slots }) {\n    const data = reactive({\n      isOnline: useOnline()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UsePageLeave = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePageLeave\",\n  setup(props, { slots }) {\n    const data = reactive({\n      isLeft: usePageLeave()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UsePointer = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePointer\",\n  props: [\n    \"pointerTypes\",\n    \"initialValue\",\n    \"target\"\n  ],\n  setup(props, { slots }) {\n    const el = ref(null);\n    const data = reactive(usePointer({\n      ...props,\n      target: props.target === \"self\" ? el : defaultWindow\n    }));\n    return () => {\n      if (slots.default)\n        return slots.default(data, { ref: el });\n    };\n  }\n});\n\nconst UsePointerLock = /* #__PURE__ */ defineComponent({\n  name: \"UsePointerLock\",\n  props: [\"as\"],\n  setup(props, { slots }) {\n    const target = ref();\n    const data = reactive(usePointerLock(target));\n    return () => {\n      if (slots.default)\n        return h(props.as || \"div\", { ref: target }, slots.default(data));\n    };\n  }\n});\n\nconst UsePreferredColorScheme = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePreferredColorScheme\",\n  setup(props, { slots }) {\n    const data = reactive({\n      colorScheme: usePreferredColorScheme()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UsePreferredContrast = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePreferredContrast\",\n  setup(props, { slots }) {\n    const data = reactive({\n      contrast: usePreferredContrast()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UsePreferredDark = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePreferredDark\",\n  setup(props, { slots }) {\n    const data = reactive({\n      prefersDark: usePreferredDark$1()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UsePreferredLanguages = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePreferredLanguages\",\n  setup(props, { slots }) {\n    const data = reactive({\n      languages: usePreferredLanguages()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UsePreferredReducedMotion = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UsePreferredReducedMotion\",\n  setup(props, { slots }) {\n    const data = reactive({\n      motion: usePreferredReducedMotion()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nfunction useMutationObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...mutationOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => {\n    const value = toValue(target);\n    const items = (Array.isArray(value) ? value : [value]).map(unrefElement).filter(notNullish);\n    return new Set(items);\n  });\n  const stopWatch = watch(\n    () => targets.value,\n    (targets2) => {\n      cleanup();\n      if (isSupported.value && window && targets2.size) {\n        observer = new MutationObserver(callback);\n        targets2.forEach((el) => observer.observe(el, mutationOptions));\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const takeRecords = () => {\n    return observer == null ? void 0 : observer.takeRecords();\n  };\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop,\n    takeRecords\n  };\n}\n\nfunction useCssVar(prop, target, options = {}) {\n  const { window = defaultWindow, initialValue = \"\", observe = false } = options;\n  const variable = ref(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  function updateCssVar() {\n    var _a;\n    const key = toValue(prop);\n    const el = toValue(elRef);\n    if (el && window) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();\n      variable.value = value || initialValue;\n    }\n  }\n  if (observe) {\n    useMutationObserver(elRef, updateCssVar, {\n      attributeFilter: [\"style\", \"class\"],\n      window\n    });\n  }\n  watch(\n    [elRef, () => toValue(prop)],\n    updateCssVar,\n    { immediate: true }\n  );\n  watch(\n    variable,\n    (val) => {\n      var _a;\n      if ((_a = elRef.value) == null ? void 0 : _a.style)\n        elRef.value.style.setProperty(toValue(prop), val);\n    }\n  );\n  return variable;\n}\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = ref(\"\");\n  const right = ref(\"\");\n  const bottom = ref(\"\");\n  const left = ref(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update));\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nconst UseScreenSafeArea = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseScreenSafeArea\",\n  props: {\n    top: Boolean,\n    right: Boolean,\n    bottom: Boolean,\n    left: Boolean\n  },\n  setup(props, { slots }) {\n    const {\n      top,\n      right,\n      bottom,\n      left\n    } = useScreenSafeArea();\n    return () => {\n      if (slots.default) {\n        return h(\"div\", {\n          style: {\n            paddingTop: props.top ? top.value : \"\",\n            paddingRight: props.right ? right.value : \"\",\n            paddingBottom: props.bottom ? bottom.value : \"\",\n            paddingLeft: props.left ? left.value : \"\",\n            boxSizing: \"border-box\",\n            maxHeight: \"100vh\",\n            maxWidth: \"100vw\",\n            overflow: \"auto\"\n          }\n        }, slots.default());\n      }\n    };\n  }\n});\n\nconst vScroll = {\n  [directiveHooks.mounted](el, binding) {\n    if (typeof binding.value === \"function\") {\n      const handler = binding.value;\n      const state = useScroll(el, {\n        onScroll() {\n          handler(state);\n        },\n        onStop() {\n          handler(state);\n        }\n      });\n    } else {\n      const [handler, options] = binding.value;\n      const state = useScroll(el, {\n        ...options,\n        onScroll(e) {\n          var _a;\n          (_a = options.onScroll) == null ? void 0 : _a.call(options, e);\n          handler(state);\n        },\n        onStop(e) {\n          var _a;\n          (_a = options.onStop) == null ? void 0 : _a.call(options, e);\n          handler(state);\n        }\n      });\n    }\n  }\n};\n\nfunction checkOverflowScroll(ele) {\n  const style = window.getComputedStyle(ele);\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientWidth < ele.scrollWidth || style.overflowY === \"auto\" && ele.clientHeight < ele.scrollHeight) {\n    return true;\n  } else {\n    const parent = ele.parentNode;\n    if (!parent || parent.tagName === \"BODY\")\n      return false;\n    return checkOverflowScroll(parent);\n  }\n}\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  const _target = e.target;\n  if (checkOverflowScroll(_target))\n    return false;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nconst elInitialOverflow = /* @__PURE__ */ new WeakMap();\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = ref(initialState);\n  let stopTouchMoveListener = null;\n  watch(toRef(element), (el) => {\n    const target = resolveElement(toValue(el));\n    if (target) {\n      const ele = target;\n      if (!elInitialOverflow.get(ele))\n        elInitialOverflow.set(ele, ele.style.overflow);\n      if (isLocked.value)\n        ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(\n        el,\n        \"touchmove\",\n        (e) => {\n          preventDefault(e);\n        },\n        { passive: false }\n      );\n    }\n    el.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    var _a;\n    const el = resolveElement(toValue(element));\n    if (!el || !isLocked.value)\n      return;\n    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());\n    el.style.overflow = (_a = elInitialOverflow.get(el)) != null ? _a : \"\";\n    elInitialOverflow.delete(el);\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else\n        unlock();\n    }\n  });\n}\n\nfunction onScrollLock() {\n  let isMounted = false;\n  const state = ref(false);\n  return (el, binding) => {\n    state.value = binding.value;\n    if (isMounted)\n      return;\n    isMounted = true;\n    const isLocked = useScrollLock(el, binding.value);\n    watch(state, (v) => isLocked.value = v);\n  };\n}\nconst vScrollLock = onScrollLock();\n\nconst UseTimeAgo = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseTimeAgo\",\n  props: [\"time\", \"updateInterval\", \"max\", \"fullDateFormatter\", \"messages\", \"showSecond\"],\n  setup(props, { slots }) {\n    const data = reactive(useTimeAgo(() => props.time, { ...props, controls: true }));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseTimestamp = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseTimestamp\",\n  props: [\"immediate\", \"interval\", \"offset\"],\n  setup(props, { slots }) {\n    const data = reactive(useTimestamp({ ...props, controls: true }));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseVirtualList = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseVirtualList\",\n  props: [\n    \"list\",\n    \"options\",\n    \"height\"\n  ],\n  setup(props, { slots, expose }) {\n    const { list: listRef } = toRefs(props);\n    const { list, containerProps, wrapperProps, scrollTo } = useVirtualList(listRef, props.options);\n    expose({ scrollTo });\n    if (containerProps.style && typeof containerProps.style === \"object\" && !Array.isArray(containerProps.style))\n      containerProps.style.height = props.height || \"300px\";\n    return () => h(\"div\", { ...containerProps }, [\n      h(\"div\", { ...wrapperProps.value }, list.value.map((item) => h(\"div\", { style: { overflow: \"hidden\", height: item.height } }, slots.default ? slots.default(item) : \"Please set content!\")))\n    ]);\n  }\n});\n\nconst UseWindowFocus = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseWindowFocus\",\n  setup(props, { slots }) {\n    const data = reactive({\n      focused: useWindowFocus()\n    });\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nconst UseWindowSize = /* @__PURE__ */ /* #__PURE__ */ defineComponent({\n  name: \"UseWindowSize\",\n  props: [\"initialWidth\", \"initialHeight\"],\n  setup(props, { slots }) {\n    const data = reactive(useWindowSize(props));\n    return () => {\n      if (slots.default)\n        return slots.default(data);\n    };\n  }\n});\n\nexport { OnClickOutside, OnLongPress, UseActiveElement, UseBattery, UseBrowserLocation, UseClipboard, UseColorMode, UseDark, UseDeviceMotion, UseDeviceOrientation, UseDevicePixelRatio, UseDevicesList, UseDocumentVisibility, UseDraggable, UseElementBounding, UseElementSize, UseElementVisibility, UseEyeDropper, UseFullscreen, UseGeolocation, UseIdle, UseImage, UseMouse, UseMouseInElement, UseMousePressed, UseNetwork, UseNow, UseObjectUrl, UseOffsetPagination, UseOnline, UsePageLeave, UsePointer, UsePointerLock, UsePreferredColorScheme, UsePreferredContrast, UsePreferredDark, UsePreferredLanguages, UsePreferredReducedMotion, UseScreenSafeArea, UseTimeAgo, UseTimestamp, UseVirtualList, UseWindowFocus, UseWindowSize, vOnClickOutside as VOnClickOutside, vOnLongPress as VOnLongPress, vElementHover, vElementSize, vElementVisibility, vInfiniteScroll, vIntersectionObserver, vOnClickOutside, vOnKeyStroke, vOnLongPress, vScroll, vScrollLock };\n","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <div\n    class=\"my-auto dark:bg-gray-700 dark:shadow-gray-600 shadow-md rounded-lg dark:border-none border-t border-opacity-20 border-gray-400 mt-20 h-20 items-center flex justify-center w-4/12 max-lg:w-6/12 max-md:w-10/12 max-ms:w-full mx-auto\"\n    v-if=\"chat.userChat.messages.length === 0\">\n    <p class=\"tracking-widest text-lg max-sm:text-base\">{{ $t('Пока что тут ничего нет') }}</p>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useAuthStore} from \"~/stores/auth\";\nimport {useChat} from \"~/stores/chat\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {toast} from \"vue3-toastify\";\nimport {vIntersectionObserver} from '@vueuse/components'\nimport ChatContentContextMenuItem from \"~/components/Chat/ChatContent/ChatContentContextMenuItem.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport TheChatContentEmpty from \"~/components/Chat/ChatNav/UI/TheChatContentEmpty.vue\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TheChatAvatar from \"~/components/Chat/ChatNav/UI/TheChatAvatar.vue\";\nimport {useAnchorScroll} from \"#imports\";\n\nconst router = useRouter()\nconst route = useRoute()\nconst chat = useChat()\nconst currentUser = useAuthStore()\nconst {x, y} = useMouse()\nconst {y: windowY} = useWindowScroll()\nconst isOpen = ref(false)\nconst virtualElement = ref({getBoundingClientRect: () => ({})})\nconst scrollPosition = ref(null)\nconst page = ref(1)\nconst limit = ref(99)\nconst messages_block = ref({\n  scrollTop: '',\n  scrollHeight: '',\n  clientHeight: '',\n  root: null,\n})\nconst props = defineProps({\n  messageObject: {\n    type: Object,\n    default: () => {\n    }\n  },\n  showDeleteWarn: {\n    type: Boolean,\n    default: false\n  },\n  showPinnedWarn: {\n    type: Boolean,\n    default: false\n  },\n  showUnPinWarn: {\n    type: Boolean,\n    default: false\n  },\n  showDateModal: {\n    type: Boolean,\n    default: false\n  }\n})\n\nfunction onScroll({target: {scrollTop, clientHeight, scrollHeight}}) {\n  scrollPosition.value = scrollTop\n  if (scrollTop === 0) {\n    page.value = Number(page.value) + 1\n    if(chat.messageLimit == 100){\n      chat?.loadUserChat({page: page.value, limit: 100, id: route.params.id})\n    }\n  }\n}\n\nonMounted(() => {\n  setTimeout(() => {\n    const el = messages_block.value\n    el.scrollTop = el?.scrollHeight\n  }, 500)\n})\nwatchEffect(() => {\n  setTimeout(() => {\n    const el = messages_block.value\n    el.scrollTop = el?.scrollHeight\n  }, 500)\n})\n\nfunction scrollBottom() {\n  const el = document.getElementById('messages_block')\n  el?.scrollTo({\n    top: el?.scrollHeight,\n    behavior: \"smooth\"\n  })\n}\n\nlet to = ref(null)\n\nfunction onIntersectionObserver([{target}]: IntersectionObserverEntry[]) {\n  if (target.dataset.read === '0' && target.dataset.senderId !== `${currentUser.user.id}`) {\n    if (chat.messagesMakeRead.indexOf(target.id) === -1) {\n      chat.messagesMakeRead.push(target.id)\n      clearTimeout(to)\n      to = setTimeout(() => {\n        chat.makeRead({messages: chat.messagesMakeRead})\n      }, 1000)\n    }\n  }\n}\nfunction StartRecording(){\n  if (chat.showVoiceInfo && chat.voiceTimer === 0) {\n    setTimeout(() => {\n      chat.showVoiceInfo = false\n    }, 2000)\n  } else {\n    chat.showVoiceInfo = false;\n    setTimeout(() => {\n      chat.voiceTimer += 1\n    }, 1000)\n  }\n  console.log(chat.voiceTimer)\n}\n\n</script>\n\n<template>\n  <div class=\"flex flex-col !overflow-x-hidden gap-y-2 check overflow-y-auto\" @dragenter.prevent=\"chat.showDragInfo = true\" @scroll=\"onScroll\"\n       ref=\"messages_block\" id=\"messages_block\">\n    <Transition name=\"slide-up\">\n      <button v-if=\"scrollPosition < this.$refs.messages_block?.scrollHeight - this.$refs.messages_block?.clientHeight\"\n              @click=\"scrollBottom\"\n              class=\"absolute bottom-20 right-3 dark:bg-gray-700 bg-white rounded-full\">\n        <svg class=\"stroke-blueSemiLight\" width=\"40px\" height=\"40px\" viewBox=\"0 0 24 24\" fill=\"none\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M17 9.5L12 14.5L7 9.5\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"/>\n        </svg>\n      </button>\n    </Transition>\n    <Transition name=\"fade\">\n      <div\n        class=\"mr-4 absolute bottom-10 right-0 bg-black dark:bg-opacity-70 z-50 bg-opacity-20 dark:text-white text-white tracking-wide p-4 rounded-lg mb-4 max-[400px]:mx-4 break-words\"\n        v-if=\"chat.showVoiceInfo\">\n        <p class=\"text-sm\">{{ $t('Удерживайте для записи голосового сообщения') }}</p>\n      </div>\n    </Transition>\n    <UContextMenu @contextmenu.prevent v-model=\"isOpen\" :virtual-element=\"virtualElement\">\n      <ChatContentContextMenuItem\n        v-if=\"currentUser.user?.id === messageObject.sender?.id && !messageObject.forwarded_from && messageObject.message_type === 'default'\"\n        @click=\"chat.messageUpdate = {...messageObject, updateText: messageObject?.text}; chat.messageText = ''; chat.messageReplied = {}; chat.messagePinned = {}; chat.messageForwarded = {}; isOpen = false\">\n        <template v-slot:ContextMenuSvg>\n          <svg class=\"stroke-black dark:stroke-white\" width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" fill=\"none\"\n               xmlns=\"http://www.w3.org/2000/svg\">\n            <path data-v-a06cf116=\"\"\n                  d=\"M21.2799 6.40005L11.7399 15.94C10.7899 16.89 7.96987 17.33 7.33987 16.7C6.70987 16.07 7.13987 13.25 8.08987 12.3L17.6399 2.75002C17.8754 2.49308 18.1605 2.28654 18.4781 2.14284C18.7956 1.99914 19.139 1.92124 19.4875 1.9139C19.8359 1.90657 20.1823 1.96991 20.5056 2.10012C20.8289 2.23033 21.1225 2.42473 21.3686 2.67153C21.6147 2.91833 21.8083 3.21243 21.9376 3.53609C22.0669 3.85976 22.1294 4.20626 22.1211 4.55471C22.1128 4.90316 22.0339 5.24635 21.8894 5.5635C21.7448 5.88065 21.5375 6.16524 21.2799 6.40005V6.40005Z\"\n                  stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            <path data-v-a06cf116=\"\"\n                  d=\"M11 4H6C4.93913 4 3.92178 4.42142 3.17163 5.17157C2.42149 5.92172 2 6.93913 2 8V18C2 19.0609 2.42149 20.0783 3.17163 20.8284C3.92178 21.5786 4.93913 22 6 22H17C19.21 22 20 20.2 20 18V13\"\n                  stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n          </svg>\n        </template>\n        <template v-slot:ContextMenuText>{{ $t('Изменить') }}</template>\n      </ChatContentContextMenuItem>\n      <ChatContentContextMenuItem v-if=\"messageObject.message_type === 'default'\"\n                                  @click=\"chat.messageReplied = messageObject; messageObject = {}; chat.messageUpdate = {}; isOpen = false\">\n        <template v-slot:ContextMenuSvg>\n          <svg version=\"1.1\" id=\"Icons\" xmlns=\"http://www.w3.org/2000/svg\"\n               viewBox=\"0 0 32 32\" xml:space=\"preserve\" fill=\"none\" width=\"22px\" height=\"22px\" class=\"dark:stroke-white stroke-black\">\n            <path class=\"st0\" d=\"M11.7,8.1V6c0-0.8-0.9-1.3-1.5-0.8l-6.8,6c-0.5,0.4-0.5,1.2,0,1.6l6.8,6c0.6,0.5,1.5,0,1.5-0.8v-2h0.9\n              c7.1,0,13.5,4.3,16.5,11C29,16.8,21.3,8.6,11.7,8.1z\"/>\n          </svg>\n        </template>\n        <template v-slot:ContextMenuText>{{ $t('Ответить') }}</template>\n      </ChatContentContextMenuItem>\n      <ChatContentContextMenuItem v-if=\"messageObject.message_type === 'default'\"\n        @click=\"chat.showSendWindow = true; isOpen = false; chat.messageReplied = {}; chat.messageUpdate = {}\">\n        <template v-slot:ContextMenuSvg>\n          <svg class=\"dark:stroke-white stroke-black fill-none\" width=\"22px\" height=\"22px\" version=\"1.1\" id=\"Icons\"\n               xmlns=\"http://www.w3.org/2000/svg\"\n               viewBox=\"0 0 32 32\" xml:space=\"preserve\">\n              <path d=\"M20.3,8.1V6c0-0.8,0.9-1.3,1.5-0.8l6.8,6c0.5,0.4,0.5,1.2,0,1.6l-6.8,6c-0.6,0.5-1.5,0-1.5-0.8v-2h-0.9\n              C12.4,16,5.9,20.3,3,27C3,16.8,10.7,8.6,20.3,8.1z\"/>\n          </svg>\n        </template>\n        <template v-slot:ContextMenuText>{{ $t('Переслать') }}</template>\n      </ChatContentContextMenuItem>\n      <ChatContentContextMenuItem v-if=\"!messageObject.pinned && messageObject.message_type === 'default'\"\n                                  @click=\"chat.messagePinned = {...messageObject}; showPinnedWarn = true; isOpen = false;\">\n        <template v-slot:ContextMenuSvg>\n          <svg class=\"dark:fill-white\" xmlns=\"http://www.w3.org/2000/svg\"\n               width=\"22px\" height=\"22px\" viewBox=\"0 0 261.811 261.811\"\n               xml:space=\"preserve\">\n                <g>\n                  <g>\n                    <path d=\"M24.715,261.811c-5.492,0-10.645-2.133-14.521-6.01c-8.011-8.017-8.011-21.054-0.006-29.064\n                      l70.375-70.372L38.51,113.785c-7.073-7.179-7.928-18.303-2.039-26.466c0.855-1.184,21.314-28.839,58.964-28.839\n                      c2.224,0,4.492,0.101,6.756,0.295L180.62,3.597c8.103-5.729,20.081-4.48,26.863,2.796l44.675,48.037\n                      c6.919,7.436,7.319,19.006,0.926,26.906l-55.882,69.151c1.979,23.759,1.052,63.069-23.901,77.725\n                      c-7.959,4.666-18.578,3.26-25.021-3.282l-38.837-39.316l-70.206,70.183C35.365,259.678,30.208,261.811,24.715,261.811z\n                       M95.43,70.194c-31.735,0-48.763,23.009-49.472,23.987c-2.53,3.502-2.159,8.291,0.883,11.376l50.227,50.865l-78.6,78.594\n                      c-3.442,3.448-3.442,9.058,0,12.505c3.319,3.328,9.157,3.328,12.482,0l78.531-78.52l47.122,47.7\n                      c2.762,2.813,7.325,3.407,10.761,1.412c20.957-12.316,19.539-52.303,17.961-68.919l-0.229-2.373l58.878-72.854\n                      c2.745-3.402,2.573-8.371-0.406-11.567l-44.663-48.031c-2.904-3.116-8.062-3.671-11.545-1.212l-82.042,57.726l-2.213-0.251\n                      C100.536,70.34,97.952,70.194,95.43,70.194z\"/>\n                  </g>\n                </g>\n            </svg>\n        </template>\n        <template v-slot:ContextMenuText>{{ $t('Закрепить') }}</template>\n      </ChatContentContextMenuItem>\n      <ChatContentContextMenuItem v-else-if=\"messageObject.pinned && messageObject.message_type === 'default'\" @click=\"showUnPinWarn = true; isOpen = false\">\n        <template v-slot:ContextMenuSvg>\n          <svg class=\"dark:fill-white fill-black\" width=\"22px\" height=\"22px\" viewBox=\"0 0 256 256\" id=\"Flat\"\n               xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M50.96,37.30957A4,4,0,0,0,45.04,42.69043l38.59424,42.4541c-11.416-2.39062-31.02295-2.76172-51.54444,13.79248a12.01279,12.01279,0,0,0-.96484,17.84424L82.34326,168,45.17188,205.17139a3.99992,3.99992,0,1,0,5.65625,5.65722L88,173.65674l51.02051,51.021a12.00814,12.00814,0,0,0,8.49219,3.51954q.42041,0,.84277-.02979a11.97039,11.97039,0,0,0,8.73047-4.74512c6.33252-8.4165,15.40625-23.479,15.38379-40.55859L205.04,218.69043a4,4,0,1,0,5.91992-5.38086Zm99.7334,181.30322a3.99357,3.99357,0,0,1-6.01563.40821L36.78125,111.124a4.01376,4.01376,0,0,1,.332-5.96045c27.17188-21.91943,52.06543-10.09375,53.09766-9.58593a3.99477,3.99477,0,0,0,3.08984.20019l69.71729,76.689C168.36816,191.2041,157.64355,209.374,150.69336,218.61279ZM232.68652,96a11.92292,11.92292,0,0,1-3.51562,8.48584l-41.4043,41.40381a3.99975,3.99975,0,1,1-5.65625-5.65674l41.4043-41.4043a3.99915,3.99915,0,0,0,0-5.65674L162.8291,32.48535a4.00621,4.00621,0,0,0-5.6582.00049l-37.97559,37.9751a3.99957,3.99957,0,1,1-5.65625-5.65625l37.97559-37.97608a12.01526,12.01526,0,0,1,16.9707-.00049L229.1709,87.51465A11.921,11.921,0,0,1,232.68652,96Z\"/>\n          </svg>\n        </template>\n        <template v-slot:ContextMenuText>{{ $t('Открепить') }}</template>\n      </ChatContentContextMenuItem>\n      <ChatContentContextMenuItem @click=\"showDeleteWarn = true; isOpen = false\">\n        <template v-slot:ContextMenuSvg>\n          <svg class=\"dark:stroke-white stroke-black\" width=\"23px\" height=\"23px\" viewBox=\"0 0 24 24\" fill=\"none\"\n               xmlns=\"http://www.w3.org/2000/svg\">\n            <path data-v-a06cf116=\"\" d=\"M10 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"></path>\n            <path data-v-a06cf116=\"\" d=\"M14 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"></path>\n            <path data-v-a06cf116=\"\" d=\"M4 7H20\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"></path>\n            <path data-v-a06cf116=\"\" d=\"M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10\"\n                  stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            <path data-v-a06cf116=\"\" d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\"\n                  stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n          </svg>\n        </template>\n        <template v-slot:ContextMenuText>{{ $t('Удалить') }}</template>\n      </ChatContentContextMenuItem>\n    </UContextMenu>\n    <div class=\"p-2\">\n      <div v-for=\"(date, i) in chat.userChat?.messages\" :key=\"i\">\n        <div class=\"w-6/12 mx-auto max-md:w-3/12 \" @contextmenu.stop>\n          <p class=\"bg-white bg-opacity-20 w-[120px] max-[450px]:w-[90px] py-1 text-sm text-center rounded-full\"\n             @click=\"showDateModal = true\">\n            {{ date.date }}\n          </p>\n        </div>\n        <ChatChatContentUserElem class=\"\"\n                                 :id=\"item.id\"\n                                 :data-read=\"item.read ? 1 : 0\"\n                                 :data-sender-id=\"item.sender.id\"\n                                 v-for=\"(item, id) in date.messages\"\n                                 :item=\"item\"\n                                 :key=\"id\"\n                                 v-intersection-observer=\"[onIntersectionObserver, {item}]\"\n                                 @click=\"messageObject = {}\"\n                                 @contextmenu.prevent=\"()=> {\n                              const top = unref(y) - unref(windowY)\n                              const left = unref(x)\n                              virtualElement.getBoundingClientRect = () => ({\n                                width: 0,\n                                height: 0,\n                                top,\n                                left\n                              })\n                              isOpen = true\n                              messageObject = {...item}\n                            }\">\n          <template v-slot:userForwarded>\n            {{ $t('Переслано от') + ' ' + item.forwarded_from.name }}\n          </template>\n          <template v-slot:userImage>\n            <img class=\"w-[30px] h-[30px] rounded-full\"\n                 :src=\"currentUser.get_server_domain + item.sender.photo\"\n                 alt=\"\">\n          </template>\n          <template v-slot:userSenderName>{{ item.sender.first_name + ' ' + item.sender.last_name }}</template>\n          <template v-slot:userMessage>\n            <span v-if=\"item.message_type !== 'default' && item.message_type !== 'change'\" class=\"\">\n              <button @click=\"router.push(chat.chatList.results[i]?.user?.id === item.sender.id ? `/base/chat/${chat.chatList.results[i]?.id}` : ``)\" class=\"hover:underline hover:text-blueDarkSemiLight cursor-pointer\">{{item.text.split(' ').slice(0, 1)[0]}}</button>\n              <span>{{' ' + item.text.split(' ').slice(0, 2)[1] + ' '}}</span>\n              <button class=\"hover:underline hover:text-blueDarkSemiLight cursor-pointer\">{{item.text.split(' ').slice(2, 3)[0]}}</button>\n            </span>\n            <span v-else class=\"whitespace-pre-line\">\n              {{item.text}}\n            </span>\n          </template>\n          <template v-slot:userDate>{{ new Date(item.updated_at).toLocaleTimeString().slice(0, 5) }}</template>\n        </ChatChatContentUserElem>\n      </div>\n    </div>\n    <TheChatContentEmpty/>\n    <Transition name=\"fade\">\n      <TheModal :type=\"'resize'\" v-if=\"showDeleteWarn\" @showModal=\"showDeleteWarn = false; messageObject = {}\">\n        <div>\n          <p class=\"text-lg tracking-wider\">{{ $t('Удалить выбранное сообщение?') }}</p>\n        </div>\n        <div class=\"flex mt-4 gap-x-4 justify-center\">\n          <TheButton class=\"py-2 px-4 rounded-lg\" type=\"chat\" @click=\"showDeleteWarn = false\">\n            {{ $t('Отмена') }}\n          </TheButton>\n          <TheButton class=\"py-2 px-4 rounded-lg\" type=\"chat\"\n                     @click=\"chat.deleteMessage({id: messageObject?.id}); isOpen = false; showDeleteWarn = false\">\n            {{ $t('Удалить') }}\n          </TheButton>\n        </div>\n      </TheModal>\n      <TheModal :type=\"'resizeSendWindow'\" class=\"overflow-hidden \" v-else-if=\"chat.showSendWindow\"\n                @showModal=\"chat.showSendWindow = false; messageObject = {}\">\n        <TheTextContent class=\"mt-2\">{{ $t('Переслать') }}</TheTextContent>\n        <div class=\"w-full relative flex items-center\">\n          <div class=\"absolute rotate-90 ml-2\">\n            <svg class=\"dark:stroke-white stroke-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M14.9536 14.9458L21 21M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n                stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </div>\n          <input type=\"text\" class=\"w-full dark:bg-gray-700 outline-none pl-10 h-[50px]\" placeholder=\"Поиск...\"/>\n        </div>\n        <div class=\"dark:bg-gray-800 bg-gray-200 flex flex-col gap-y-3 py-4 h-[400px] overflow-y-auto\">\n          <div v-for=\"item in chat.get_chat_list.results\"\n               @click=\"messageObject.id ? chat.messageForwarded = messageObject : chat.messageForwarded; router.push(`/base/chat/${item.id}`); chat.showSendWindow = false\"\n               class=\"flex bg-transparent border-none gap-x-4 items-center w-full dark:hover:bg-gray-600 hover:bg-gray-300 cursor-pointer transition-all px-5\">\n            <TheChatAvatar :user=\"currentUser\" :chat=\"item\"/>\n            <div class=\"w-9/12 break-words\">\n              <p class=\"text-sm\" v-if=\"item.user?.id || item.is_group\">\n                {{ item.user?.id && !item.is_group ? item.user?.first_name + ' ' + item.user?.last_name : item.name }}</p>\n              <p class=\"text-sm\" v-else>{{ $t('Избранное') }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"w-full h-[50px] flex items-center justify-center\">\n          <TheButton type=\"chat\" @click=\"chat.showSendWindow = false\">{{ $t('Отмена') }}\n          </TheButton>\n        </div>\n      </TheModal>\n      <TheModal :type=\"'resize'\" v-else-if=\"showPinnedWarn\" @showModal=\"showPinnedWarn = false; messageObject = {}\">\n        <div>\n          <p class=\"text-lg tracking-wider\">{{ $t('Закрепить это сообщение?') }}</p>\n        </div>\n        <div class=\"flex mt-4 gap-x-4 justify-center\">\n          <TheButton type=\"chat\" @click=\"showPinnedWarn = false; chat.messagePinned = {}\">\n            {{ $t('Отмена') }}\n          </TheButton>\n          <TheButton type=\"chat\"\n                     @click=\"chat.makePinned({messages: [chat.messagePinned?.id]}).then(res=>{\n                       chat.messagePinned = {}\n                       toast.info('Сообщение закреплено', {autoClose: 1500, theme: 'auto'})\n                     }); isOpen = false; showPinnedWarn = false\">\n            {{ $t('Закрепить') }}\n          </TheButton>\n        </div>\n      </TheModal>\n      <TheModal :type=\"'resize'\" v-else-if=\"showUnPinWarn\" @showModal=\"showUnPinWarn = false; messageObject = {}\">\n        <div>\n          <p class=\"text-lg tracking-wider\">{{ $t('Открепить это сообщение?') }}</p>\n        </div>\n        <div class=\"flex mt-4 gap-x-4 justify-center\">\n          <TheButton type=\"chat\" @click=\"showUnPinWarn = false\">\n            {{ $t('Отмена') }}\n          </TheButton>\n          <TheButton type=\"chat\"\n                     @click=\"chat.makePinned({messages:[ messageObject?.id]}).then(res=>{\n                       toast.info('Сообщение откреплено', {autoClose: 1500, theme: 'auto'})\n                     }); isOpen = false; showUnPinWarn = false\">\n            {{ $t('Открепить') }}\n          </TheButton>\n        </div>\n      </TheModal>\n      <TheModal :type=\"'resize'\" v-else-if=\"showDateModal\" @showModal=\"showDateModal = false\">\n      </TheModal>\n    </Transition>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport autosize from \"autosize\";\nimport {setFocus} from \"~/hooks/ElemUI\";\n\nconst el = ref()\n\nonMounted(() => {\n  autosize.destroy(el.value)\n  setFocus(el.value)\n\n})\nonUpdated(()=>{\n  autosize(el.value)\n  console.log(12312312)\n})\nonBeforeUnmount(() => {\n  autosize.destroy(el.value)\n})\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: ''\n  }\n})\n\n</script>\n\n<template>\n <textarea\n   @input=\"$emit('update:modelValue', $event.target.value)\"\n   :v-model=\"modelValue\"\n   :value=\"modelValue\"\n   ref=\"el\"\n   class=\" placeholder-style p-4 resize-none example break-words dark:bg-gray-700 bg-gray-200 w-full max-h-[300px] items-center border-l border-black dark:border-opacity-20 border-opacity-10 outline-none text-sm tracking-wide\"\n   placeholder=\"Написать сообщение...\"/>\n</template>\n\n<style scoped lang=\"scss\">\n.example::-webkit-scrollbar {\n  display: none;\n}\n\n.example {\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {useRoute} from \"vue-router\";\nimport {toast} from \"vue3-toastify\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\n\nconst route = useRoute()\nconst chat = useChat()\nconst activePin = ref({})\nconst props = defineProps({\n  arrayPin: {\n    type: Array,\n    default: ()=>[]\n  },\n  showWarnPinned: {\n    type: Boolean,\n    default: false\n  }\n})\n\nwatchSyncEffect(()=>{\n  chat.arrayPin = chat.get_pinned_list\n  activePin.value = chat.arrayPin[0]\n})\n\n</script>\n\n<template>\n <Transition name=\"slide-down\">\n   <div v-if=\"chat.arrayPin.length\" class=\"w-full h-[60px] dark:bg-gray-700 bg-gray-200 border-t border-l border-black dark:border-opacity-20 border-opacity-10 z-10\">\n      <div class=\"flex items-center p-3 gap-x-2\">\n        <div class=\"w-[2px] h-[40px] bg-semiCyan\">\n        </div>\n        <div class=\"text-sm w-full\">\n          <p class=\"dark:text-semiCyan text-blueSemiLight tracking-wide\">{{$t('Закреплённое сообщение')}}</p>\n          <p>{{ activePin?.text.length > 30\n            ? activePin.text?.slice(0,30) + '...'\n            : activePin?.text}}\n          </p>\n        </div>\n        <div>\n          <button v-if=\"chat.arrayPin.length < 2\" @click=\"showWarnPinned = true\">\n            <svg class=\"fill-gray-500\" width=\"30px\" height=\"30px\" viewBox=\"0 -0.5 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" data-v-inspector=\"components/Chat/ChatContent.vue:55:17\"><path d=\"M6.96967 16.4697C6.67678 16.7626 6.67678 17.2374 6.96967 17.5303C7.26256 17.8232 7.73744 17.8232 8.03033 17.5303L6.96967 16.4697ZM13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697L13.0303 12.5303ZM11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303L11.9697 11.4697ZM18.0303 7.53033C18.3232 7.23744 18.3232 6.76256 18.0303 6.46967C17.7374 6.17678 17.2626 6.17678 16.9697 6.46967L18.0303 7.53033ZM13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303L13.0303 11.4697ZM16.9697 17.5303C17.2626 17.8232 17.7374 17.8232 18.0303 17.5303C18.3232 17.2374 18.3232 16.7626 18.0303 16.4697L16.9697 17.5303ZM11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697L11.9697 12.5303ZM8.03033 6.46967C7.73744 6.17678 7.26256 6.17678 6.96967 6.46967C6.67678 6.76256 6.67678 7.23744 6.96967 7.53033L8.03033 6.46967ZM8.03033 17.5303L13.0303 12.5303L11.9697 11.4697L6.96967 16.4697L8.03033 17.5303ZM13.0303 12.5303L18.0303 7.53033L16.9697 6.46967L11.9697 11.4697L13.0303 12.5303ZM11.9697 12.5303L16.9697 17.5303L18.0303 16.4697L13.0303 11.4697L11.9697 12.5303ZM13.0303 11.4697L8.03033 6.46967L6.96967 7.53033L11.9697 12.5303L13.0303 11.4697Z\" data-v-inspector=\"components/Chat/ChatContent.vue:57:19\"></path></svg>\n          </button>\n          <button v-else @click=\"chat.showPinnedWindow = !chat.showPinnedWindow\">\n            <svg class=\"stroke-gray-500\" width=\"30px\" height=\"30px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M13.6318 8.22382L13.2654 7.85744C11.7353 6.32736 10.9703 5.56232 10.1409 5.56299C9.86995 5.56321 9.60189 5.61847 9.35297 5.72542C8.59095 6.05283 8.19087 7.05807 7.39072 9.06855L7.33281 9.21406C7.10596 9.78403 6.99254 10.069 6.8104 10.2989C6.67221 10.4733 6.50589 10.6235 6.31829 10.7431C6.071 10.9009 5.77593 10.9846 5.18578 11.1521C4.27067 11.4118 3.81311 11.5417 3.61005 11.8186C3.45915 12.0244 3.39264 12.2802 3.42416 12.5334C3.46657 12.8742 3.80289 13.2105 4.47554 13.8832L7.60603 17.0137C8.27867 17.6863 8.61499 18.0226 8.95577 18.065C9.20903 18.0966 9.46475 18.03 9.67057 17.8791C9.94751 17.6761 10.0774 17.2185 10.3371 16.3034C10.5046 15.7133 10.5883 15.4182 10.7461 15.1709C10.8657 14.9833 11.0159 14.817 11.1903 14.6788C11.4202 14.4967 11.7052 14.3832 12.2751 14.1564L12.4206 14.0985C14.4311 13.2983 15.4364 12.8982 15.7638 12.1362C15.8707 11.8873 15.926 11.6192 15.9262 11.3483C15.9269 10.5189 15.1618 9.7539 13.6318 8.22382Z\" stroke-width=\"1.5\"/>\n              <path d=\"M3.34679 18.142L6.04053 15.4482\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n              <path d=\"M22 8H17\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n              <path d=\"M22 12.5H18\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n              <path d=\"M22 17H13\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n     <TheModal :type=\"'resize'\" v-if=\"showWarnPinned\" @showModal=\"showWarnPinned = false\">\n       <div>\n         <p class=\"text-lg tracking-wider\">{{ $t('Открепить это сообщение?') }}</p>\n       </div>\n       <div class=\"flex mt-4 gap-x-4 justify-center\">\n         <TheButton type=\"chat\" @click=\"showWarnPinned = false\">\n           {{ $t('Отмена') }}\n         </TheButton>\n         <TheButton type=\"chat\"\n                    @click=\"chat.makePinned({messages: [activePin.id]}).then(res=>{\n                       toast.info('Сообщение откреплено', {autoClose: 1500, theme: 'auto'})\n                     }); showWarnPinned = false\">\n           {{ $t('Открепить') }}\n         </TheButton>\n       </div>\n     </TheModal>\n   </div>\n </Transition>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\nimport {useChat} from \"~/stores/chat\";\n\nconst chat = useChat()\n</script>\n\n<template>\n   <Transition name=\"fade\">\n     <p v-if=\"chat.showDragInfo\" @dragleave.stop=\"chat.showDragInfo = false\" @drop.prevent @dragend.prevent class=\"bg-black flex bg-opacity-60 z-20 backdrop-blur-sm w-full h-full absolute top-0 bottom-0 right-0 justify-center items-center my-auto text-white tracking-widest\">\n       {{ $t('Перетащите сюда файлы для отправки') }}\n     </p>\n   </Transition>\n\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\nimport {useChat} from \"~/stores/chat\";\nimport {uploadFile} from \"~/hooks/ElemUI\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <label for=\"loadFiles\"\n         class=\"mx-auto absolute bottom-2 z-0 cursor-pointer flex justify-center\"\n         :class=\"{'right-12' : !chat.messageUpdate.file}\">\n    <Transition name=\"fade\">\n      <div v-if=\"!chat.messageUpdate.file && !chat.messageUpdate.id && !chat.recordingVoice\" class=\"flex justify-center w-full mx-auto ml-2\">\n        <svg class=\"fill-gray-500 dark:hover:fill-gray-300 hover:fill-gray-700 transition-all\" width=\"35px\" height=\"35px\"\n             viewBox=\"0 0 32 32\" version=\"1.1\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M5.469 16.688l8.75-8.75c0.094-0.094 0.844-0.844 2.031-1.25 1.656-0.531 3.344-0.094 4.688 1.25 1.375 1.344 1.781 3 1.25 4.656-0.375 1.188-1.156 2-1.25 2.094l-9.406 9.406c-1.625 1.625-5.688 3.719-9.438 0-3.719-3.719-1.594-7.813 0-9.406l10.094-10.125c0.375-0.375 0.969-0.375 1.344 0s0.375 0.969 0 1.344l-10.063 10.125c-0.156 0.125-3.313 3.406 0 6.719 3.219 3.219 6.375 0.344 6.719 0l9.406-9.438s0.531-0.531 0.781-1.281c0.313-1 0.094-1.875-0.781-2.75-1.875-1.875-3.688-0.313-4.031 0l-8.75 8.719c-0.313 0.313-0.531 0.844 0 1.375s1.031 0.281 1.344 0l6.063-6.063c0.375-0.344 1-0.344 1.344 0 0.375 0.375 0.375 1 0 1.375l-6.063 6.031c-0.844 0.813-2.563 1.469-4.031 0-1.5-1.469-0.844-3.219 0-4.031z\"></path>\n        </svg>\n      </div>\n      <div v-else-if=\"chat.messageUpdate.file\" class=\"flex justify-center items-center w-full mx-auto ml-3 mb-2\">\n        <svg class=\"fill-semiCyan hover:fill-blueSemiLight transition-all\" height=\"20px\" width=\"20px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"\n             viewBox=\"0 0 452.025 452.025\" xml:space=\"preserve\">\n        <g>\n          <g>\n            <path d=\"M147.912,363.325c-4.7-4.7-12.3-4.7-17,0c-4.7,4.7-4.7,12.3,0,17l13.6,13.6h-55.2c-35.9,0-65-29.2-65-65v-40.3\n              c0-6.6-5.4-12-12-12s-12,5.4-12,12v40.3c0,49.1,39.9,89,89,89h55.2l-13.6,13.6c-4.7,4.7-4.7,12.3,0,17c2.3,2.3,5.4,3.5,8.5,3.5\n              s6.1-1.2,8.5-3.5l34.1-34.1c4.7-4.7,4.7-12.3,0-17L147.912,363.325z\"/>\n            <path d=\"M210.312,0.025h-197.1c-6.6,0-12,5.4-12,12v197.1c0,6.6,5.4,12,12,12h197.1c6.6,0,12-5.4,12-12v-197.1\n              C222.312,5.425,217.012,0.025,210.312,0.025z M198.312,197.125h-173.1v-173.1h173.1V197.125z\"/>\n            <path d=\"M362.612,34.125h-55.2l13.6-13.6c4.7-4.7,4.7-12.3,0-17s-12.3-4.7-17,0l-34,34.1c-4.7,4.7-4.7,12.3,0,17l34.1,34.1\n              c2.3,2.3,5.4,3.5,8.5,3.5s6.1-1.2,8.5-3.5c4.7-4.7,4.7-12.3,0-17l-13.6-13.6h55.2c35.9,0,65,29.2,65,65v40.3c0,6.6,5.4,12,12,12\n              s12-5.4,12-12v-40.3C451.712,74.025,411.712,34.125,362.612,34.125z\"/>\n            <path d=\"M438.812,428.025c-3.2,0-6.3,1.3-8.5,3.5s-3.5,5.3-3.5,8.5c0,3.1,1.3,6.3,3.5,8.5s5.3,3.5,8.5,3.5s6.3-1.3,8.5-3.5\n              s3.5-5.3,3.5-8.5s-1.3-6.3-3.5-8.5C445.012,429.325,441.912,428.025,438.812,428.025z\"/>\n            <path d=\"M389.512,428.025c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S396.112,428.025,389.512,428.025z\"/>\n            <path d=\"M290.912,428.025c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S297.612,428.025,290.912,428.025z\"/>\n            <path d=\"M340.212,428.025c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S346.812,428.025,340.212,428.025z\"/>\n            <path d=\"M241.713,428.025c-3.2,0-6.3,1.3-8.5,3.5s-3.5,5.3-3.5,8.5c0,3.1,1.3,6.3,3.5,8.5s5.3,3.5,8.5,3.5c3.1,0,6.3-1.3,8.5-3.5\n              s3.5-5.3,3.5-8.5s-1.3-6.3-3.5-8.5S244.812,428.025,241.713,428.025z\"/>\n            <path d=\"M241.713,378.725c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S248.312,378.725,241.713,378.725z\"/>\n            <path d=\"M241.713,329.425c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S248.312,329.425,241.713,329.425z\"/>\n            <path d=\"M241.713,280.125c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S248.312,280.125,241.713,280.125z\"/>\n            <path d=\"M241.713,230.925c-3.2,0-6.3,1.3-8.5,3.5s-3.5,5.3-3.5,8.5s1.3,6.3,3.5,8.5s5.3,3.5,8.5,3.5c3.1,0,6.3-1.3,8.5-3.5\n              s3.5-5.3,3.5-8.5c0-3.1-1.3-6.3-3.5-8.5C247.912,232.125,244.812,230.925,241.713,230.925z\"/>\n            <path d=\"M389.512,230.925c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S396.112,230.925,389.512,230.925z\"/>\n            <path d=\"M340.212,230.925c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S346.812,230.925,340.212,230.925z\"/>\n            <path d=\"M290.912,230.925c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S297.612,230.925,290.912,230.925z\"/>\n            <path d=\"M438.812,230.925c-3.2,0-6.3,1.3-8.5,3.5s-3.5,5.3-3.5,8.5s1.3,6.3,3.5,8.5s5.3,3.5,8.5,3.5s6.3-1.3,8.5-3.5\n              s3.5-5.3,3.5-8.5c0-3.1-1.3-6.3-3.5-8.5C445.012,232.225,441.912,230.925,438.812,230.925z\"/>\n            <path d=\"M438.812,280.125c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S445.412,280.125,438.812,280.125z\"/>\n            <path d=\"M438.812,378.725c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S445.412,378.725,438.812,378.725z\"/>\n            <path d=\"M438.812,329.425c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S445.412,329.425,438.812,329.425z\"/>\n          </g>\n        </g>\n      </svg>\n      </div>\n    </Transition>\n    <input\n      id=\"loadFiles\"\n      @change=\"uploadFile($event.target.files[0], chat); chat.showUploadWindow = true \"\n      @input=\"$emit('update:modelValue', $event.target.value)\"\n      class=\"hidden\"\n      type=\"file\"\n    />\n  </label>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","import {ref, onMounted} from \"vue\";\nimport WaveSurfer from \"wavesurfer.js\";\n// @ts-ignore\nimport RecordPlugin from 'wavesurfer.js/dist/plugins/record.esm.js'\nimport {useChat} from \"~/stores/chat\";\n\ninterface IWave {\n  registerPlugin: (plugin: any )=> any\n  destroy: () => void\n}\ninterface IRecord{\n  isRecording: () => boolean,\n  isPaused: () => boolean,\n  startRecording: (options: { deviceId: any }) => Promise<void>\n  stopRecording: () => void\n  on: (event: string, callback: (blob: Blob) => void) => void\n}\n\nlet wavesurfer: IWave\nlet record: IRecord\nlet scrollingWaveform = false\nexport default function useRecorder() {\n  const createWaveSurfer = () => {\n    if (wavesurfer) {\n      wavesurfer.destroy()\n    }\n    wavesurfer = WaveSurfer.create({\n      container: '#mic',\n    })\n\n    record = wavesurfer.registerPlugin(RecordPlugin.create({scrollingWaveform, renderRecordedAudio: false}))\n    record.on('record-end', (blob: Blob) => {\n      const chatStore = useChat()\n      chatStore.file = URL.createObjectURL(blob)\n      const wavesurfer = WaveSurfer.create({\n        container: '#voiceMessageContainer',\n        waveColor: 'rgba(0, 0, 0, 0.6)',\n        progressColor: 'rgba(255, 255, 255)',\n        cursorWidth: 0,\n        barWidth: 4,\n        barAlign: 'bottom',\n        height: 20,\n        interact: true,\n        dragToSeek: true,\n        normalize: true,\n        url: chatStore.file,\n      })\n    })\n  }\n  {\n    RecordPlugin.getAvailableAudioDevices().then((devices: MediaDeviceInfo[]) => {\n      devices.forEach((device: MediaDeviceInfo) => {\n        const option = document.createElement('option');\n        option.value = device.deviceId;\n        option.text = device.label || device.deviceId;\n      });\n    });\n  }\n  const recButton = () => {\n    if (record && (record.isRecording() || record.isPaused())) {\n      record.stopRecording()\n      return\n    }\n    if(record) {\n      record.startRecording({deviceId: null}).then(() => {\n        return false\n      })\n    }\n  }\n  onMounted(() => {\n    createWaveSurfer()\n  })\n  return{recButton, createWaveSurfer}\n}","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {clearTimer} from \"~/hooks/ElemUI\";\nimport useRecorder from \"~/hooks/Recordings\";\nconst chat = useChat()\nconst threshold = 500\nconst isLongClick = ref(false)\nconst recorder = useRecorder()\nconst startClick = () => {\n  chat.voiceTimer = 0\n  chat.clickerTimeout = null\n  increaseTime()\n}\nconst increaseTime = () => {\n  chat.clickerTimeout = setTimeout(() => {\n    chat.recordingVoice = true\n    chat.voiceTimer++\n    increaseTime()\n  }, 200)\n}\nconst endClick = () => {\n  recorder.createWaveSurfer()\n  recorder.recButton()\n  clearTimer(chat.recordingVoice = false, chat.clickerTimeout)\n  isLongClick.value = chat.voiceTimer >= threshold / 1000\n  if (!isLongClick.value) {\n\n    setTimeout(() => {\n      chat.showVoiceInfo = true\n    }, 0)\n    setTimeout(() => {\n      chat.showVoiceInfo = false\n    }, 3000)\n  }\n}\n\n</script>\n\n<template>\n  <div>\n    <div class=\"absolute\" id=\"mic\"/>\n    <div class=\"absolute right-2 bottom-0.5 transition-all\"\n         :class=\"{'rounded-full pt-1 px-1 bg-blueSemiLight' : chat.recordingVoice}\" >\n      <button @mousedown=\"startClick\"\n              @mouseup=\"endClick\">\n        <svg class=\"fill-gray-500 dark:hover:fill-gray-300 hover:fill-gray-700 transition-all\"\n             :class=\"{'fill-white hover:!fill-white' : chat.recordingVoice}\" width=\"35px\" height=\"35px\"\n             viewBox=\"0 0 24 24\" fill=\"none\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                d=\"M12 4.5C10.314 4.5 9 5.80455 9 7.35V12.15C9 13.6955 10.314 15 12 15C13.686 15 15 13.6955 15 12.15L15 7.35C15 5.80455 13.686 4.5 12 4.5ZM7.5 7.35C7.5 4.919 9.54387 3 12 3C14.4561 3 16.5 4.919 16.5 7.35L16.5 12.15C16.5 14.581 14.4561 16.5 12 16.5C9.54387 16.5 7.5 14.581 7.5 12.15V7.35ZM6.75 12.75C6.75 15.1443 9.0033 17.25 12 17.25C14.9967 17.25 17.25 15.1443 17.25 12.75H18.75C18.75 15.9176 16.0499 18.3847 12.75 18.7129V21H11.25V18.7129C7.95007 18.3847 5.25 15.9176 5.25 12.75H6.75Z\"/>\n        </svg>\n      </button>\n      <audio ref=\"audioPlayer\"></audio>\n    </div>\n  </div>\n\n</template>\n\n<style scoped lang=\"scss\">\n#mic > .wrapper {\n  border-radius: 50%;\n  overflow: hidden;\n  position: absolute;\n}\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {useRoute} from \"vue-router\";\nimport ChatContentUser from \"~/components/Chat/ChatContent/ChatContentUser.vue\";\nimport TheChatPreloader from \"~/components/UI/ThePreloader.vue\";\nimport TheTextareaAutosize from \"~/components/UI/TheTextareaAutosize.vue\";\nimport TheChatContentPinned from \"~/components/Chat/ChatNav/UI/TheChatContentPinned.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheTextContent from \"~/components/UI/TheTextContent.vue\";\nimport TheCheckbox from \"~/components/UI/TheCheckbox.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport ChatUploadInfo from \"~/components/Chat/UI/Upload/ChatUploadInfo.vue\";\nimport ChatUploadFile from \"~/components/Chat/UI/Upload/ChatUploadFile.vue\";\nimport ChatVoiceContent from \"~/components/Chat/UI/Voice/ChatVoiceContent.vue\";\nimport {clearTimer} from \"~/hooks/ElemUI\";\nimport AudioRecorder from \"~/components/Chat/UI/Voice/AudioRecorder.vue\";\n\nconst route = useRoute()\nconst chat = useChat()\nconst voiceMessageContainer = ref<HTMLElement | null>(null)\ndefineProps({\n  messageId: {\n    type: Number,\n    default: null\n  },\n  showArrowBtn: {\n    type: Boolean,\n    default: false\n  },\n  showForwardedSetting: {\n    type: Boolean,\n    default: false\n  },\n  check: {\n    type: Boolean,\n    default: true\n  },\n\n})\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (event.key === 'Enter') {\n    if (event.shiftKey) {\n      chat.messageText += '\\n'\n      event.preventDefault()\n    } else {\n      handleSubmit()\n    }\n  }\n}\nconst handleKeyDownUpdate = (event: KeyboardEvent) => {\n  if (event.key === 'Enter') {\n    if (event.shiftKey) {\n      chat.messageUpdate.updateText += '\\n'\n      event.preventDefault()\n    } else {\n      handleUpdate()\n    }\n  }\n}\nconst handleSubmit = () => {\n  if (chat.messageText?.length > 0 && chat.messageText?.trim() !== '' || chat.messageForwarded.id) {\n    chat.createMessage({id: chat.get_user_chat.id, text: chat.messageText, message_id: chat.messageForwarded.id})\n    chat.messageText = ''\n  } else {\n    chat.messageForwarded = {};\n    chat.messageText = '';\n  }\n}\n\nconst handleUpdate = () => {\n  if (chat.messageUpdate.updateText?.length > 0 && chat.messageUpdate.id) {\n    chat.updateMessage({id: chat.messageUpdate.id, text: chat.messageUpdate.updateText}).then(res => {\n      chat.messageUpdate = {}\n    })\n  } else {\n    chat.messageUpdate = {}\n  }\n}\n\n\n</script>\n\n<template>\n  <div class=\"w-full relative h-[92%]\" @mouseup.stop=\"clearTimer(chat.recordingVoice = false, chat.clickerTimeout)\">\n    <TheChatPreloader v-if=\"!chat.userChat.id\"></TheChatPreloader>\n    <div v-else class=\"flex relative h-full flex-col\" :class=\"{'z-20' : chat.showDragInfo}\">\n      <TheChatContentPinned/>\n      <ChatContentUser></ChatContentUser>\n      <form class=\"flex mt-auto relative\" @submit.prevent>\n        <div class=\"flex flex-col h-full w-full\">\n          <Transition name=\"slide-up\">\n            <div v-if=\"chat.messageUpdate.id || chat.messageForwarded.id || chat.messageReplied.id\"\n                 class=\"dark:bg-gray-700 flex justify-between items-center bg-gray-200 border-l border-black dark:border-opacity-20 border-opacity-10  w-full h-[50px] max-sm:h-[70px]\">\n              <div class=\"flex items-center\">\n                <div class=\"ml-2\">\n                  <svg v-if=\"chat.messageUpdate.id\" class=\"fill-semiCyan\" width=\"25px\" height=\"25px\"\n                       viewBox=\"0 0 16 16\"\n                       xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      d=\"M13.8 2.2a2.51 2.51 0 0 0-3.54 0l-6.9 6.91-1.76 3.62a1.26 1.26 0 0 0 1.12 1.8 1.23 1.23 0 0 0 .55-.13l3.62-1.76 6-6 .83-.82.06-.06a2.52 2.52 0 0 0 .02-3.56zm-.89.89a1.25 1.25 0 0 1 0 1.77l-1.77-1.77a1.24 1.24 0 0 1 .86-.37 1.22 1.22 0 0 1 .91.37zM2.73 13.27 4.29 10 6 11.71zm4.16-2.4L5.13 9.11 10.26 4 12 5.74z\"/>\n                  </svg>\n                  <svg v-if=\"chat.messageForwarded.id\" @click=\"showForwardedSetting = true\" class=\"stroke-semiCyan\"\n                       width=\"25px\" height=\"25px\"\n                       viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      d=\"M18.48 18.5368H21M4.68 12L3 12.044M4.68 12C4.68 13.3255 5.75451 14.4 7.08 14.4C8.40548 14.4 9.48 13.3255 9.48 12C9.48 10.6745 8.40548 9.6 7.08 9.6C5.75451 9.6 4.68 10.6745 4.68 12ZM10.169 12.0441H21M12.801 5.55124L3 5.55124M21 5.55124H18.48M3 18.5368H12.801M17.88 18.6C17.88 19.9255 16.8055 21 15.48 21C14.1545 21 13.08 19.9255 13.08 18.6C13.08 17.2745 14.1545 16.2 15.48 16.2C16.8055 16.2 17.88 17.2745 17.88 18.6ZM17.88 5.4C17.88 6.72548 16.8055 7.8 15.48 7.8C14.1545 7.8 13.08 6.72548 13.08 5.4C13.08 4.07452 14.1545 3 15.48 3C16.8055 3 17.88 4.07452 17.88 5.4Z\"\n                      stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n                  </svg>\n                  <svg v-if=\"chat.messageReplied.id\" width=\"25px\" height=\"25px\" viewBox=\"-0.5 0 28 28\" version=\"1.1\"\n                       xmlns=\"http://www.w3.org/2000/svg\">\n                    <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                      <g class=\"fill-semiCyan\" id=\"Icon-Set-Filled\" transform=\"translate(-102.000000, -1195.000000)\">\n                        <path\n                          d=\"M113.983,1202.01 L113.983,1196.11 C114.017,1195.81 113.936,1195.51 113.708,1195.28 C113.312,1194.89 112.67,1194.89 112.274,1195.28 L102.285,1206.24 C102.074,1206.45 101.984,1206.72 101.998,1207 C101.984,1207.27 102.074,1207.55 102.285,1207.76 L112.219,1218.65 C112.59,1218.97 113.271,1219.15 113.708,1218.71 C113.935,1218.49 114.035,1218.29 114,1218 L114,1212 C120.6,1212 126.569,1216.75 127.754,1223.01 C128.552,1221.17 129,1219.15 129,1217.02 C129,1208.73 122.276,1202.01 113.983,1202.01\"\n                          id=\"reply\"/>\n                      </g>\n                    </g>\n                  </svg>\n                </div>\n                <div class=\"py-2 px-4 text-sm tracking-widest\">\n                  <div v-if=\"chat.messageUpdate.id\">\n                    <p class=\"text-semiCyan\">{{ $t('Редактирование') }}</p>\n                  </div>\n                  <div v-if=\"chat.messageForwarded.id\">\n                    <p class=\"text-semiCyan\">\n                      {{ chat.checkboxForwarded ? chat.messageForwarded.sender.first_name + ' ' + chat.messageForwarded.sender.last_name : $t('Имя отправителя скрыто')\n                      }}</p>\n                  </div>\n                  <div v-if=\"chat.messageReplied.id\">\n                    <p class=\"text-semiCyan text-[12px]\">\n                      {{ $t('В ответ') + ' ' + chat.messageReplied.sender.first_name + ' ' + chat.messageReplied.sender.last_name }}</p>\n                    <p class=\"\">\n                      {{ chat.messageReplied.text.length > 20 ? chat.messageReplied.text.slice(0, 20) + '...' : chat.messageReplied.text\n                      }}</p>\n                  </div>\n                  <div>\n                    <p v-if=\"chat.messageUpdate.id\"><span v-if=\"chat.messageUpdate.file_name\"\n                                                          class=\"text-[12px] text-gray-400\">{{ chat.messageUpdate.file_name.slice(0, 20) + '...' + chat.messageUpdate.file_name.substr(-6) + ',' }}</span>\n                      {{ chat.messageUpdate.text?.length > 50 ? chat.messageUpdate?.text.slice(0, 50) + '...' : chat.messageUpdate?.text }}\n                    </p>\n                    <p v-else>\n                      {{ chat.messageForwarded.text?.length > 50 ? chat.messageForwarded?.text.slice(0, 50) + '...' : chat.messageForwarded?.text }}</p>\n                  </div>\n\n                </div>\n              </div>\n              <div class=\"mr-4 cursor-pointer\"\n                   @click=\"chat.messageUpdate = {}; chat.messageForwarded = {}; chat.messageReplied = {}\">\n                <svg class=\"fill-gray-500\" width=\"30px\" height=\"30px\" viewBox=\"0 -0.5 25 25\" fill=\"none\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M6.96967 16.4697C6.67678 16.7626 6.67678 17.2374 6.96967 17.5303C7.26256 17.8232 7.73744 17.8232 8.03033 17.5303L6.96967 16.4697ZM13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697L13.0303 12.5303ZM11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303L11.9697 11.4697ZM18.0303 7.53033C18.3232 7.23744 18.3232 6.76256 18.0303 6.46967C17.7374 6.17678 17.2626 6.17678 16.9697 6.46967L18.0303 7.53033ZM13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303L13.0303 11.4697ZM16.9697 17.5303C17.2626 17.8232 17.7374 17.8232 18.0303 17.5303C18.3232 17.2374 18.3232 16.7626 18.0303 16.4697L16.9697 17.5303ZM11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697L11.9697 12.5303ZM8.03033 6.46967C7.73744 6.17678 7.26256 6.17678 6.96967 6.46967C6.67678 6.76256 6.67678 7.23744 6.96967 7.53033L8.03033 6.46967ZM8.03033 17.5303L13.0303 12.5303L11.9697 11.4697L6.96967 16.4697L8.03033 17.5303ZM13.0303 12.5303L18.0303 7.53033L16.9697 6.46967L11.9697 11.4697L13.0303 12.5303ZM11.9697 12.5303L16.9697 17.5303L18.0303 16.4697L13.0303 11.4697L11.9697 12.5303ZM13.0303 11.4697L8.03033 6.46967L6.96967 7.53033L11.9697 12.5303L13.0303 11.4697Z\"/>\n                </svg>\n              </div>\n            </div>\n          </Transition>\n          <AudioRecorder></AudioRecorder>\n          <div class=\"bg-gray-600\">\n            <div id=\"voiceMessageContainer\" class=\"z-0 absolute h-8 w-10/12 bg-semiCyan mx-auto rounded-full overflow-hidden top-0 left-2 right-10 mb-1 mt-2\"/>\n            <TheTextareaAutosize\n              v-if=\"chat.messageUpdate.id\"\n              v-model:modelValue=\"chat.messageUpdate.updateText\"\n              @keydown=\"handleKeyDownUpdate\"\n              class=\"h-[50px] -mb-2 pr-24 pl-5\"\n              :class=\"{'!pl-12' : chat.messageUpdate.id}\"\n              placeholder=\"Написать сообщение...\"/>\n            <TheTextareaAutosize\n              v-else-if=\"!chat.messageUpdate.id\"\n              v-model:modelValue=\"chat.messageText\"\n              @keydown=\"handleKeyDown\"\n              class=\"h-[50px] -mb-2 pr-24 pl-5 \"\n              placeholder=\"Написать сообщение...\"\n             />\n            <ChatUploadFile v-if=\"!chat.messageUpdate.id || !chat.messageForwarded.id\"/>\n            <Transition name=\"fade\">\n              <button\n                v-if=\"chat.messageText?.length > 0 && chat.messageText?.trim() !== '' || chat.messageForwarded.id \"\n                @click=\" chat.messageText?.length > 0 || chat.messageForwarded.id ? chat.createMessage({id: chat.get_user_chat.id, text: chat.messageText, message_id: chat.messageForwarded.id}).then(res=> {chat.messageText = ''}): chat.messageText\"\n                class=\"absolute right-2 bottom-2\">\n                <div>\n                  <svg width=\"35px\" height=\"35px\" viewBox=\"0 0 24 24\" fill=\"cyan\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      d=\"M11.5003 12H5.41872M5.24634 12.7972L4.24158 15.7986C3.69128 17.4424 3.41613 18.2643 3.61359 18.7704C3.78506 19.21 4.15335 19.5432 4.6078 19.6701C5.13111 19.8161 5.92151 19.4604 7.50231 18.7491L17.6367 14.1886C19.1797 13.4942 19.9512 13.1471 20.1896 12.6648C20.3968 12.2458 20.3968 11.7541 20.1896 11.3351C19.9512 10.8529 19.1797 10.5057 17.6367 9.81135L7.48483 5.24303C5.90879 4.53382 5.12078 4.17921 4.59799 4.32468C4.14397 4.45101 3.77572 4.78336 3.60365 5.22209C3.40551 5.72728 3.67772 6.54741 4.22215 8.18767L5.24829 11.2793C5.34179 11.561 5.38855 11.7019 5.407 11.8459C5.42338 11.9738 5.42321 12.1032 5.40651 12.231C5.38768 12.375 5.34057 12.5157 5.24634 12.7972Z\"\n                      stroke=\"#000000\" stroke-width=\"0.6\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n              <button\n                @click=\"chat.updateMessage({id: chat.messageUpdate.id, text: chat.messageUpdate.updateText}).then(res=>{ chat.messageUpdate = {}})\"\n                v-else-if=\"chat.messageUpdate.updateText?.length > 0 && chat.messageUpdate.updateText?.trim() !== '' || chat.messageUpdate.file\"\n                class=\"absolute right-2 bottom-2\">\n                <div>\n                  <svg class=\"fill-semiCyan\" width=\"40px\" height=\"40px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                       xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                          d=\"M15.4933 6.93502C15.8053 7.20743 15.8374 7.68122 15.565 7.99325L7.70786 16.9933C7.56543 17.1564 7.35943 17.25 7.14287 17.25C6.9263 17.25 6.72031 17.1564 6.57788 16.9933L3.43502 13.3933C3.16261 13.0812 3.19473 12.6074 3.50677 12.335C3.8188 12.0626 4.29259 12.0947 4.565 12.4068L7.14287 15.3596L14.435 7.00677C14.7074 6.69473 15.1812 6.66261 15.4933 6.93502Z\"></path>\n                  </svg>\n                </div>\n              </button>\n              <ChatVoiceContent  v-else/>\n            </Transition>\n          </div>\n        </div>\n      </form>\n      <ChatUploadInfo @dragleave.stop=\"chat.showDragInfo = false\"/>\n    </div>\n    <TheModal v-if=\"showForwardedSetting\" :type=\"'resizeInfoWindow'\" class=\"p-4\"\n              @showModal=\"showForwardedSetting = false\">\n      <div class=\"my-2\">\n        <TheTextContent>{{ $t('Переслать сообщение') }}</TheTextContent>\n        <div class=\"px-4 py-2 !font-light\">\n          <div>\n            <p>{{ $t('Вы можете убрать имя отправителя. В этом случае сообщение будет выглядеть как Ваше.') }}</p>\n            <div>\n              <TheCheckbox :t=\"'checkboxChat'\" :checked=\"check\"/>\n            </div>\n            <button class=\"text-sm font-light text-semiCyan hover:underline tracking-wider\"\n                    @click=\"showForwardedSetting = false; chat.showSendWindow = true\">\n              {{ $t('Изменить получателя') }}\n            </button>\n          </div>\n          <div class=\"flex justify-end\">\n            <TheButton :type=\"'chat'\" @click=\"showForwardedSetting = false;\">{{ $t('Готово') }}</TheButton>\n          </div>\n        </div>\n      </div>\n    </TheModal>\n\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\nimport {useChat} from \"~/stores/chat\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport ChatContentContextMenuItem from \"~/components/Chat/ChatContent/ChatContentContextMenuItem.vue\";\n\nconst chat = useChat()\nconst currentUser = useAuthStore()\nconst {x, y} = useMouse()\nconst {y: windowY} = useWindowScroll()\n\nconst isOpen = ref(false)\nconst virtualElement = ref({getBoundingClientRect: () => ({})})\nconst scrollPosition = ref(null)\n\nconst pinned_block = ref({\n  scrollTop: '',\n  scrollHeight: '',\n  clientHeight: '',\n  root: null\n})\n\nfunction onScrolls({target: {scrollTop, clientHeight, scrollHeight}}) {\n  scrollPosition.value = scrollTop\n  if (scrollTop === 0) {\n    page.value = Number(page.value) + 1\n    chat?.loadUserChat({page: page.value, limit: 100, id: route.params.id})\n  }\n}\n\nonMounted(() => {\n  setTimeout(() => {\n    const el = pinned_block.value\n    el.scrollTop = el.scrollHeight\n  }, 500)\n})\nwatchEffect(() => {\n  setTimeout(() => {\n    const el = pinned_block.value\n    el.scrollTop = el?.scrollHeight\n  }, 500)\n})\n</script>\n\n<template>\n  <div class=\"overflow-x-hidden gap-y-2 check overflow-y-auto\" @scroll=\"onScrolls\"\n       ref=\"pinned_block\" id=\"pinned_block\">\n    <UContextMenu @contextmenu.prevent v-model=\"isOpen\" :virtual-element=\"virtualElement\">\n      <div class=\"\">\n        <ChatContentContextMenuItem>\n          <template v-slot:ContextMenuSvg>\n            <svg class=\"stroke-black dark:stroke-white\" width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path data-v-a06cf116=\"\"\n                    d=\"M21.2799 6.40005L11.7399 15.94C10.7899 16.89 7.96987 17.33 7.33987 16.7C6.70987 16.07 7.13987 13.25 8.08987 12.3L17.6399 2.75002C17.8754 2.49308 18.1605 2.28654 18.4781 2.14284C18.7956 1.99914 19.139 1.92124 19.4875 1.9139C19.8359 1.90657 20.1823 1.96991 20.5056 2.10012C20.8289 2.23033 21.1225 2.42473 21.3686 2.67153C21.6147 2.91833 21.8083 3.21243 21.9376 3.53609C22.0669 3.85976 22.1294 4.20626 22.1211 4.55471C22.1128 4.90316 22.0339 5.24635 21.8894 5.5635C21.7448 5.88065 21.5375 6.16524 21.2799 6.40005V6.40005Z\"\n                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\"\n                    d=\"M11 4H6C4.93913 4 3.92178 4.42142 3.17163 5.17157C2.42149 5.92172 2 6.93913 2 8V18C2 19.0609 2.42149 20.0783 3.17163 20.8284C3.92178 21.5786 4.93913 22 6 22H17C19.21 22 20 20.2 20 18V13\"\n                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            </svg>\n          </template>\n          <template v-slot:ContextMenuText>{{ $t('Изменить') }}</template>\n        </ChatContentContextMenuItem>\n        <ChatContentContextMenuItem>\n          <template v-slot:ContextMenuSvg>\n            <svg class=\"dark:fill-white\" xmlns=\"http://www.w3.org/2000/svg\"\n                 width=\"22px\" height=\"22px\" viewBox=\"0 0 261.811 261.811\"\n                 xml:space=\"preserve\">\n                <g>\n                  <g>\n                    <path d=\"M24.715,261.811c-5.492,0-10.645-2.133-14.521-6.01c-8.011-8.017-8.011-21.054-0.006-29.064\n                      l70.375-70.372L38.51,113.785c-7.073-7.179-7.928-18.303-2.039-26.466c0.855-1.184,21.314-28.839,58.964-28.839\n                      c2.224,0,4.492,0.101,6.756,0.295L180.62,3.597c8.103-5.729,20.081-4.48,26.863,2.796l44.675,48.037\n                      c6.919,7.436,7.319,19.006,0.926,26.906l-55.882,69.151c1.979,23.759,1.052,63.069-23.901,77.725\n                      c-7.959,4.666-18.578,3.26-25.021-3.282l-38.837-39.316l-70.206,70.183C35.365,259.678,30.208,261.811,24.715,261.811z\n                       M95.43,70.194c-31.735,0-48.763,23.009-49.472,23.987c-2.53,3.502-2.159,8.291,0.883,11.376l50.227,50.865l-78.6,78.594\n                      c-3.442,3.448-3.442,9.058,0,12.505c3.319,3.328,9.157,3.328,12.482,0l78.531-78.52l47.122,47.7\n                      c2.762,2.813,7.325,3.407,10.761,1.412c20.957-12.316,19.539-52.303,17.961-68.919l-0.229-2.373l58.878-72.854\n                      c2.745-3.402,2.573-8.371-0.406-11.567l-44.663-48.031c-2.904-3.116-8.062-3.671-11.545-1.212l-82.042,57.726l-2.213-0.251\n                      C100.536,70.34,97.952,70.194,95.43,70.194z\"/>\n                  </g>\n                </g>\n            </svg>\n          </template>\n          <template v-slot:ContextMenuText>{{ $t('Закрепить') }}</template>\n        </ChatContentContextMenuItem>\n        <ChatContentContextMenuItem>\n          <template v-slot:ContextMenuSvg>\n            <svg class=\"dark:fill-white fill-black\" width=\"22px\" height=\"22px\" viewBox=\"0 0 256 256\" id=\"Flat\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M50.96,37.30957A4,4,0,0,0,45.04,42.69043l38.59424,42.4541c-11.416-2.39062-31.02295-2.76172-51.54444,13.79248a12.01279,12.01279,0,0,0-.96484,17.84424L82.34326,168,45.17188,205.17139a3.99992,3.99992,0,1,0,5.65625,5.65722L88,173.65674l51.02051,51.021a12.00814,12.00814,0,0,0,8.49219,3.51954q.42041,0,.84277-.02979a11.97039,11.97039,0,0,0,8.73047-4.74512c6.33252-8.4165,15.40625-23.479,15.38379-40.55859L205.04,218.69043a4,4,0,1,0,5.91992-5.38086Zm99.7334,181.30322a3.99357,3.99357,0,0,1-6.01563.40821L36.78125,111.124a4.01376,4.01376,0,0,1,.332-5.96045c27.17188-21.91943,52.06543-10.09375,53.09766-9.58593a3.99477,3.99477,0,0,0,3.08984.20019l69.71729,76.689C168.36816,191.2041,157.64355,209.374,150.69336,218.61279ZM232.68652,96a11.92292,11.92292,0,0,1-3.51562,8.48584l-41.4043,41.40381a3.99975,3.99975,0,1,1-5.65625-5.65674l41.4043-41.4043a3.99915,3.99915,0,0,0,0-5.65674L162.8291,32.48535a4.00621,4.00621,0,0,0-5.6582.00049l-37.97559,37.9751a3.99957,3.99957,0,1,1-5.65625-5.65625l37.97559-37.97608a12.01526,12.01526,0,0,1,16.9707-.00049L229.1709,87.51465A11.921,11.921,0,0,1,232.68652,96Z\"/>\n            </svg>\n          </template>\n          <template v-slot:ContextMenuText>{{ $t('Открепить') }}</template>\n        </ChatContentContextMenuItem>\n        <ChatContentContextMenuItem>\n          <template v-slot:ContextMenuSvg>\n            <svg class=\"dark:stroke-white stroke-black\" width=\"23px\" height=\"23px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path data-v-a06cf116=\"\" d=\"M10 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M14 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M4 7H20\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10\"\n                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\"\n                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            </svg>\n          </template>\n          <template v-slot:ContextMenuText>{{ $t('Удалить') }}</template>\n        </ChatContentContextMenuItem>\n      </div>\n    </UContextMenu>\n    <div class=\"p-2 \">\n      <ChatChatContentUserElem class=\"dark:text-white text-black\"\n                               v-for=\"item in chat.arrayPin\"\n                               :item=\"item\"\n                               @contextmenu.prevent=\"()=> {\n                                const top = unref(y) - unref(windowY)\n                                const left = unref(x)\n                                virtualElement.getBoundingClientRect = () => ({\n                                  width: 0,\n                                  height: 0,\n                                  top,\n                                  left\n                                })\n                                isOpen = true\n                              }\"\n      >\n        <template v-slot:userImage>\n          <img class=\"w-[30px] h-[30px] rounded-full\"\n               :src=\"item.sender.id === currentUser.user?.id ? currentUser.get_server_domain + currentUser.user.photo_url : currentUser.get_server_domain + item.sender.photo\"\n               alt=\"\">\n        </template>\n        <template v-slot:userMessage>{{ item.text }}</template>\n        <template v-slot:userDate>{{ new Date(item.created_at).toLocaleTimeString().slice(0, 5) }}</template>\n      </ChatChatContentUserElem>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <div class=\"w-full h-[60px] dark:bg-gray-700 bg-gray-200 border-t border-l border-black dark:border-opacity-20 border-opacity-10 z-10\">\n    <div class=\"p-4 flex items-center gap-x-3 cursor-pointer\" @click=\"chat.showPinnedWindow = false\">\n      <div>\n        <svg class=\"dark:stroke-white stroke-black\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M14.9998 19.9201L8.47984 13.4001C7.70984 12.6301 7.70984 11.3701 8.47984 10.6001L14.9998 4.08008\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n      <p class=\"text-black dark:text-white tracking-wider\">{{chat.arrayPin.length + ' ' + $t('закреплённых сообщения')}}</p>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {toast} from \"vue3-toastify\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\n\nconst chat = useChat()\ndefineProps({\n  showWarnPinned: {\n    type: Boolean,\n    default: false\n  }\n})\n</script>\n\n<template>\n  <div v-if=\"chat.showPinnedWindow\" @click=\"showWarnPinned = true\"\n       class=\"w-full h-[50px] dark:bg-gray-700 bg-gray-200 border-t border-l border-black dark:border-opacity-20 border-opacity-10 z-10 hover:dark:bg-gray-600 cursor-pointer hover:bg-gray-100\">\n    <button class=\"flex mx-auto mt-4 uppercase text-[12px] tracking-widest text-blueSemiLight font-bold\">\n      {{ $t('Открепить') + ' ' + chat.arrayPin.length + ' ' + $t('сообщения') }}\n    </button>\n    <TheModal :type=\"'resize'\" v-if=\"showWarnPinned\" @showModal=\"showWarnPinned = false\">\n      <div>\n        <p class=\"text-lg  tracking-wider\">{{ $t('Открепить все сообщения?') }}</p>\n      </div>\n      <div class=\"flex mt-4 gap-x-4 justify-center\">\n        <TheButton type=\"chat\" @click=\"showWarnPinned = false\">\n          {{ $t('Отмена') }}\n        </TheButton>\n        <TheButton type=\"chat\"\n                   @click=\"chat.makePinned({messages: chat.arrayPin.filter(e=>e.id).map(e=>e.id)}).then(res=> toast.info('Сообщения откреплены', {autoClose: 1500, theme: 'auto'})); showWarnPinned = false; chat.showPinnedWindow = false\">\n          {{ $t('Открепить') }}\n        </TheButton>\n      </div>\n    </TheModal>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport TheChatContentPinnedMessages from \"~/components/Chat/UI/Pinned/TheChatContentPinnedMessages.vue\";\nimport TheChatContentPinnedHeader from \"~/components/Chat/UI/Pinned/TheChatContentPinnedHeader.vue\";\nimport TheChatContentPinnedFooter from \"~/components/Chat/UI/Pinned/TheChatContentPinnedFooter.vue\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <div\n    class=\"absolute z-[11] top-0 dark:bg-[#1F2937] bg-gray-300 right-0 h-full text-white transition-all duration-200\"\n    :class=\"{'w-full' : chat.showPinnedWindow, 'w-0' : !chat.showPinnedWindow}\">\n    <div class=\"flex flex-col h-full\">\n      <TheChatContentPinnedHeader/>\n      <TheChatContentPinnedMessages class=\"h-full\"/>\n      <TheChatContentPinnedFooter></TheChatContentPinnedFooter>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\n</script>\n\n<template>\n  <div>\n    <div class=\"text-sm flex items-center gap-x-4 dark:hover:bg-gray-500 hover:bg-gray-300 px-3 py-1 cursor-pointer\">\n      <div>\n        <slot name=\"chatWindowSettingContentSvg\"></slot>\n      </div>\n      <p><slot name=\"chatWindowSettingContentText\"/></p>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport {toast} from \"vue3-toastify\";\nimport ChatWindowSettingContentHeadersElems\n  from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeaderUI/ChatWindowSettingContentHeadersElems.vue\";\nimport ChatWindowSettingContentHeaderChange\n  from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeaderUI/ChatWindowSettingContentHeaderChange.vue\";\nimport ChatUserCheckbox from \"~/components/Chat/UI/ChatUserCheckbox.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\n\nconst loadAuthStore = useAuthStore()\nconst route = useRoute()\nconst router = useRouter()\nconst chat = useChat()\ndefineProps({\n  showGroupAdd: {\n    type: Boolean,\n    default: false\n  }\n})\n</script>\n\n<template>\n  <div class=\"p-4 flex justify-between tracking-wider items-center relative\">\n    <p class=\"tracking-widest\">{{ $t('Информация о группе') }}</p>\n    <div class=\"flex gap-x-4 items-center \">\n      <div class=\"p-1 rounded-full transition-all duration-200 cursor-pointer dark:hover:bg-gray-500 hover:bg-gray-200\"\n           :class=\"{'dark:bg-gray-500 bg-gray-200' : chat.showSettingChat}\"\n           @click.stop=\"chat.showSettingChat = !chat.showSettingChat\">\n        <svg class=\"dark:stroke-white stroke-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M12 12H12.01M12 6H12.01M12 18H12.01M13 12C13 12.5523 12.5523 13 12 13C11.4477 13 11 12.5523 11 12C11 11.4477 11.4477 11 12 11C12.5523 11 13 11.4477 13 12ZM13 18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18C11 17.4477 11.4477 17 12 17C12.5523 17 13 17.4477 13 18ZM13 6C13 6.55228 12.5523 7 12 7C11.4477 7 11 6.55228 11 6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6Z\"\n            stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n      <Transition name=\"slide-down\" @click.stop>\n        <div v-if=\"chat.showSettingChat\"\n             class=\"absolute top-10 right-16 py-1 dark:bg-gray-800 bg-gray-200 flex flex-col gap-y-2\">\n          <ChatWindowSettingContentHeadersElems @click=\"$emit('showGroupAdd'); chat.showSettingChat = false;\">\n            <template v-slot:chatWindowSettingContentSvg>\n              <svg class=\"stroke-black dark:stroke-white\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n                <title>i</title>\n                <g id=\"Complete\">\n                  <g id=\"user-add\">\n                    <g>\n                      <path d=\"M17,21V19a4,4,0,0,0-4-4H5a4,4,0,0,0-4,4v2\" fill=\"none\" stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\" stroke-width=\"2\"/>\n                      <circle cx=\"9\" cy=\"7\" r=\"4\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                              stroke-width=\"2\"/>\n                      <line x1=\"17\" y1=\"11\" x2=\"23\" y2=\"11\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                            stroke-width=\"2\"/>\n                      <line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                            stroke-width=\"2\"/>\n                    </g>\n                  </g>\n                </g>\n              </svg>\n            </template>\n            <template v-slot:chatWindowSettingContentText>\n              {{ $t('Добавить участников') }}\n            </template>\n          </ChatWindowSettingContentHeadersElems>\n          <ChatWindowSettingContentHeadersElems\n            @click=\"chat.showChatChangeInfo = true; chat.showSettingChat = false; chat.updateChatName = chat.userChat.name\">\n            <template v-slot:chatWindowSettingContentSvg>\n              <svg class=\"stroke-black dark:stroke-white\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M18.48 18.5368H21M4.68 12L3 12.044M4.68 12C4.68 13.3255 5.75451 14.4 7.08 14.4C8.40548 14.4 9.48 13.3255 9.48 12C9.48 10.6745 8.40548 9.6 7.08 9.6C5.75451 9.6 4.68 10.6745 4.68 12ZM10.169 12.0441H21M12.801 5.55124L3 5.55124M21 5.55124H18.48M3 18.5368H12.801M17.88 18.6C17.88 19.9255 16.8055 21 15.48 21C14.1545 21 13.08 19.9255 13.08 18.6C13.08 17.2745 14.1545 16.2 15.48 16.2C16.8055 16.2 17.88 17.2745 17.88 18.6ZM17.88 5.4C17.88 6.72548 16.8055 7.8 15.48 7.8C14.1545 7.8 13.08 6.72548 13.08 5.4C13.08 4.07452 14.1545 3 15.48 3C16.8055 3 17.88 4.07452 17.88 5.4Z\"\n                  stroke-width=\"1.5\" stroke-linecap=\"round\"></path>\n              </svg>\n            </template>\n            <template v-slot:chatWindowSettingContentText>\n              {{ $t('Управление группой') }}\n            </template>\n          </ChatWindowSettingContentHeadersElems>\n          <ChatWindowSettingContentHeadersElems class=\"text-red-400\"\n                                                @click=\"chat.chatDelete({id: route.params.id}).then(res=>{chat.showSettingChat = false; showGroupAdd = false; chat.showChatInfo = false; router.push('/base/chat').then(response=>{toast.success('Чат успешно удалён', {theme: 'auto', autoClose: 1000})})})\">\n            <template v-slot:chatWindowSettingContentSvg>\n              <svg class=\"stroke-red-400\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M10 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                <path d=\"M14 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                <path d=\"M4 7H20\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                <path d=\"M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10\" stroke-width=\"1.5\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                <path d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\" stroke-width=\"1.5\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              </svg>\n            </template>\n            <template v-slot:chatWindowSettingContentText>\n              {{ $t('Удалить группу') }}\n            </template>\n          </ChatWindowSettingContentHeadersElems>\n        </div>\n      </Transition>\n      <div class=\"cursor-pointer p-1.5 rounded-full transition-all duration-200\" @click=\"chat.showChatInfo = false\">\n        <svg class=\"dark:stroke-white stroke-black\" width=\"20px\" height=\"20px\" viewBox=\"-0.5 0 25 25\" fill=\"none\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M3 21.32L21 3.32001\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M3 3.32001L21 21.32\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n    </div>\n  </div>\n  <!--  <Transition name=\"fade\">-->\n  <!--   <div>-->\n  <!--     <div class=\"fixed w-screen h-screen top-0 left-0\"-->\n  <!--          @click=\"chat.showChatChangeInfo = false; chat.file = ''; chat.src = ''; chat.fileUpload = null; chat.results = {image: null, coordinates: null}\"></div>-->\n  <!--   </div>-->\n  <!--  </Transition>-->\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useAuthStore} from \"~/stores/auth\";\nimport {useChat} from \"~/stores/chat\";\nconst chat = useChat()\nconst loadAuthStore = useAuthStore()\n</script>\n\n<template>\n  <div class=\"p-4\">\n    <div class=\"flex items-center tracking-wider gap-x-4\">\n      <div>\n        <img v-if=\"chat.get_user_chat.user?.id || chat.get_user_chat.photo_url\"\n             class=\"w-[80px] h-[80px] rounded-full\"\n             :src=\"!chat.get_user_chat.is_group\n                ? loadAuthStore.get_server_domain + chat.get_user_chat.user?.photo\n                : loadAuthStore.get_server_domain + chat.get_user_chat?.photo_url\"\n             alt=\"\">\n        <div v-else>\n          <div class=\"w-[80px] flex justify-center items-center text-xl h-[80px] rounded-full bg-blueSemiLight\">\n            <p class=\"uppercase\" v-for=\"chatName in chat.get_user_chat.name.split(' ').slice(0,2)\"\n               @click=\"console.log(chatName[0])\">{{ chatName[0] }}</p>\n          </div>\n        </div>\n      </div>\n      <div>\n        <p class=\"text-lg tracking-widest\">{{ chat.get_user_chat.name }}</p>\n        <p class=\"text-sm text-gray-400\">{{ chat.get_user_chat.users?.length + ' ' + $t('участников') }}</p>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport ChatContentContextMenuItem from \"~/components/Chat/ChatContent/ChatContentContextMenuItem.vue\";\nimport {useChat} from \"~/stores/chat\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport {useRouter} from \"vue-router\";\n\nconst router = useRouter()\n\nconst {x, y} = useMouse()\nconst {y: windowY} = useWindowScroll()\nconst isOpen = ref(false)\nconst userContent = ref()\nconst virtualElement = ref({getBoundingClientRect: () => ({})})\nconst chat = useChat()\nconst loadAuthStore = useAuthStore()\n</script>\n\n<template>\n  <div>\n    <div\n      class=\"border-t cursor-pointer dark:hover:bg-gray-600 hover:bg-gray-300 transition-all duration-200 flex gap-x-2 border-black border-opacity-20 px-4 py-3\">\n      <div>\n        <svg class=\"fill-gray-600 dark:fill-gray-300\" height=\"20px\" width=\"20px\" version=\"1.1\" id=\"Layer_1\"\n             xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 459.863 459.863\" xml:space=\"preserve\"><g><g><g><path d=\"M395.988,193.977c-18.629,24.992-45.641,41.956-77.406,44.25c26.626,31.04,43.84,70.378,47.152,113.55\n                c1.243,16.197,0.369,24.083-0.932,30.599c16.064-2.497,30.815-6.128,43.488-10.794c42.626-15.694,51.573-38.891,51.573-55.586\n                C459.863,265.521,434.565,220.849,395.988,193.977z\"></path><path d=\"M276.72,199.407c10.642,5.952,22.36,9.093,34.525,9.093c45.83,0,81.115-44.3,81.115-96.677\n                c0-52.382-35.29-96.677-81.115-96.677c-18.734,0-36.411,7.436-50.724,21.145c20.03,25.65,31.446,59.072,31.446,94.667\n                C291.967,154.544,286.961,178.037,276.72,199.407z\"></path><path d=\"M259.999,226.279c-24.558,31.058-57.739,46.482-91.839,46.482c-36.232,0-68.69-17.206-91.839-46.482\n                C30.403,256.333,0,308.217,0,367.076c0,18.127,9.926,43.389,57.213,60.8c29.496,10.861,68.898,16.841,110.947,16.841\n                c42.049,0,81.451-5.98,110.947-16.841c47.287-17.411,57.213-42.673,57.213-60.8C336.32,308.217,305.918,256.333,259.999,226.279z\n                \"></path><path d=\"M168.16,242.763c53.003,0,93.806-51.234,93.806-111.804c0-60.571-40.808-111.804-93.806-111.804\n                c-52.995,0-93.806,51.223-93.806,111.804C74.354,191.541,115.169,242.763,168.16,242.763z\"></path></g></g></g></svg>\n      </div>\n      <p class=\"uppercase text-[12px] tracking-wider ml-4\">{{ chat.get_user_chat.users.length + ' ' }}<span>{{ $t('участников') }}</span></p>\n    </div>\n    <div class=\"dark:bg-gray-800 bg-gray-200 flex flex-col gap-y-3 py-4 h-[300px] overflow-y-auto\">\n      <div v-for=\"item in chat.get_user_chat.users\"\n           @contextmenu.prevent=\"()=> {\n                              const top = unref(y) - unref(windowY)\n                              const left = unref(x)\n                              virtualElement.getBoundingClientRect = () => ({\n                                width: 0,\n                                height: 0,\n                                top,\n                                left\n                              })\n                              isOpen = true\n                              userContent = {...item}\n                            }\"\n           class=\"flex bg-transparent border-none gap-x-4 items-center w-full dark:hover:bg-gray-600 hover:bg-gray-300 cursor-pointer transition-all px-5\">\n        <div>\n          <img v-if=\"item?.id || item.is_group\" class=\"w-[45px] h-[45px] rounded-full\"\n               :src=\"loadAuthStore.get_server_domain + item?.photo\"\n               alt=\"\">\n          <div v-else class=\"rounded-full bg-blueSemiLight flex items-center justify-center w-[45px] h-[45px]\">\n            <svg class=\"stroke-white\" width=\"30px\" height=\"30px\" viewBox=\"0 -0.5 25 25\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                    d=\"M18.507 19.853V6.034C18.5116 5.49905 18.3034 4.98422 17.9283 4.60277C17.5532 4.22131 17.042 4.00449 16.507 4H8.50705C7.9721 4.00449 7.46085 4.22131 7.08577 4.60277C6.7107 4.98422 6.50252 5.49905 6.50705 6.034V19.853C6.45951 20.252 6.65541 20.6407 7.00441 20.8399C7.35342 21.039 7.78773 21.0099 8.10705 20.766L11.907 17.485C12.2496 17.1758 12.7705 17.1758 13.113 17.485L16.9071 20.767C17.2265 21.0111 17.6611 21.0402 18.0102 20.8407C18.3593 20.6413 18.5551 20.2522 18.507 19.853Z\"\n                    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </div>\n        </div>\n        <div class=\"w-9/12 break-words\">\n          <p class=\"text-[12px] tracking-widest\">\n            {{ item?.id && !item.is_group ? item?.first_name + ' ' + item?.last_name : item.name }}</p>\n        </div>\n      </div>\n      <UContextMenu @contextmenu.prevent v-model=\"isOpen\" :virtual-element=\"virtualElement\">\n<!--        <ChatContentContextMenuItem-->\n<!--          @click=\"router.push(`/base/chat/${userContent?.id}`); isOpen = false\">-->\n<!--          <template v-slot:ContextMenuSvg>-->\n<!--            <svg class=\"dark:stroke-white stroke-black\" width=\"23px\" height=\"23px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">-->\n<!--              <circle opacity=\"0.5\" cx=\"12\" cy=\"9\" r=\"3\" stroke-width=\"1.2\"/>-->\n<!--              <circle cx=\"12\" cy=\"12\" r=\"10\" stroke-width=\"1\"/>-->\n<!--              <path opacity=\"0.5\" d=\"M17.9691 20C17.81 17.1085 16.9247 15 11.9999 15C7.07521 15 6.18991 17.1085 6.03076 20\" stroke-width=\"1.2\" stroke-linecap=\"round\"/>-->\n<!--            </svg>-->\n<!--          </template>-->\n<!--          <template v-slot:ContextMenuText>{{ $t('Перейти в чат') }}</template>-->\n<!--        </ChatContentContextMenuItem>-->\n        <ChatContentContextMenuItem @click=\"chat\">\n          <template v-slot:ContextMenuSvg>\n            <svg class=\"dark:stroke-white stroke-black\" width=\"23px\" height=\"23px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path data-v-a06cf116=\"\" d=\"M10 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M14 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M4 7H20\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10\"\n                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path data-v-a06cf116=\"\" d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\"\n                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            </svg>\n          </template>\n          <template v-slot:ContextMenuText>{{ $t('Удалить') }}</template>\n        </ChatContentContextMenuItem>\n      </UContextMenu>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {uploadImage} from \"~/hooks/ElemUI\";\nimport {useChat} from \"~/stores/chat\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <label v-if=\"chat.showImageChange\" for=\"updateImage\"\n         class=\"bg-black mx-auto flex justify-center items-center w-full h-full absolute z-20 rounded-full bg-opacity-40 cursor-pointer\">\n    <div>\n      <svg width=\"30px\" height=\"30px\" viewBox=\"0 -2 32 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g class=\"fill-white\" id=\"Icon-Set-Filled\" transform=\"translate(-258.000000, -467.000000)\">\n            <path\n              d=\"M286,471 L283,471 L282,469 C281.411,467.837 281.104,467 280,467 L268,467 C266.896,467 266.53,467.954 266,469 L265,471 L262,471 C259.791,471 258,472.791 258,475 L258,491 C258,493.209 259.791,495 262,495 L286,495 C288.209,495 290,493.209 290,491 L290,475 C290,472.791 288.209,471 286,471 Z M274,491 C269.582,491 266,487.418 266,483 C266,478.582 269.582,475 274,475 C278.418,475 282,478.582 282,483 C282,487.418 278.418,491 274,491 Z M274,477 C270.687,477 268,479.687 268,483 C268,486.313 270.687,489 274,489 C277.313,489 280,486.313 280,483 C280,479.687 277.313,477 274,477 L274,477 Z\"\n              id=\"camera\"/>\n          </g>\n        </g>\n      </svg>\n    </div>\n    <input\n      id=\"updateImage\"\n      @change=\"uploadImage($event.target.files[0], chat); chat.showChatCropper = true\"\n      @input=\"$emit('update:modelValue', $event.target.value)\"\n      class=\"hidden\"\n      type=\"file\"\n      accept=\".webp, .png, .jpeg, .jpg\"\n    />\n  </label>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\nimport {useChat} from \"~/stores/chat\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <Transition name=\"fade\">\n    <div class=\"cursor-pointer\" v-if=\"chat.fileChecked\" @click=\"chat.fileChecked = false\">\n      <div class=\"bg-black w-full h-full absolute top-0 left-0 bg-opacity-40 rounded-lg\" />\n      <div class=\"absolute top-0 left-0 bottom-0 right-0 flex items-center justify-center backdrop-blur-[2px]\">\n        <p class=\"dark:bg-gray-700 bg-gray-200 px-4 py-2 rounded-lg tracking-widest\">{{$t('Неизвестный формат файла')}}</p>\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport {uploadImage} from \"~/hooks/ElemUI\";\nimport {useRoute} from \"vue-router\";\nimport {Preview} from \"vue-advanced-cropper\";\nimport ChatCropper from \"~/components/Chat/UI/ChatCropper.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport TheInput from \"~/components/UI/TheInput.vue\";\nimport ChatCropperFileInput from \"~/components/Chat/UI/ChatCropperFileInput.vue\";\nimport {toast} from \"vue3-toastify\";\nimport ChatFileError from \"~/components/Chat/UI/ChatFileError.vue\";\n\nconst chat = useChat()\nconst route = useRoute()\nconst loadAuthStore = useAuthStore()\n\n</script>\n\n<template>\n  <div v-if='chat.showChatChangeInfo' class=\"absolute z-30 w-full h-full top-0 left-0 \">\n    <div class=\"bg-black w-full h-full absolute left-0 top-0 opacity-50\"\n         @click=\"chat.showChatChangeInfo = false; chat.file = ''; chat.src = ''; chat.fileUpload = null; chat.results = {image: null, coordinates: null}\"></div>\n    <div class=\"absolute dark:bg-gray-700 bg-gray-200 rounded-lg bottom-0 top-0 h-max left-0 right-0 w-10/12 mx-auto my-auto\">\n      <div class=\"p-4\">\n        <div class=\"pb-2\">\n          <p class=\"text-lg\">{{ $t('Настройки группы') }}</p>\n        </div>\n        <div class=\"flex items-center gap-x-6 select-none\">\n          <div class=\"relative\" @mouseenter=\"chat.showImageChange = true\" @mouseleave=\"chat.showImageChange = false\">\n            <Transition name=\"fade\">\n              <ChatCropperFileInput/>\n            </Transition>\n            <div class=\"w-[80px] h-[80px] max-sm:w-[70px] max-sm:h-[70px]\" v-if=\"!chat.src && !chat.results.image\">\n              <img v-if=\"chat.get_user_chat.user?.id || chat.get_user_chat.photo_url\"\n                   class=\"w-full rounded-full\"\n                   :src=\"!chat.get_user_chat.is_group\n              ? loadAuthStore.get_server_domain + chat.get_user_chat.user?.photo\n              : loadAuthStore.get_server_domain + chat.get_user_chat?.photo_url\"\n                   alt=\"\">\n              <div v-else>\n                <div class=\"w-[80px] flex justify-center items-center text-xl h-[80px] rounded-full bg-blueSemiLight\">\n                  <p class=\"uppercase\" v-for=\"chatName in chat.get_user_chat.name.split(' ').slice(0,2)\"\n                     @click=\"console.log(chatName[0])\">{{ chatName[0] }}</p>\n                </div>\n              </div>\n            </div>\n            <div v-else-if=\"chat.results.image\">\n              <preview class=\"w-[80px] h-[80px] rounded-full\" :image=\"chat.results.image\"\n                       :coordinates=\"chat.results.coordinates\"/>\n            </div>\n            <div v-else-if=\"chat.src && !chat.results.image\">\n              <img class=\"w-[80px] flex justify-center items-center text-xl h-[80px] rounded-full\"\n                   :src=\"chat.src\"/>\n            </div>\n          </div>\n          <div>\n            <div>\n              <p class=\"text-sm tracking-wider text-semiCyan\">{{ $t('Название группы') }}</p>\n              <TheInput :type=\"'default'\" v-model=\"chat.updateChatName\"\n                        class=\"bg-transparent bg-opacity-0 border-b-2 border-b-semiCyan outline-none\" type=\"text\"/>\n            </div>\n          </div>\n        </div>\n        <div>\n        </div>\n      </div>\n      <div class=\"flex justify-end gap-x-2 p-4 !text-sm\">\n        <TheButton :type=\"'chat'\"\n                   @click=\"chat.showChatChangeInfo = false; chat.file = ''; chat.src = ''; chat.fileUpload = null;chat.results = {image: null, coordinates: null}; chat.updateChatName = chat.userChat.name\">\n          {{ $t('Отмена') }}\n        </TheButton>\n        <TheButton :type=\"'chat'\"\n                   @click=\"chat.updateChatName !== chat.userChat.name || chat.updateDescription !== chat.userChat.description || chat.fileUpload ? chat.chatUpdate({id: route.params.id, update: {name: chat.updateChatName , description: '', photo: chat.fileUpload}}).then(res=>{chat.showChatChangeInfo = false; chat.fileUpload = null; chat.userChat.name = chat.updateChatName; chat.updateChatName = ''}) : toast.info($t('Измените содержимое для сохранения'), {autoClose: 1500, theme: 'auto'})\">\n          {{ $t('Сохранить') }}\n        </TheButton>\n      </div>\n      <ChatFileError/>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport ChatWindowSettingContentHeader\n  from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeader.vue\";\nimport ChatWindowSettingContentMain\n  from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentMain.vue\";\nimport ChatWindowSettingContentUserList\n  from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentUserList.vue\";\nimport {useChat} from \"~/stores/chat\";\nimport ChatUserCheckbox from \"~/components/Chat/UI/ChatUserCheckbox.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport ChatWindowSettingContentHeaderChange\n  from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent/ChatWindowSettingContentHeaderUI/ChatWindowSettingContentHeaderChange.vue\";\n\nconst chat = useChat()\n\nconst showGroupAdd = ref(false)\nconst groupTitle = ref('')\nconst userCount = []\n</script>\n\n<template>\n  <div @click=\"chat.showSettingChat = false\" >\n    <ChatWindowSettingContentHeader @showGroupAdd=\"showGroupAdd = true\"/>\n    <ChatWindowSettingContentMain/>\n    <ChatWindowSettingContentUserList/>\n    <Transition name=\"fade\">\n      <ChatWindowSettingContentHeaderChange></ChatWindowSettingContentHeaderChange>\n    </Transition>\n    <Transition name=\"fade\" >\n      <div class=\"absolute z-30 w-full h-full top-0 left-0 flex items-center\" v-if=\"showGroupAdd\">\n        <div class=\"absolute bg-black left-0 top-0 w-full h-full bg-opacity-50\" @click=\"showGroupAdd = false\"/>\n        <div class=\"bg-gray-700  w-10/12 mx-auto h-max rounded-lg relative\">\n          <p class=\"tracking-wider px-4 pt-4\">{{ $t('Добавить участников') }}\n          <span class=\"text-sm text-gray-400 ml-2\">{{ userCount.length + '/1000' }}</span></p>\n          <div class=\"w-full px-4 flex overflow-y-auto max-h-[300px] items-center\">\n            <div class=\"absolute rotate-90 ml-2\">\n              <svg class=\"dark:stroke-white stroke-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M14.9536 14.9458L21 21M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n                  stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </div>\n            <input type=\"text\" class=\"w-full dark:bg-gray-700 outline-none pl-10 h-[50px]\" placeholder=\"Поиск...\"/>\n          </div>\n          <div class=\" max-h-[300px] overflow-y-auto\">\n            <ChatUserCheckbox v-for=\"item in chat.get_chat_list.results.filter(e=> !e.is_group)\" :item=\"item\"/>\n          </div>\n          <div class=\"w-full px-4 h-[50px] flex items-center justify-end text-sm gap-x-4\">\n            <TheButton type=\"chat\" @click=\"showGroupAdd = false;\">\n              {{ $t('Отмена') }}\n            </TheButton>\n            <TheButton type=\"chat\"\n                       @click=\"\">\n              {{ $t('Добавить') }}\n            </TheButton>\n          </div>\n        </div>\n      </div>\n    </Transition>\n  </div>\n\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\n\n</script>\n\n<template>\n  <div>\n    <div class=\"text-sm tracking-wider flex items-center gap-x-4 dark:hover:bg-gray-500 hover:bg-gray-300 px-3 py-1 cursor-pointer\">\n      <div>\n        <slot name=\"chatWindowSettingContentSvg\"></slot>\n      </div>\n      <p class=\"\"><slot name=\"chatWindowSettingContentText\"/></p>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport ChatChangeWindowElem from \"~/components/Chat/UI/ChatChangeWindowElem.vue\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <div class=\"\">\n    <div @click.stop=\"chat.showChangeWindowChat = !chat.showChangeWindowChat\"\n         class=\"p-1 rounded-full transition-all duration-200 cursor-pointer dark:hover:bg-gray-500 hover:bg-gray-200\" :class=\"{'dark:bg-gray-500 bg-gray-200' : chat.showChangeWindowChat}\">\n      <svg class=\"dark:stroke-white stroke-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\"\n           xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M12 12H12.01M12 6H12.01M12 18H12.01M13 12C13 12.5523 12.5523 13 12 13C11.4477 13 11 12.5523 11 12C11 11.4477 11.4477 11 12 11C12.5523 11 13 11.4477 13 12ZM13 18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18C11 17.4477 11.4477 17 12 17C12.5523 17 13 17.4477 13 18ZM13 6C13 6.55228 12.5523 7 12 7C11.4477 7 11 6.55228 11 6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6Z\"\n          stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n      </svg>\n    </div>\n    <Transition name=\"fade\" >\n      <div v-if=\"chat.showChangeWindowChat\" @click.stop=\"chat.showChangeWindowChat = false\" class=\"absolute top-14 right-8 z-50 dark:bg-gray-600 bg-gray-200 border border-gray-300 dark:border dark:border-gray-500\">\n        <ChatChangeWindowElem @click=\"chat.showChatInfo = true\" v-if=\"chat.get_user_chat.is_group\">\n          <template v-slot:chatWindowSettingContentSvg>\n            <svg class=\"dark:fill-white fill-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 17.75C12.4142 17.75 12.75 17.4142 12.75 17V11C12.75 10.5858 12.4142 10.25 12 10.25C11.5858 10.25 11.25 10.5858 11.25 11V17C11.25 17.4142 11.5858 17.75 12 17.75Z\" />\n              <path d=\"M12 7C12.5523 7 13 7.44772 13 8C13 8.55228 12.5523 9 12 9C11.4477 9 11 8.55228 11 8C11 7.44772 11.4477 7 12 7Z\" />\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.25 12C1.25 6.06294 6.06294 1.25 12 1.25C17.9371 1.25 22.75 6.06294 22.75 12C22.75 17.9371 17.9371 22.75 12 22.75C6.06294 22.75 1.25 17.9371 1.25 12ZM12 2.75C6.89137 2.75 2.75 6.89137 2.75 12C2.75 17.1086 6.89137 21.25 12 21.25C17.1086 21.25 21.25 17.1086 21.25 12C21.25 6.89137 17.1086 2.75 12 2.75Z\" />\n            </svg>\n          </template>\n          <template v-slot:chatWindowSettingContentText>\n            {{$t('Информация о группе')}}\n          </template>\n        </ChatChangeWindowElem>\n        <ChatChangeWindowElem @click=\"chat.showChatInfo = true\" v-else>\n          <template v-slot:chatWindowSettingContentSvg>\n            <svg class=\"dark:stroke-white stroke-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle opacity=\"0.5\" cx=\"12\" cy=\"9\" r=\"3\"  stroke-width=\"1\"/>\n              <circle cx=\"12\" cy=\"12\" r=\"10\"  stroke-width=\"1\"/>\n              <path opacity=\"0.5\" d=\"M17.9691 20C17.81 17.1085 16.9247 15 11.9999 15C7.07521 15 6.18991 17.1085 6.03076 20\"  stroke-width=\"1\" stroke-linecap=\"round\"/>\n            </svg>\n          </template>\n          <template v-slot:chatWindowSettingContentText>\n            {{$t('Показать профиль')}}\n          </template>\n        </ChatChangeWindowElem>\n        <ChatChangeWindowElem @click=\"chat.showChatChangeInfoModal = true; chat.updateChatName = chat.userChat.name\" v-if=\"chat.get_user_chat.is_group\">\n          <template v-slot:chatWindowSettingContentSvg>\n            <svg class=\"dark:stroke-white stroke-black\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle opacity=\"0.5\" cx=\"12\" cy=\"9\" r=\"3\"  stroke-width=\"1\"/>\n              <circle cx=\"12\" cy=\"12\" r=\"10\"  stroke-width=\"1\"/>\n              <path opacity=\"0.5\" d=\"M17.9691 20C17.81 17.1085 16.9247 15 11.9999 15C7.07521 15 6.18991 17.1085 6.03076 20\"  stroke-width=\"1\" stroke-linecap=\"round\"/>\n            </svg>\n          </template>\n          <template v-slot:chatWindowSettingContentText>\n            {{$t('Управление группой')}}\n          </template>\n        </ChatChangeWindowElem>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {useRoute} from \"vue-router\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport TheInput from \"~/components/UI/TheInput.vue\";\n\n\nconst route = useRoute()\nconst chat = useChat()\n</script>\n\n<template>\n  <Transition name=\"fade\">\n    <div v-if=\"chat.showUploadWindow && chat.file.size > 0\" class=\"fixed left-0 top-0 h-screen w-screen flex justify-center items-center z-[110] backdrop-blur-sm\" @scroll.prevent @wheel.prevent>\n      <div class=\"opacity-60 bg-black absolute left-0 top-0 w-screen h-screen backdrop-blur\" @click=\"chat.showUploadWindow = false; chat.file = ''; chat.src = ''\"></div>\n      <div class=\"!w-max dark:!bg-gray-700  bg-white rounded-lg relative p-5 max-sm:p-3 overflow-y-auto\">\n        <p v-if=\"!chat.messageUpdate.file\" class=\"tracking-widest\">{{ $t('Отправить как файл') }}</p>\n        <div class=\"flex gap-x-12  mt-6\">\n          <div class=\"flex gap-x-4\">\n            <div class=\"bg-blueSemiLight rounded-full p-3\">\n              <svg width=\"30px\" height=\"30px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g opacity=\"0.5\">\n                  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                        d=\"M14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V10C2 6.22876 2 4.34315 3.17157 3.17157C4.34315 2 6.23869 2 10.0298 2C10.6358 2 11.1214 2 11.53 2.01666C11.5166 2.09659 11.5095 2.17813 11.5092 2.26057L11.5 5.09497C11.4999 6.19207 11.4998 7.16164 11.6049 7.94316C11.7188 8.79028 11.9803 9.63726 12.6716 10.3285C13.3628 11.0198 14.2098 11.2813 15.0569 11.3952C15.8385 11.5003 16.808 11.5002 17.9051 11.5001L18 11.5001H21.9574C22 12.0344 22 12.6901 22 13.5629V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22Z\"\n                        fill=\"#1C274C\"/>\n                </g>\n                <path\n                  d=\"M11.5092 2.2601L11.5 5.0945C11.4999 6.1916 11.4998 7.16117 11.6049 7.94269C11.7188 8.78981 11.9803 9.6368 12.6716 10.3281C13.3629 11.0193 14.2098 11.2808 15.057 11.3947C15.8385 11.4998 16.808 11.4997 17.9051 11.4996L21.9574 11.4996C21.9698 11.6552 21.9786 11.821 21.9848 11.9995H22C22 11.732 22 11.5983 21.9901 11.4408C21.9335 10.5463 21.5617 9.52125 21.0315 8.79853C20.9382 8.6713 20.8743 8.59493 20.7467 8.44218C19.9542 7.49359 18.911 6.31193 18 5.49953C17.1892 4.77645 16.0787 3.98536 15.1101 3.3385C14.2781 2.78275 13.862 2.50487 13.2915 2.29834C13.1403 2.24359 12.9408 2.18311 12.7846 2.14466C12.4006 2.05013 12.0268 2.01725 11.5 2.00586L11.5092 2.2601Z\"\n                  fill=\"#1C274C\"/>\n              </svg>\n            </div>\n            <div class=\"break-words\">\n              <p>{{ chat.file.name?.length > 25 ? chat.file.name.slice(0,20) + '...' + chat.file.name.substr(-5): chat.file.name}}</p>\n              <p class=\"text-gray-500 font-bold text-sm\">{{ chat.file.size < 1000 ? chat.file.size + ' ' + $t('Б') : chat.file.size + ' ' + $t('КБ') }}</p>\n            </div>\n          </div>\n          <div>\n            <svg class=\"stroke-white\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M10 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path d=\"M14 12V17\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path d=\"M4 7H20\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path d=\"M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10\" stroke-width=\"1.5\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n              <path d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\" stroke-width=\"1.5\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            </svg>\n          </div>\n        </div>\n        <div class=\"my-2\">\n          <p class=\"text-sm tracking-wider text-semiCyan\">{{ $t('Подпись') }}</p>\n          <TheInput v-if=\"!chat.messageUpdate.file\" :type=\"'default'\" v-model=\"chat.signature\"\n                    class=\"bg-transparent bg-opacity-0 border-b-2 border-b-semiCyan outline-none\" type=\"text\"/>\n          <TheInput v-else :type=\"'default'\" v-model=\"chat.messageUpdate.updateText\"\n                    class=\"bg-transparent bg-opacity-0 border-b-2 border-b-semiCyan outline-none\" type=\"text\"/>\n        </div>\n        <div class=\"flex justify-end text-sm\">\n          <TheButton :type=\"'chat'\" @click=\"chat.showUploadWindow = false; chat.file = ''; chat.src = ''; chat.signature = ''\">\n            {{$t('Отмена')}}\n          </TheButton>\n          <TheButton v-if=\"!chat.messageUpdate.file\" :type=\"'chat'\" @click=\"chat.createMessage({id: route.params.id ,file: chat.file, text: chat.signature}).then(res=>{chat.showUploadWindow = false; chat.file = ''; chat.src = ''; chat.signature = ''})\">\n            {{$t('Отправить')}}\n          </TheButton>\n          <TheButton v-else :type=\"'chat'\" @click=\"chat.updateMessage({id: chat.messageUpdate.id, text: chat.messageUpdate.updateText}).then(res=>{chat.showUploadWindow = false; chat.file = ''; chat.src = ''; chat.signature = ''})\">\n            {{$t('Сохранить')}}\n          </TheButton>\n        </div>\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\n\nconst chat = useChat()\n</script>\n\n<template>\n  <Transition name=\"fade\">\n    <div v-if=\"chat.fileSizeInfo\" class=\"absolute top-0 bottom-0 left-0 right-0 z-20 w-full my-auto mx-auto flex justify-center items-center backdrop-blur-sm\" @click=\"chat.fileSizeInfo = false; chat.fileReadInfo = false; chat.file = ''; chat.src = ''\">\n      <div class=\"dark:bg-black dark:bg-opacity-70 bg-gray-200 p-4 text-center break-words rounded-lg\">\n        <p>{{$t('Невозможно отправить пустой файл')}}: <span>{{chat.file.name}}</span></p>\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>","<script setup lang=\"ts\">\nimport {useChat} from \"~/stores/chat\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {useAuthStore} from \"~/stores/auth\";\nimport ChatContent from \"~/components/Chat/ChatContent.vue\";\nimport Sceleton from \"~/components/UI/TheSceleton.vue\";\nimport ChatContentUserPinned from \"~/components/Chat/ChatContent/ChatContentUserPinned.vue\";\nimport TheModal from \"~/components/UI/TheModal.vue\";\nimport ChatWindowSettingContent from \"~/components/Chat/ChatContent/ChatWindowSetting/ChatWindowSettingContent.vue\";\nimport ChatChangeWindow from \"~/components/Chat/UI/ChatChangeWindow.vue\";\nimport ChatCropperFileInput from \"~/components/Chat/UI/ChatCropperFileInput.vue\";\nimport {Preview} from \"vue-advanced-cropper\";\nimport TheButton from \"~/components/UI/TheButton.vue\";\nimport {toast} from \"vue3-toastify\";\nimport TheInput from \"~/components/UI/TheInput.vue\";\nimport ChatFileError from \"~/components/Chat/UI/ChatFileError.vue\";\nimport ChatUploadWindow from \"~/components/Chat/UI/Upload/ChatUploadWindow.vue\";\nimport ChatUploadError from \"~/components/Chat/UI/Upload/ChatUploadError.vue\";\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\nconst loadAuthStore = useAuthStore()\nconst route = useRoute()\nconst router = useRouter()\nconst chat = useChat()\ndefineProps({\n  activeNav: {\n    type: Boolean,\n    default: true\n  },\n})\n\nonUnmounted(()=>{\n  chat.messageText = ''\n})\nfunction messages() {\n  let mes = new WebSocket(`wss://api-buildwithus.ai-softdev.com/ws/chat/${route.params.id}?token=${nuxtStorage.localStorage.getData('token')}`)\n  mes.onmessage = (event) => {\n    let res = JSON.parse(event.data)\n    if (chat.userChat?.id === res.chat_id && mes.readyState === WebSocket.OPEN) {\n      let last_message = chat.userChat.messages[chat.userChat.messages.length - 1]\n      if (last_message?.date == new Date(res.created_at).toLocaleDateString()) {\n        chat.userChat.messages[chat.userChat.messages.length - 1]?.messages?.push(res)\n      } else {\n        chat.userChat.messages.push({date: new Date(res.created_at).toLocaleDateString(), messages: [res]})\n      }\n    }\n    for (let i = 0; i < chat.chatList.results.length; i++) {\n      if (chat.chatList.results[i].id === res.chat_id) {\n        chat.chatList.results[i].last_message = res\n        if(res.file !== chat.userChat.photo_url && res.message_type === 'change' && res.file) {\n          chat.userChat.photo_url = res.file\n        }\n      }\n\n    }\n    if (res.type === 'delete_message') {\n      for (let j = 0; j < chat.userChat.messages.length; j++) {\n        for (let i = chat.userChat.messages[j].messages.length - 1; i >= 0; i--) {\n          if (chat.userChat.messages[j].messages[i].id === res.message_id) {\n            chat.userChat.messages[j].messages?.splice(i, 1)\n          }\n        }\n      }\n    } else if (res.type === 'update_message') {\n      for (let j = 0; j < chat.userChat.messages.length; j++) {\n        for (let i = chat.userChat.messages[j].messages.length - 1; i >= 0; i--) {\n          if (chat.userChat.messages[j].messages[i].id === res.message.id) {\n            chat.userChat.messages[j].messages[i] = res.message;\n            break;\n          }\n        }\n      }\n    }\n  }\n  onUnmounted(() => {\n    mes.close()\n  })\n}\n\nonMounted(() => {\n  chat.loadUserChat({id: route.params.id, limit: 100, page: 1})\n  chat.loadPinnedList({id: route.params.id, limit: 100, page: 1})\n  messages()\n})\n\nuseSeoMeta({\n  title: 'Чат'\n})\n\n</script>\n<template>\n  <div class=\"h-full w-full\" @click=\"chat.showChangeWindowChat = false\">\n    <div\n      class=\"w-full flex items-center border-l max-h-[8%] max-md:pt-3 max-md:px-14 max-sm:px-2 h-[100px] px-10 border-black dark:border-opacity-20 border-opacity-10 bg-gray-200 dark:bg-gray-700\">\n      <div v-if=\"!chat.get_user_chat.user && !chat.get_user_chat.is_group || chat.get_user_chat.users?.id \"\n           class=\"flex gap-x-4 justify-center relative items-center mb-2\">\n        <sceleton class=\"opacity-50\" width=\"40px\" height=\"40px\" border-radius=\"100%\"></sceleton>\n        <sceleton class=\"opacity-50\" width=\"150px\" height=\"10px\" border-radius=\"4px\"></sceleton>\n      </div>\n      <div v-else class=\"flex items-center justify-between w-full\" @click=\"chat.showChatInfo = true\">\n        <div class=\"flex items-center gap-x-2 cursor-pointer\">\n          <div class=\"hidden max-md:block\" @click.prevent=\"router.push('/base/chat')\">\n            <svg class=\"dark:fill-gray-400 fill-black\" width=\"30px\" height=\"30px\" viewBox=\"0 0 1024 1024\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M604.7 759.2l61.8-61.8L481.1 512l185.4-185.4-61.8-61.8L357.5 512z\"/>\n            </svg>\n          </div>\n          <img v-if=\"chat.get_user_chat.user?.id || chat.get_user_chat.photo_url\" class=\"w-[40px] h-[40px] rounded-full\"\n               :src=\"!chat.get_user_chat.is_group\n                ? loadAuthStore.get_server_domain + chat.get_user_chat.user?.photo\n                : loadAuthStore.get_server_domain + chat.get_user_chat?.photo_url\"\n               alt=\"\">\n          <div v-else class=\"rounded-full bg-blueSemiLight flex items-center justify-center w-[42px] h-[42px]\">\n            <svg v-if=\"!chat.get_user_chat.photo_url && !chat.get_user_chat.is_group\" class=\"stroke-white\" width=\"32px\"\n                 height=\"32px\" viewBox=\"0 -0.5 25 25\" fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                    d=\"M18.507 19.853V6.034C18.5116 5.49905 18.3034 4.98422 17.9283 4.60277C17.5532 4.22131 17.042 4.00449 16.507 4H8.50705C7.9721 4.00449 7.46085 4.22131 7.08577 4.60277C6.7107 4.98422 6.50252 5.49905 6.50705 6.034V19.853C6.45951 20.252 6.65541 20.6407 7.00441 20.8399C7.35342 21.039 7.78773 21.0099 8.10705 20.766L11.907 17.485C12.2496 17.1758 12.7705 17.1758 13.113 17.485L16.9071 20.767C17.2265 21.0111 17.6611 21.0402 18.0102 20.8407C18.3593 20.6413 18.5551 20.2522 18.507 19.853Z\"\n                    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n            <p class=\"uppercase font-bold\" v-else v-for=\"chatName in chat.get_user_chat.name.split(' ').slice(0,2)\"\n               @click=\"console.log(chatName[0])\">{{ chatName[0] }}</p>\n          </div>\n          <p v-if=\"!chat.get_user_chat.is_group\">\n            {{ chat.get_user_chat.user?.last_name === '' ? $t('Избранное') : chat.get_user_chat.user?.first_name + ' ' + chat.get_user_chat.user?.last_name\n            }}</p>\n          <p v-else>\n            {{ chat.get_user_chat?.name.length > 30 ? chat.get_user_chat?.name.slice(0, 30) + '...' : chat.get_user_chat?.name\n            }}</p>\n        </div>\n        <ChatChangeWindow/>\n      </div>\n    </div>\n    <ChatContentUserPinned/>\n    <ChatContent></ChatContent>\n    <Transition name=\"slide-down\">\n      <TheModal :type=\"'resizeInfoWindow'\" class=\"\" v-if=\"chat.showChatInfo && chat.userChat?.is_group\"\n                @showModal=\"chat.showChatInfo = false; chat.showSettingChat = false; chat.showChatChangeInfo = false\">\n        <ChatWindowSettingContent/>\n      </TheModal>\n    </Transition>\n    <Transition name=\"fade\">\n      <TheModal v-if='chat.showChatChangeInfoModal' :type=\"'resize'\"\n                @showModal=\"chat.showChatChangeInfoModal = false; chat.file = ''; chat.src = ''; chat.fileUpload = null; chat.results = {image: null, coordinates: null}\">\n        <div class=\"dark:bg-gray-700 rounded-lg h-max relative mx-auto my-auto\">\n          <div class=\"\">\n            <p class=\"text-lg\">{{ $t('Настройки группы') }}</p>\n          </div>\n          <div class=\"py-1 flex items-center gap-x-6 select-none\">\n            <div class=\"relative\" @mouseenter=\"chat.showImageChange = true\" @mouseleave=\"chat.showImageChange = false\">\n              <Transition name=\"fade\">\n                <ChatCropperFileInput/>\n              </Transition>\n              <div v-if=\"!chat.src && !chat.results.image\">\n                <img v-if=\"chat.get_user_chat.user?.id || chat.get_user_chat.photo_url\"\n                     class=\"w-[80px] h-[80px] rounded-full\"\n                     :src=\"!chat.get_user_chat.is_group\n              ? loadAuthStore.get_server_domain + chat.get_user_chat.user?.photo\n              : loadAuthStore.get_server_domain + chat.get_user_chat?.photo_url\"\n                     alt=\"\">\n                <div v-else>\n                  <div class=\"w-[80px] flex justify-center items-center text-xl h-[80px] rounded-full bg-blueSemiLight\">\n                    <p class=\"uppercase\" v-for=\"chatName in chat.get_user_chat.name.split(' ').slice(0,2)\"\n                       @click=\"console.log(chatName[0])\">{{ chatName[0] }}</p>\n                  </div>\n                </div>\n              </div>\n              <div v-else-if=\"chat.results.image\">\n                <preview class=\"w-[80px] h-[80px] rounded-full\" :image=\"chat.results.image\"\n                         :coordinates=\"chat.results.coordinates\"/>\n              </div>\n              <div v-else-if=\"chat.src && !chat.results.image\">\n                <img class=\"w-[80px] flex justify-center items-center text-xl h-[80px] rounded-full\"\n                     :src=\"chat.src\"/>\n              </div>\n            </div>\n            <div>\n              <div>\n                <p class=\"text-sm tracking-wider text-semiCyan\">{{ $t('Название группы') }}</p>\n                <TheInput :type=\"'default'\" v-model=\"chat.updateChatName\"\n                          class=\"bg-transparent bg-opacity-0 border-b-2 border-b-semiCyan outline-none\" type=\"text\"/>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex justify-end gap-x-2 !text-sm\">\n            <TheButton :type=\"'chat'\"\n                       @click=\"chat.showChatChangeInfoModal = false; chat.file = ''; chat.src = ''; chat.fileUpload = null; chat.results = {image: null, coordinates: null}\">\n              {{ $t('Отмена') }}\n            </TheButton>\n            <TheButton :type=\"'chat'\"\n                       @click=\"chat.updateChatName !== chat.userChat.name || chat.updateDescription !== chat.userChat.description || chat.fileUpload ? chat.chatUpdate({id: route.params.id, update: {name: chat.updateChatName , description: '', photo: chat.fileUpload}}).then(res=>{chat.showChatChangeInfoModal = false; chat.fileUpload = null; chat.userChat.name = chat.updateChatName; chat.updateChatName = ''}) : toast.info($t('Измените содержимое для сохранения'), {autoClose: 1500, theme: 'auto'})\">\n              {{ $t('Сохранить') }}\n            </TheButton>\n          </div>\n        </div>\n        <ChatFileError/>\n      </TheModal>\n    </Transition>\n    <Transition name=\"fade\" >\n      <div v-if=\"chat.showChatGallery\" class=\"fixed left-0 top-0 h-screen w-screen flex justify-center items-center z-[110]\" >\n        <div class=\"opacity-60 bg-black absolute left-0 top-0 w-screen h-screen\" @click=\"chat.showChatGallery = false\"></div>\n        <div class=\"bg-gray-300 w-20 h-20\"></div>\n      </div>\n    </Transition>\n    <ChatUploadWindow />\n    <ChatUploadError />\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>"],"names":["window","_sfc_ssrRender","_ssrRenderAttrs","_ssrRenderSlot"],"mappings":"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","x_google_ignoreList":[1]}