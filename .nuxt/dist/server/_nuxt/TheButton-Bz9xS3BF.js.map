{"version":3,"file":"TheButton-Bz9xS3BF.js","sources":["../../../../stores/tree.ts","../../../../components/UI/TheButton.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\r\nimport axios from \"~/composables/axios\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useTreeStore = defineStore('useTree', {\r\n  state: ()=>({\r\n    tree: [],\r\n    treeFullScreen: false\r\n  }),\r\n  getters: {\r\n    get_list(tree: any) {\r\n      const userMap = new Map();\r\n      const rootUsers = [];\r\n\r\n      // Заполняем userMap и добавляем свойство children\r\n      this.tree.forEach(department => {\r\n        department.participants.forEach(user => {\r\n          user.children = [];\r\n          userMap.set(user.id, user);\r\n        });\r\n      });\r\n\r\n      // Формируем иерархию\r\n      this.tree.forEach(department => {\r\n        department.participants.forEach(user => {\r\n          if (user.head_user_id && userMap.has(user.head_user_id)) {\r\n            userMap.get(user.head_user_id).children.push(user);\r\n          } else {\r\n            rootUsers.push(user); // Если нет head_user_id, значит, это корневой элемент\r\n          }\r\n        });\r\n      });\r\n\r\n      return rootUsers;\r\n    }\r\n  },\r\n  actions: {\r\n    async loadTreeList(){\r\n      axios.get(`department/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res=> {\r\n        this.tree = res.data.results\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\n\r\n","<template>\r\n  <button :type=\"t\" class=\"font-bold text-white\"\r\n          :class=\"{\r\n          'bg-blue-400 w-5/12 mx-auto py-4 rounded-xl' : type === 'signIn',\r\n          'bg-blueSemiLight' : type === 'change', 'bg-green-400' : type === 'success',\r\n          'bg-redOrange': type === 'danger',\r\n          'bg-golden py-3 px-5 !text-black !rounded-full': type === 'golden',\r\n          'dark:hover:bg-gray-600 hover:bg-gray-100 rounded-lg !text-semiCyan transition-all p-2' : type === 'chat',\r\n          '!text-black dark:!text-white border border-semiCyan p-2 rounded-lg' : type === 'treeBtn',\r\n          'dark:hover:bg-gray-700 hover:bg-gray-100 rounded-lg !text-semiCyan transition-all p-2' : type === 'documentBtn',\r\n          }\">\r\n    <slot/>\r\n  </button>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useTreeStore} from \"~/stores/tree\";\r\nconst treeStore = useTreeStore()\r\ndefineProps({\r\n  type: String,\r\n  t: String\r\n})\r\n</script>"],"names":[],"mappings":";;;;;AAGa,MAAA,eAAe,YAAY,WAAW;AAAA,EACjD,OAAO,OAAK;AAAA,IACV,MAAM,CAAC;AAAA,IACP,gBAAgB;AAAA,EAAA;AAAA,EAElB,SAAS;AAAA,IACP,SAAS,MAAW;AACZ,YAAA,8BAAc;AACpB,YAAM,YAAY,CAAA;AAGb,WAAA,KAAK,QAAQ,CAAc,eAAA;AACnB,mBAAA,aAAa,QAAQ,CAAQ,SAAA;AACtC,eAAK,WAAW;AACR,kBAAA,IAAI,KAAK,IAAI,IAAI;AAAA,QAAA,CAC1B;AAAA,MAAA,CACF;AAGI,WAAA,KAAK,QAAQ,CAAc,eAAA;AACnB,mBAAA,aAAa,QAAQ,CAAQ,SAAA;AACtC,cAAI,KAAK,gBAAgB,QAAQ,IAAI,KAAK,YAAY,GAAG;AACvD,oBAAQ,IAAI,KAAK,YAAY,EAAE,SAAS,KAAK,IAAI;AAAA,UAAA,OAC5C;AACL,sBAAU,KAAK,IAAI;AAAA,UACrB;AAAA,QAAA,CACD;AAAA,MAAA,CACF;AAEM,aAAA;AAAA,IACT;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,MAAM,eAAc;AAClB,YAAM,IAAI,eAAe;AAAA,QACvB,SAAS;AAAA,UACP,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACpE;AAAA,MAAA,CACD,EAAE,KAAK,CAAM,QAAA;AACP,aAAA,OAAO,IAAI,KAAK;AAAA,MAAA,CACtB;AAAA,IACH;AAAA,EACF;AACF,CAAC;;;;;;;;;AC7BiB,iBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;"}