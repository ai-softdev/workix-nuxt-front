{"version":3,"file":"users-CIi-JGj-.js","sources":["../../../../stores/users.ts"],"sourcesContent":["import axios from \"~/composables/axios\"\r\nimport {defineStore} from \"pinia\";\r\nimport {toast} from \"vue3-toastify\";\r\nimport {Router} from 'vue-router'\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useUserStore = defineStore('user-list', {\r\n  state: () => ({\r\n    user: {\r\n      id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      patronymic:'',\r\n      password: '',\r\n      email: '',\r\n      photo_file: '',\r\n      photo: '',\r\n      position_id: '',\r\n      position_name: '',\r\n      position: [{\r\n        id: '',\r\n        name: ''\r\n      }],\r\n      role_id: '',\r\n      role_name: '',\r\n      role_en: '',\r\n      role: {\r\n        id: '',\r\n        name: ''\r\n      },\r\n      phone: '',\r\n      department: '',\r\n      company: '',\r\n      company_id: '',\r\n      salary: '',\r\n      date_of_birth: '',\r\n      permissions: [],\r\n    },\r\n    roleList: [],\r\n    usersForCreate: {},\r\n    userSearch: {},\r\n    permissions: [],\r\n    page: 1\r\n  }),\r\n  getters: {\r\n    get_user_list: (state) => state.user,\r\n    get_user_create_list: (state) => state.usersForCreate,\r\n    get_user_search: (state) => state.userSearch,\r\n    get_position_list: (state) => state.user.position,\r\n    get_role_list: (state) => state.roleList,\r\n    get_permission_list: (state) => state.permissions,\r\n  },\r\n  actions: {\r\n    async loadAdminList(params: {\r\n      page: number,\r\n      limit: number,\r\n      query?: any,\r\n    }) {\r\n      await axios.get(`/admin/user/company-admin/list?query=${params.query}&page=${params.page}&limit=${params.limit}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n      })\r\n    },\r\n    async loadUserList(params: {page: number, limit: number, query?: any, department_id?: any}) {\r\n      await axios.get(`user/list?query=${params.query}&page=${params.page}&limit=${params.limit}${params.department_id ? `&department_id=${params.department_id}` : ''}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n      })\r\n    },\r\n    async loadUserCreateList(params: {page: number, limit: number, query?: any}) {\r\n      await axios.get(`user/list?page=${params.page}&limit=${params.limit}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.usersForCreate = response.data\r\n      })\r\n    },\r\n    async loadUser(params: { id: any }) {\r\n      axios.get(`user/${params.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n      }).catch(e => {\r\n      })\r\n    },\r\n    async searchUser(params: { search: any }) {\r\n      axios.get(`user/list?query=${params.search}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.userSearch = res.data\r\n      })\r\n    },\r\n\r\n\r\n    async createUser(params: { user: any }) {\r\n      let formD = new FormData();\r\n      formD.set('first_name', params.first_name)\r\n      formD.set('last_name', params.last_name)\r\n      formD.set('email', params.email)\r\n      formD.set('password', params.password)\r\n      formD.set('date_of_birth', params.date_of_birth)\r\n      formD.set('photo', params.photo)\r\n      formD.set('phone', params.phone)\r\n      formD.set('position', params.position)\r\n      formD.set('role_id', params.role_id)\r\n      formD.set('patronymic', params.patronymic)\r\n      formD.set('company_id', params.company_id)\r\n      formD.set('department_id', params.department_id)\r\n      formD.set('head_user_id', params.head_user_id)\r\n      if (typeof params.photo !== 'string') {\r\n        formD.set('photo', params.photo)\r\n      }\r\n      axios.post(`user/create`, formD, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n        this.loadUserList({limit: 5, page: 1, query: ''})\r\n      }).catch(e => {\r\n      })\r\n    },\r\n    async createAdmin(params: { user: any }) {\r\n      let formData = new FormData();\r\n      formData.set('first_name', params.first_name)\r\n      formData.set('last_name', params.last_name)\r\n      formData.set('email', params.email)\r\n      formData.set('password', params.password)\r\n      formData.set('date_of_birth', params.date_of_birth.toISOString())\r\n      formData.set('photo', params.photo)\r\n      formData.set('phone', params.phone)\r\n      formData.set('position', params.position)\r\n      formData.set('role_id', params.role_id)\r\n      formData.set('company_id', params.company_id)\r\n      formData.set('department_id', params.department_id)\r\n      if (typeof params.photo !== 'string') {\r\n        formData.set('photo', params.photo)\r\n      }\r\n      axios.post('/admin/user/company-admin/create', formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n        this.loadUserList({limit: 5, page: 1, query: ''})\r\n      }).catch(e => {\r\n      })\r\n    },\r\n\r\n    async update_user(params: { user: any, id: any }) {\r\n\r\n      let formD = new FormData();\r\n      const originalUser = this.user\r\n\r\n      if(params.user.first_name !== originalUser.first_name) {\r\n        formD.set('first_name', params.user.first_name)\r\n      }\r\n      if(params.user.last_name !== originalUser.last_name) {\r\n        formD.set('last_name', params.user.last_name)\r\n      }\r\n      if(params.user.phone !== originalUser.phone) {\r\n        formD.set('phone', params.user.phone)\r\n      }\r\n      if(params.user.password !== originalUser.password) {\r\n        formD.set('password', params.user.password)\r\n      }\r\n      if(params.user.salary !== originalUser.salary) {\r\n        formD.set('salary', params.user.salary)\r\n      }\r\n      if(params.user.email !== originalUser.email) {\r\n        formD.set('email', params.user.email)\r\n      }\r\n      if(params.user.date_of_birth !== originalUser.date_of_birth) {\r\n        formD.set('date_of_birth', params.user.date_of_birth)\r\n      }\r\n      if(params.user.passport !== originalUser.passport) {\r\n        formD.set('password', params.user.password)\r\n      }\r\n      if(params.user.department_id !== originalUser.department_id) {\r\n        formD.set('department_id', params.user.department_id)\r\n      }\r\n      if(params.user.position.id !== originalUser.position.id) {\r\n        formD.set('position', params.user.position.id)\r\n      }\r\n      if (params.update_type !== 'current-user' && params.user.permissions_ids !== originalUser.permissions_id) {\r\n        formD.set('permissions_ids', params.permissions_ids)\r\n      }\r\n      if (params.update_type !== 'current-user' && params.user.role_id !== originalUser.role_id) {\r\n        formD.set('role_id', params.user.role_id)\r\n\r\n      }\r\n      if (typeof params.user.photo === 'string' && params.user.photo !== originalUser.photo) {\r\n        formD.set('photo', params.user.photo)\r\n      }\r\n      await axios.patch(`user/update/${params.id}`, formD, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n        toast.success('Данные успешно обновлены', {autoClose: 1500, theme: 'auto'})\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n\r\n    async change_permissions(params: { permissions: any[], id: any }) {\r\n     await axios.post(`user/permission/change-user-permissions/${params.id}`, {\r\n       permissions: params.permissions,\r\n     }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user.permissions = response.data\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n\r\n    async deleteUser(params: { user_id: number | string}, router: Router) {\r\n      axios.delete(`user/delete/${params.user_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data\r\n        router.push('/base/users')\r\n        toast.success('Пользователь успешно удалён', {autoClose: 1500, theme: 'auto'})\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n\r\n    async loadPositionList() {\r\n      axios.get(`user/position/list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.user.position = response.data\r\n      })\r\n    },\r\n\r\n    async loadRoleList() {\r\n      axios.get(`user/role/role-list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.roleList = response.data\r\n      })\r\n    },\r\n\r\n    async loadPermissions() {\r\n      axios.get(`user/permission/list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.permissions = response.data\r\n      })\r\n    }\r\n  }\r\n})"],"names":[],"mappings":"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"}