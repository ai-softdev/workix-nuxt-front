{"version":3,"file":"objects-DMHY1Atj.js","sources":["../../../../stores/objects.ts"],"sourcesContent":["import {defineStore} from \"pinia\";\r\nimport axios from \"~/composables/axios\";\r\nimport {toast} from \"vue3-toastify\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useObjects = defineStore('object', {\r\n  state:() => ({\r\n    objects: {\r\n      id: '',\r\n      name: '',\r\n      address: '',\r\n      email: '',\r\n      description: '',\r\n      files: '',\r\n      participants: {\r\n        id: ''\r\n      }\r\n    }\r\n  }),\r\n  getters: {\r\n    get_objects(object) {\r\n      return this.objects\r\n    }\r\n  },\r\n  actions: {\r\n    async loadObjectList() {\r\n      axios.get(`object/list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.objects = response.data\r\n      })\r\n    },\r\n\r\n    async loadObject(params: {id: number}) {\r\n      axios.get(`object/${params.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.objects = response.data\r\n      })\r\n    },\r\n\r\n    async createObject(params: {objects: any}) {\r\n      let fd = new FormData();\r\n      fd.set('name', params.name)\r\n      fd.set('address', params.address)\r\n      fd.set('email', params.email)\r\n      fd.set('description', params.description)\r\n     if(typeof params.files !== 'string') {\r\n       fd.set('files', params.files)\r\n     }\r\n      axios.post(`object/create`, fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        this.objects = response.data\r\n        toast.success('Компания успешно создана', {autoClose: 1500, theme: 'auto'})\r\n        this.loadObjectList()\r\n      }).catch(e => {\r\n        toast.error(e, {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    }\r\n  }\r\n})"],"names":[],"mappings":";;;;AAIa,MAAA,aAAa,YAAY,UAAU;AAAA,EAC9C,OAAM,OAAO;AAAA,IACX,SAAS;AAAA,MACP,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,aAAa;AAAA,MACb,OAAO;AAAA,MACP,cAAc;AAAA,QACZ,IAAI;AAAA,MACN;AAAA,IACF;AAAA,EAAA;AAAA,EAEF,SAAS;AAAA,IACP,YAAY,QAAQ;AAClB,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,MAAM,iBAAiB;AACrB,YAAM,IAAI,eAAe;AAAA,QACvB,SAAS;AAAA,UACP,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACpE;AAAA,MAAA,CACD,EAAE,KAAK,CAAY,aAAA;AAClB,aAAK,UAAU,SAAS;AAAA,MAAA,CACzB;AAAA,IACH;AAAA,IAEA,MAAM,WAAW,QAAsB;AACrC,YAAM,IAAI,UAAU,OAAO,EAAE,IAAI;AAAA,QAC/B,SAAS;AAAA,UACP,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACpE;AAAA,MAAA,CACD,EAAE,KAAK,CAAY,aAAA;AAClB,aAAK,UAAU,SAAS;AAAA,MAAA,CACzB;AAAA,IACH;AAAA,IAEA,MAAM,aAAa,QAAwB;AACrC,UAAA,KAAK,IAAI;AACV,SAAA,IAAI,QAAQ,OAAO,IAAI;AACvB,SAAA,IAAI,WAAW,OAAO,OAAO;AAC7B,SAAA,IAAI,SAAS,OAAO,KAAK;AACzB,SAAA,IAAI,eAAe,OAAO,WAAW;AACtC,UAAA,OAAO,OAAO,UAAU,UAAU;AAChC,WAAA,IAAI,SAAS,OAAO,KAAK;AAAA,MAC9B;AACO,YAAA,KAAK,iBAAiB,IAAI;AAAA,QAC9B,SAAS;AAAA,UACP,eAAe,UAAU,YAAY,aAAa,QAAQ,OAAO,CAAC;AAAA,QACpE;AAAA,MAAA,CACD,EAAE,KAAK,CAAY,aAAA;AAClB,aAAK,UAAU,SAAS;AACxB,cAAM,QAAQ,4BAA4B,EAAC,WAAW,MAAM,OAAO,QAAO;AAC1E,aAAK,eAAe;AAAA,MAAA,CACrB,EAAE,MAAM,CAAK,MAAA;AACZ,cAAM,MAAM,GAAG,EAAC,WAAW,MAAM,OAAO,QAAO;AAAA,MAAA,CAChD;AAAA,IACH;AAAA,EACF;AACF,CAAC;"}