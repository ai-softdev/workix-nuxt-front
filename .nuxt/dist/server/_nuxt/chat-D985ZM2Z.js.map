{"version":3,"file":"chat-D985ZM2Z.js","sources":["../../../../stores/chat.ts"],"sourcesContent":["import {defineStore} from \"pinia\";\r\nimport axios from \"~/composables/axios\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nimport type {Router} from \"vue-router\";\r\n\r\ntype TClickTimeout = NodeJS.Timeout | null\r\nexport const useChat = defineStore('chat', {\r\n  state: () => ({\r\n    chatList: {},\r\n    userChat: {\r\n      messages: [],\r\n      name: '',\r\n      description: ''\r\n    },\r\n    messageLimit: null,\r\n    messagesMakeRead: [],\r\n    messageUpdate: {},\r\n    messageReplied: {},\r\n    messageText: '',\r\n    searchElem: '',\r\n    messageForwarded: {},\r\n    showForwardInfo: false,\r\n    checkboxForwarded: true,\r\n    showSendWindow: false,\r\n    messagePinned: {},\r\n    arrayPin: [],\r\n    activeChatNav: true,\r\n    windowWidth: 0,\r\n    showPinnedWindow: false,\r\n    showGroupCreate: false,\r\n    showGroupCreateChoice: false,\r\n    showVoiceInfo: false,\r\n    showChatInfo: false,\r\n    showSettingChat: false,\r\n    showChatChangeInfo: false,\r\n    showChatChangeInfoModal: false,\r\n    showChatCropper: false,\r\n    showImageChange: false,\r\n    chatChangeInfo: {\r\n      name: '',\r\n      img: '',\r\n      description: '',\r\n    },\r\n    showChangeWindowChat: false,\r\n    showChatGallery: false,\r\n    showDragInfo: false,\r\n    showUploadWindow: false,\r\n    updateChatName: '',\r\n    updateDescription: '',\r\n    voiceTimer: 0,\r\n    recordingVoice: false,\r\n    isGroup: false,\r\n    clickerTimeout: null as TClickTimeout,\r\n    flag: true,\r\n    displayChat: 'all',\r\n    file: '',\r\n    src: '',\r\n    signature: '',\r\n    fileSizeInfo : false,\r\n    fileReadInfo: false,\r\n    fileChecked: false,\r\n    fileUpload: null,\r\n    results: {\r\n      coordinates: null,\r\n      image: null,\r\n    },\r\n    focusInput: null,\r\n  }),\r\n  getters: {\r\n    get_chat_list: (state) => state.chatList,\r\n    get_user_chat: (state) => state.userChat,\r\n    get_pinned_list: (state) => state.arrayPin\r\n  },\r\n  actions: {\r\n    async loadChatList(params: { page?: number, limit?: number }) {\r\n      await axios.get(`chat/chat-list?page=${params.page}&limit=${params.limit}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.chatList = res.data\r\n      })\r\n    },\r\n    async loadUserChat(params: { id: number, limit: number, page: number }) {\r\n      await axios.get(`chat/${params.id}?limit=${params.limit}&page=${params.page}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.messageLimit = res.data.messages.length\r\n        if (res.data.messages) {\r\n          this.userChat = res.data\r\n          let new_array = res.data.messages.reverse()\r\n          let temp = [...new_array]\r\n          new_array = new_array.map((el: any) => {\r\n            return new Date(el.created_at).toLocaleDateString()\r\n          })\r\n          new_array = [...new Set(new_array)]\r\n          let new_messages = new_array.map((el: string) => {\r\n            return {\r\n              messages: temp.filter(e => {\r\n                return new Date(e.created_at).toLocaleDateString() == el\r\n              }),\r\n              date: el\r\n            }\r\n          })\r\n          this.userChat.messages = new_messages\r\n        }\r\n        // else {\r\n        //   this.userChat.messages = [...res.data.messages.reverse(), ...this.userChat.messages]\r\n        // }\r\n      })\r\n    },\r\n    async loadPinnedList(params: {id: number, page: number, limit: number }) {\r\n      await axios.get(`chat/message/pinned-list/${params.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.arrayPin = res.data\r\n      })\r\n    },\r\n\r\n    async chatUpdate(params: {\r\n      id: any; update: {\r\n        name: any,\r\n        description: any,\r\n        photo: any\r\n      }\r\n    }) {\r\n      let fd = new FormData();\r\n      if(this.updateChatName !== this.userChat.name){\r\n        fd.set('name', params.update.name)\r\n      }\r\n      if(this.updateDescription !== this.userChat.description) {\r\n        fd.set('description', params.update.description)\r\n      }\r\n      if(this.fileUpload) {\r\n        fd.append('photo', params.update.photo, 'image.webp')\r\n      }\r\n      await axios.patch(`chat/update/${params.id}`, fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      })\r\n    },\r\n    async chatDelete(params: { id: number }) {\r\n      await axios.delete(`chat/delete/${params.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n\r\n      })\r\n    },\r\n\r\n    async createMessage(params: { id: number, text: string, message_id?: number, file?: any }) {\r\n      let fd = new FormData();\r\n      if (!this.messageForwarded.id && !this.file) {\r\n        fd.set('text', params.text)\r\n      } else if(!this.signature && !this.messageForwarded.id){\r\n        fd.set('file', params.file)\r\n      } else if(this.signature && this.file){\r\n        fd.set('text', params.text)\r\n        fd.set('file', params.file)\r\n      } else {\r\n        fd.set('text', params.text)\r\n        fd.set('message_id', params.message_id)\r\n      }\r\n      await axios.post(`chat/message/create/${params.id}`, fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res=>{\r\n        this.messageForwarded = {id: null}\r\n      })\r\n    },\r\n    async updateMessage(params: { id: number, text: any }) {\r\n      await axios.patch(`chat/message/update/${params.id}`, {\r\n        text: params.text\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n      })\r\n    },\r\n    async deleteMessage(params: { id: number }) {\r\n      await axios.delete(`chat/message/delete/${params.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n      })\r\n    },\r\n    async createChatUser(params: { users: any, user_id: any, name: string, photo: any }, router: Router) {\r\n      let fd = new FormData()\r\n      if (this.isGroup) {\r\n        fd.set('name', params.name)\r\n        fd.set('users', params.users)\r\n        if (typeof params.photo !== 'string') {\r\n          fd.set('photo', params.photo)\r\n        }\r\n      } else {\r\n        fd.set('user_id', params.user_id)\r\n      }\r\n      await axios.post(`chat/create/private`, fd, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        router.push(`/base/chat/${res.data.id}`)\r\n        console.log(res.data.id)\r\n        this.loadChatList()\r\n      })\r\n    },\r\n\r\n\r\n\r\n    async makeRead(params: { messages: any }) {\r\n      await axios.post(`chat/message/make-read`, {\r\n        messages: params.messages\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.loadChatList()\r\n      })\r\n    },\r\n    async makePinned(params: { messages: any }) {\r\n      await axios.post(`chat/message/make-pinned`, {\r\n        messages: params.messages\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      })\r\n    },\r\n  }\r\n})\r\n"],"names":[],"mappings":"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"}