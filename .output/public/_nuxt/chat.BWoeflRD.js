import{p as l}from"./entry.KsoXMcKH.js";import{a as s,n as o}from"./nuxt-storage.LTSgK-Sl.js";const c=l("chat",{state:()=>({chatList:{},userChat:{messages:[],name:"",description:""},messageLimit:null,messagesMakeRead:[],messageUpdate:{},messageReplied:{},messageText:"",searchElem:"",messageForwarded:{},showForwardInfo:!1,checkboxForwarded:!0,showSendWindow:!1,messagePinned:{},arrayPin:[],activeChatNav:!0,windowWidth:0,showPinnedWindow:!1,showGroupCreate:!1,showGroupCreateChoice:!1,showVoiceInfo:!1,showChatInfo:!1,showSettingChat:!1,showChatChangeInfo:!1,showChatChangeInfoModal:!1,showChatCropper:!1,showImageChange:!1,chatChangeInfo:{name:"",img:"",description:""},showChangeWindowChat:!1,showChatGallery:!1,showDragInfo:!1,showUploadWindow:!1,updateChatName:"",updateDescription:"",voiceTimer:0,recordingVoice:!1,isGroup:!1,clickerTimeout:null,flag:!0,displayChat:"all",file:"",src:"",signature:"",fileSizeInfo:!1,fileReadInfo:!1,fileChecked:!1,fileUpload:null,results:{coordinates:null,image:null},focusInput:null}),getters:{get_chat_list:e=>e.chatList,get_user_chat:e=>e.userChat,get_pinned_list:e=>e.arrayPin},actions:{async loadChatList(e){await s.get(`chat/chat-list?page=${e.page}&limit=${e.limit}`,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{this.chatList=t.data})},async loadUserChat(e){await s.get(`chat/${e.id}?limit=${e.limit}&page=${e.page}`,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{if(this.messageLimit=t.data.messages.length,t.data.messages){this.userChat=t.data;let a=t.data.messages.reverse(),i=[...a];a=a.map(r=>new Date(r.created_at).toLocaleDateString()),a=[...new Set(a)];let h=a.map(r=>({messages:i.filter(n=>new Date(n.created_at).toLocaleDateString()==r),date:r}));this.userChat.messages=h}})},async loadPinnedList(e){await s.get(`chat/message/pinned-list/${e.id}`,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{this.arrayPin=t.data})},async chatUpdate(e){let t=new FormData;this.updateChatName!==this.userChat.name&&t.set("name",e.update.name),this.updateDescription!==this.userChat.description&&t.set("description",e.update.description),this.fileUpload&&t.append("photo",e.update.photo,"image.webp"),await s.patch(`chat/update/${e.id}`,t,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}})},async chatDelete(e){await s.delete(`chat/delete/${e.id}`,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{})},async createMessage(e){let t=new FormData;!this.messageForwarded.id&&!this.file?t.set("text",e.text):!this.signature&&!this.messageForwarded.id?t.set("file",e.file):this.signature&&this.file?(t.set("text",e.text),t.set("file",e.file)):(t.set("text",e.text),t.set("message_id",e.message_id)),await s.post(`chat/message/create/${e.id}`,t,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(a=>{this.messageForwarded={id:null}})},async updateMessage(e){await s.patch(`chat/message/update/${e.id}`,{text:e.text},{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{})},async deleteMessage(e){await s.delete(`chat/message/delete/${e.id}`,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{})},async createChatUser(e,t){let a=new FormData;this.isGroup?(a.set("name",e.name),a.set("users",e.users),typeof e.photo!="string"&&a.set("photo",e.photo)):a.set("user_id",e.user_id),await s.post("chat/create/private",a,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(i=>{t.push(`/base/chat/${i.data.id}`),console.log(i.data.id),this.loadChatList()})},async createChatGroup(e,t){console.log(e.users_str);let a=new FormData;a.set("name",e.name),a.set("users_str",e.users_str),e.photo&&(console.log(e.photo.__proto__),a.set("photo",e.photo)),await s.post("chat/create/group",a,{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(i=>{t.push(`/base/chat/${i.data.id}`),console.log(i.data.id),this.loadChatList()})},async makeRead(e){await s.post("chat/message/make-read",{messages:e.messages},{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}}).then(t=>{this.loadChatList()})},async makePinned(e){await s.post("chat/message/make-pinned",{messages:e.messages},{headers:{Authorization:`Bearer ${o.localStorage.getData("token")}`}})}}});export{c as u};
